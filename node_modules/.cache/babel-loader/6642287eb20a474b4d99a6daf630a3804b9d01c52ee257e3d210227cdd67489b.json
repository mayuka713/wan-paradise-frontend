{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunStoreList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DogRunStoreList = () => {\n  _s();\n  const {\n    prefectureId\n  } = useParams();\n  const [store, setStore] = useState([]);\n  const [type1Tag, setType1Tag] = useState([]);\n  const [type2Tag, setType2Tag] = useState([]);\n  const [selectedPrefecture, setSelectedPrefecture] = useState(\"\");\n  const [selectedTagIds, setSelectedTagIds] = useState([]);\n\n  // タグデータの取得\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/tags`);\n        const data = await response.json();\n\n        // タグを分類\n        const type1 = data.filter(tag => tag.tag_type === 1);\n        const type2 = data.filter(tag => tag.tag_type === 2);\n\n        // 状態を更新\n        setType1Tag(type1);\n        setType2Tag(type2);\n      } catch (error) {\n        console.error(\"タグ情報の取得に失敗しました:\", error);\n      }\n    };\n    fetchTags();\n  }, []);\n\n  // 選択されたタグIDで店舗データを取得\n  useEffect(() => {\n    if (selectedTagIds.length === 0) return;\n    const fetchStoresByTags = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/list/tag/${prefectureId}?tagIds=${selectedTagIds.join(\",\")}`);\n        const data = await response.json();\n        setStore(data);\n      } catch (error) {\n        console.error(\"タグでの店舗データ取得に失敗しました:\", error);\n      }\n    };\n    fetchStoresByTags();\n  }, [selectedTagIds, prefectureId]);\n\n  // 各都道府県の表示名を設定\n  useEffect(() => {\n    const prefectureNames = {\n      \"1\": \"北海道\",\n      \"13\": \"東京\",\n      \"14\": \"神奈川\",\n      \"23\": \"愛知\",\n      \"26\": \"京都\",\n      \"27\": \"大阪\",\n      \"28\": \"兵庫\"\n    };\n    setSelectedPrefecture(prefectureNames[prefectureId !== null && prefectureId !== void 0 ? prefectureId : \"\"] || \"ドッグラン情報がありません\");\n  }, [prefectureId]);\n\n  // タグ選択のハンドリング\n  const handleTagClick = tagId => {\n    setSelectedTagIds(prev => prev.includes(tagId) ? prev.filter(id => id !== tagId) : [...prev, tagId]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\",\n      backgroundColor: \"#FAF3E0\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [selectedPrefecture, \"\\u306E\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u306E\\u6761\\u4EF6\\u3092\\u7D5E\\u308A\\u8FBC\\u3080\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), type1Tag.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTagClick(tag.id),\n        style: {\n          backgroundColor: selectedTagIds.includes(tag.id) ? \"#D1E8E1\" : \"#FFF\",\n          margin: \"5px\"\n        },\n        children: tag.name\n      }, tag.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u306E\\u8A2D\\u5099\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), type2Tag.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTagClick(tag.id),\n        style: {\n          backgroundColor: selectedTagIds.includes(tag.id) ? \"#D1E8E1\" : \"#FFF\",\n          margin: \"5px\"\n        },\n        children: tag.name\n      }, tag.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: store.map(storeItem => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: storeItem.store_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: storeItem.store_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: storeItem.store_img,\n          alt: storeItem.store_name,\n          style: {\n            width: \"200px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, storeItem.store_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(DogRunStoreList, \"4D9l0WNadiErResEbKVQNTvSIP4=\", false, function () {\n  return [useParams];\n});\n_c = DogRunStoreList;\nexport default DogRunStoreList;\nvar _c;\n$RefreshReg$(_c, \"DogRunStoreList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","DogRunStoreList","_s","prefectureId","store","setStore","type1Tag","setType1Tag","type2Tag","setType2Tag","selectedPrefecture","setSelectedPrefecture","selectedTagIds","setSelectedTagIds","fetchTags","response","fetch","data","json","type1","filter","tag","tag_type","type2","error","console","length","fetchStoresByTags","join","prefectureNames","handleTagClick","tagId","prev","includes","id","style","textAlign","padding","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","margin","name","storeItem","store_name","store_description","src","store_img","alt","width","store_id","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunStoreList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ninterface Store {\n  store_id: number;\n  store_name: string;\n  store_description: string;\n  store_address: string;\n  store_phone_number: string;\n  store_url: string;\n  store_img: string;\n}\n\ninterface Tag {\n  id: number;\n  name: string;\n  tag_type: number;\n}\n\nconst DogRunStoreList: React.FC = () => {\n  const { prefectureId } = useParams<{ prefectureId: string }>();\n  const [store, setStore] = useState<Store[]>([]);\n  const [type1Tag, setType1Tag] = useState<Tag[]>([]);\n  const [type2Tag, setType2Tag] = useState<Tag[]>([]);\n  const [selectedPrefecture, setSelectedPrefecture] = useState<string>(\"\");\n  const [selectedTagIds, setSelectedTagIds] = useState<number[]>([]);\n\n  // タグデータの取得\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/tags`);\n        const data: Tag[] = await response.json();\n\n        // タグを分類\n        const type1 = data.filter((tag) => tag.tag_type === 1);\n        const type2 = data.filter((tag) => tag.tag_type === 2);\n\n        // 状態を更新\n        setType1Tag(type1);\n        setType2Tag(type2);\n      } catch (error) {\n        console.error(\"タグ情報の取得に失敗しました:\", error);\n      }\n    };\n\n    fetchTags();\n  }, []);\n\n  // 選択されたタグIDで店舗データを取得\n  useEffect(() => {\n    if (selectedTagIds.length === 0) return;\n\n    const fetchStoresByTags = async () => {\n      try {\n        const response = await fetch(\n          `http://localhost:5003/list/tag/${prefectureId}?tagIds=${selectedTagIds.join(\",\")}`\n        );\n        const data = await response.json();\n        setStore(data);\n      } catch (error) {\n        console.error(\"タグでの店舗データ取得に失敗しました:\", error);\n      }\n    };\n\n    fetchStoresByTags();\n  }, [selectedTagIds, prefectureId]);\n\n  // 各都道府県の表示名を設定\n  useEffect(() => {\n    const prefectureNames: { [key: string]: string } = {\n      \"1\": \"北海道\",\n      \"13\": \"東京\",\n      \"14\": \"神奈川\",\n      \"23\": \"愛知\",\n      \"26\": \"京都\",\n      \"27\": \"大阪\",\n      \"28\": \"兵庫\",\n    };\n    setSelectedPrefecture(\n      prefectureNames[prefectureId ?? \"\"] || \"ドッグラン情報がありません\"\n    );\n  }, [prefectureId]);\n\n  // タグ選択のハンドリング\n  const handleTagClick = (tagId: number) => {\n    setSelectedTagIds((prev) =>\n      prev.includes(tagId) ? prev.filter((id) => id !== tagId) : [...prev, tagId]\n    );\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", padding: \"20px\", backgroundColor: \"#FAF3E0\" }}>\n      <h2>{selectedPrefecture}のドッグラン</h2>\n      <div>\n        <h3>ドッグランの条件を絞り込む</h3>\n        {type1Tag.map((tag) => (\n          <button\n            key={tag.id}\n            onClick={() => handleTagClick(tag.id)}\n            style={{\n              backgroundColor: selectedTagIds.includes(tag.id) ? \"#D1E8E1\" : \"#FFF\",\n              margin: \"5px\",\n            }}\n          >\n            {tag.name}\n          </button>\n        ))}\n      </div>\n      <div>\n        <h3>ドッグランの設備</h3>\n        {type2Tag.map((tag) => (\n          <button\n            key={tag.id}\n            onClick={() => handleTagClick(tag.id)}\n            style={{\n              backgroundColor: selectedTagIds.includes(tag.id) ? \"#D1E8E1\" : \"#FFF\",\n              margin: \"5px\",\n            }}\n          >\n            {tag.name}\n          </button>\n        ))}\n      </div>\n      <div>\n        {store.map((storeItem) => (\n          <div key={storeItem.store_id}>\n            <h3>{storeItem.store_name}</h3>\n            <p>{storeItem.store_description}</p>\n            <img src={storeItem.store_img} alt={storeItem.store_name} style={{ width: \"200px\" }} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DogRunStoreList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}