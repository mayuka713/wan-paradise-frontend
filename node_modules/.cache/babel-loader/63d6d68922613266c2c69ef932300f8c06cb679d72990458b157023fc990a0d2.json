{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/DogRunPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport \"./DogRunPage.css\";\n\n// 都道府県とその日本語名を定義\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst prefectureNames = {\n  hokkaido: \"北海道\",\n  tohoku: \"東北\",\n  kanto: \"関東\",\n  chubu: \"中部\",\n  kansai: \"関西\",\n  chugoku: \"中国\",\n  shikoku: \"四国\",\n  kyushu: \"九州\",\n  okinawa: \"沖縄\"\n};\n\n// DogRunDetailPage コンポーネント\nconst DogRunDetailPage = () => {\n  _s();\n  const {\n    prefecture\n  } = useParams(); // URLから都道府県を取得\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search); // クエリパラメータを取得\n\n  const [selectedOptions, setSelectedOptions] = useState([]);\n\n  // 表示する都道府県名\n  const displayPrefecture = prefectureNames[prefecture || \"\"] || prefecture;\n\n  // クエリパラメータに基づいた条件\n  const hasParking = queryParams.get(\"parking\") === \"true\";\n  const grassType = queryParams.get(\"grass\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dogrun-detail-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: \"wan paradise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Dog run - \", displayPrefecture]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conditions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u8A72\\u5F53\\u3059\\u308B\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u306E\\u7279\\u5FB4:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [hasParking && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u99D0\\u8ECA\\u5834\\u3042\\u308A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 26\n        }, this), grassType === \"artificial\" && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u4EBA\\u5DE5\\u829D\\u751F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 42\n        }, this), grassType === \"natural\" && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u5929\\u7136\\u829D\\u751F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u884C\\u304D\\u305F\\u3044\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u306E\\u5E0C\\u671B\\u6761\\u4EF6\\u3092\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedOptions([...selectedOptions, \"駐車場あり\"]),\n        children: \"\\u99D0\\u8ECA\\u5834\\u3042\\u308A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedOptions([...selectedOptions, \"人工芝生\"]),\n        children: \"\\u4EBA\\u5DE5\\u829D\\u751F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedOptions([...selectedOptions, \"天然芝生\"]),\n        children: \"\\u5929\\u7136\\u829D\\u751F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(DogRunDetailPage, \"dJZJm24q32HBNCR9mSAJy9WGS88=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = DogRunDetailPage;\nexport default DogRunDetailPage;\nvar _c;\n$RefreshReg$(_c, \"DogRunDetailPage\");","map":{"version":3,"names":["React","useState","useParams","useLocation","jsxDEV","_jsxDEV","prefectureNames","hokkaido","tohoku","kanto","chubu","kansai","chugoku","shikoku","kyushu","okinawa","DogRunDetailPage","_s","prefecture","location","queryParams","URLSearchParams","search","selectedOptions","setSelectedOptions","displayPrefecture","hasParking","get","grassType","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/DogRunPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport \"./DogRunPage.css\";\n\n// 都道府県とその日本語名を定義\nconst prefectureNames: { [key: string]: string } = {\n  hokkaido: \"北海道\",\n  tohoku: \"東北\",\n  kanto: \"関東\",\n  chubu: \"中部\",\n  kansai: \"関西\",\n  chugoku: \"中国\",\n  shikoku: \"四国\",\n  kyushu: \"九州\",\n  okinawa: \"沖縄\",\n};\n\n// DogRunDetailPage コンポーネント\nconst DogRunDetailPage: React.FC = () => {\n  const { prefecture } = useParams<{ prefecture: string }>(); // URLから都道府県を取得\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search); // クエリパラメータを取得\n\n  const [selectedOptions, setSelectedOptions] = useState<string[]>([]);\n\n  // 表示する都道府県名\n  const displayPrefecture = prefectureNames[prefecture || \"\"] || prefecture;\n\n  // クエリパラメータに基づいた条件\n  const hasParking = queryParams.get(\"parking\") === \"true\";\n  const grassType = queryParams.get(\"grass\");\n\n  return (\n    <div className=\"dogrun-detail-page\">\n      <header className=\"header\">wan paradise</header>\n\n      {/* 都道府県の表示 */}\n      <h1>Dog run - {displayPrefecture}</h1>\n\n      {/* 条件に基づく動的コンテンツ */}\n      <div className=\"conditions\">\n        <h3>該当するドッグランの特徴:</h3>\n        <ul>\n          {hasParking && <li>駐車場あり</li>}\n          {grassType === \"artificial\" && <li>人工芝生</li>}\n          {grassType === \"natural\" && <li>天然芝生</li>}\n          {/* 他の条件も追加可能 */}\n        </ul>\n      </div>\n\n      {/* 条件選択用のボタン（動的な変更が可能） */}\n      <p>行きたいドッグランの希望条件を選択してください:</p>\n      <div className=\"options-container\">\n        <button onClick={() => setSelectedOptions([...selectedOptions, \"駐車場あり\"])}>\n          駐車場あり\n        </button>\n        <button onClick={() => setSelectedOptions([...selectedOptions, \"人工芝生\"])}>\n          人工芝生\n        </button>\n        <button onClick={() => setSelectedOptions([...selectedOptions, \"天然芝生\"])}>\n          天然芝生\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default DogRunDetailPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}