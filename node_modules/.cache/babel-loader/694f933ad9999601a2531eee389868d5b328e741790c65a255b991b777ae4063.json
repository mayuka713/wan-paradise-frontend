{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Hospital/HospitalStoreList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HospitalStoreList = () => {\n  _s();\n  const {\n    prefectureId\n  } = useParams(); // URLのパラメータから都道府県IDを取得する\n  const [stores, setStores] = useState([]); // 病院リストの状態を定義する\n  const [type4Tag, setType4Tag] = useState([]);\n  const [selectedHospitalTags, setSelectedTagIds] = useState([]);\n  const [selectedPrefecture, setSelectedPrefecture] = useState(\"\");\n\n  // タグの一覧\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/hospital-tags\"); // タグデータを取得\n        const data = await response.json();\n        const type4 = data.filter(tag => tag.tag_type === 3);\n        setType4Tag(type4); // 取得したデータを状態に設定\n      } catch (error) {\n        console.error(\"タグデータの取得に失敗しました:\", error);\n      }\n    };\n    fetchTags();\n  }, []);\n\n  //病院データの取得\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        let url;\n        if (setSelectedTagIds.length === 0) {\n          url = `http://;localhost:5003/stores/list/store-type/${prefectureId}/4`;\n        } else {\n          url = `http://localhost:5003/stores/list/${prefectureId}?tags=${selectedTagIds.join(\",\")}`;\n        }\n        const response = await fetch(url);\n        const data = await response.json();\n        setStores(data);\n      } catch (error) {\n        console.error(\"病院データの取得に失敗しました:\", error);\n      }\n    };\n    fetchStores();\n  }, [prefectureId, selectedTagIds]);\n\n  // 都道府県名を設定\n  useEffect(() => {\n    const prefectureNames = {\n      \"1\": \"札幌\",\n      \"13\": \"東京\",\n      \"14\": \"神奈川\",\n      \"23\": \"愛知\",\n      \"26\": \"京都\",\n      \"27\": \"大阪\",\n      \"27\": \"兵庫\"\n    };\n    if (prefectureId && prefectureId in prefectureNames) {} else {\n      setSelectedPrefecture(\"動物病院の情報がありません\");\n    }\n  }, [prefectureId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u52D5\\u7269\\u75C5\\u9662\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: hospitalTags.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setSelectedHospitalTags(prev => prev.includes(tag.id) ? prev.filter(id => id !== tag.id) : [...prev, tag.id]);\n        },\n        style: {\n          margin: \"5px\"\n        },\n        children: tag.name\n      }, tag.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredHospitalStores.length > 0 ? filteredHospitalStores.map(store => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: store.store_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: store.store_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u4F4F\\u6240: \", store.store_address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u96FB\\u8A71\\u756A\\u53F7: \", store.store_phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: store.store_url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"\\u8A73\\u7D30\\u306F\\u3053\\u3061\\u3089\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)]\n      }, store.store_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u8A72\\u5F53\\u3059\\u308B\\u75C5\\u9662\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(HospitalStoreList, \"c7b0kt4PUvnSmDI7UeObStqG4Uk=\", false, function () {\n  return [useParams];\n});\n_c = HospitalStoreList;\nexport default HospitalStoreList;\nvar _c;\n$RefreshReg$(_c, \"HospitalStoreList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","HospitalStoreList","_s","prefectureId","stores","setStores","type4Tag","setType4Tag","selectedHospitalTags","setSelectedTagIds","selectedPrefecture","setSelectedPrefecture","fetchTags","response","fetch","data","json","type4","filter","tag","tag_type","error","console","fetchStores","url","length","selectedTagIds","join","prefectureNames","children","fileName","_jsxFileName","lineNumber","columnNumber","hospitalTags","map","onClick","setSelectedHospitalTags","prev","includes","id","style","margin","name","filteredHospitalStores","store","store_name","store_description","store_address","store_phone","href","store_url","target","rel","store_id","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Hospital/HospitalStoreList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n\ninterface Hospital {\n  store_id: number;\n  store_name: string;\n  store_description: string;\n  store_address: string;\n  store_phone: number;\n  store_url: string;\n  store_img: string;\n  tags: { id: number; name: string }[];\n}\n\ninterface Tag {\n  id: number;\n  name: string;\n  tag_type: number;\n}\n\nconst HospitalStoreList: React.FC = () => {\n  const { prefectureId } = useParams<{ prefectureId: string }>(); // URLのパラメータから都道府県IDを取得する\n  const [stores, setStores] = useState<Hospital[]>([]);// 病院リストの状態を定義する\n  const [type4Tag, setType4Tag] = useState<Tag[]>([]);\n  const [selectedHospitalTags, setSelectedTagIds] = useState<number[]>([]);\n  const [selectedPrefecture, setSelectedPrefecture] = useState<string>(\"\");\n\n  // タグの一覧\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/hospital-tags\"); // タグデータを取得\n        const data: Tag[] = await response.json();\n        const type4 = data.filter((tag) => tag.tag_type === 3);\n        setType4Tag(type4); // 取得したデータを状態に設定\n      } catch (error) {\n        console.error(\"タグデータの取得に失敗しました:\", error);\n      }\n    };\n    fetchTags();\n  }, []);\n\n  //病院データの取得\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        let url;\n        if (setSelectedTagIds.length === 0 ) {\n          url = `http://;localhost:5003/stores/list/store-type/${prefectureId}/4`;\n        } else {\n          url =`http://localhost:5003/stores/list/${prefectureId}?tags=${selectedTagIds.join(\",\")}`\n        }\n        const response = await fetch(url);\n        const data = await response.json();\n        setStores(data);\n      } catch (error) {\n        console.error(\"病院データの取得に失敗しました:\", error);\n      }\n    }\n    fetchStores();\n  }, [prefectureId, selectedTagIds]);\n  \n\n  // 都道府県名を設定\n  useEffect(() => {\n    const prefectureNames: { [key: string]: string } = {\n      \"1\" : \"札幌\",\n      \"13\": \"東京\",\n      \"14\": \"神奈川\",\n      \"23\": \"愛知\",\n      \"26\": \"京都\",\n      \"27\": \"大阪\",\n      \"27\": \"兵庫\",\n    };\n    if (prefectureId && prefectureId in prefectureNames) {\n\n\n    } else {\n      setSelectedPrefecture(\"動物病院の情報がありません\");\n    }\n  },[prefectureId]);\n\n\n\n  return (\n    <div>\n      <h2>動物病院一覧</h2>\n      {/* 絞り込みタグ */}\n      <div>\n        {hospitalTags.map((tag) => (\n          <button\n            key={tag.id}\n            onClick={() => {\n              setSelectedHospitalTags((prev) =>\n                prev.includes(tag.id)\n                  ? prev.filter((id) => id !== tag.id)\n                  : [...prev, tag.id]\n              );\n            }}\n            style={{\n              margin: \"5px\",\n\n            }}\n          >\n            {tag.name}\n          </button>\n        ))}\n      </div>\n      {/* 病院リスト */}\n      <div>\n        {filteredHospitalStores.length > 0 ? (\n          filteredHospitalStores.map((store) => (\n            <div key={store.store_id}>\n              <h3>{store.store_name}</h3>\n              <p>{store.store_description}</p>\n              <p>住所: {store.store_address}</p>\n              <p>電話番号: {store.store_phone}</p>\n              <a href={store.store_url} target=\"_blank\" rel=\"noopener noreferrer\">詳細はこちら</a>\n            </div>\n          ))\n        ) : (\n          <p>該当する病院がありません。</p>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default HospitalStoreList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}