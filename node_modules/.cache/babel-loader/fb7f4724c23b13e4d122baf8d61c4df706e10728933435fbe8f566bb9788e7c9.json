{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunStoreList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DogRunStoreList = () => {\n  _s();\n  const {\n    prefectureId\n  } = useParams();\n  const [stores, setStores] = useState([]);\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/stores/list/${prefectureId}`);\n        const data = await response.json();\n        console.log(\"storesの取得データ:\", data); // デバッグ用\n\n        if (Array.isArray(data)) {\n          setStores(data);\n        } else {\n          console.error(\"APIレスポンスが配列ではありません\");\n          setStores([]); // 配列でない場合は空配列を設定\n        }\n      } catch (error) {\n        console.error(\"データ取得に失敗しました:\", error);\n        setStores([]); // エラー時も空配列を設定\n      }\n    };\n    fetchStores();\n  }, [prefectureId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\",\n      backgroundColor: \"#FAF3E0\"\n    },\n    children: Array.isArray(stores) && stores.length > 0 ? stores.map(store => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: store.store_img,\n        alt: store.store_name,\n        style: {\n          width: \"400px\",\n          height: \"300px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: store.store_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: store.store_description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u4F4F\\u6240: \", store.store_address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: store.store_url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, store.store_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u5E97\\u8217\\u60C5\\u5831\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\\u3067\\u3057\\u305F\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(DogRunStoreList, \"VQHvvtQrFeYuVu7LdK7NbQoTF1Q=\", false, function () {\n  return [useParams];\n});\n_c = DogRunStoreList;\nexport default DogRunStoreList;\nvar _c;\n$RefreshReg$(_c, \"DogRunStoreList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","DogRunStoreList","_s","prefectureId","stores","setStores","fetchStores","response","fetch","data","json","console","log","Array","isArray","error","style","textAlign","padding","backgroundColor","children","length","map","store","marginBottom","src","store_img","alt","store_name","width","height","fileName","_jsxFileName","lineNumber","columnNumber","store_description","store_address","href","store_url","target","rel","store_id","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunStoreList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ninterface Store {\n  store_id: number;\n  store_name: string;\n  store_description: string;\n  store_address: string;\n  store_phone: number;\n  store_url: string;\n  store_img: string;\n}\n\nconst DogRunStoreList: React.FC = () => {\n  const { prefectureId } = useParams<{ prefectureId: string }>();\n  const [stores, setStores] = useState<Store[]>([]);\n\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        const response = await fetch(\n          `http://localhost:5003/stores/list/${prefectureId}`\n        );\n        const data = await response.json();\n        console.log(\"storesの取得データ:\", data); // デバッグ用\n\n        if (Array.isArray(data)) {\n          setStores(data);\n        } else {\n          console.error(\"APIレスポンスが配列ではありません\");\n          setStores([]); // 配列でない場合は空配列を設定\n        }\n      } catch (error) {\n        console.error(\"データ取得に失敗しました:\", error);\n        setStores([]); // エラー時も空配列を設定\n      }\n    };\n\n    fetchStores();\n  }, [prefectureId]);\n\n  return (\n    <div style={{ textAlign: \"center\", padding: \"20px\", backgroundColor: \"#FAF3E0\" }}>\n      {Array.isArray(stores) && stores.length > 0 ? (\n        stores.map((store) => (\n          <div key={store.store_id} style={{ marginBottom: \"20px\" }}>\n            <img\n              src={store.store_img}\n              alt={store.store_name}\n              style={{ width: \"400px\", height: \"300px\" }}\n            />\n            <h3>{store.store_name}</h3>\n            <p>{store.store_description}</p>\n            <p>住所: {store.store_address}</p>\n            <a\n              href={store.store_url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              URL\n            </a>\n          </div>\n        ))\n      ) : (\n        <p>店舗情報が見つかりませんでした。</p>\n      )}\n    </div>\n  );\n};\n\nexport default DogRunStoreList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}