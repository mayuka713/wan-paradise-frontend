{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useParams,Link}from\"react-router-dom\";import Header from\"../Header\";import Footer from\"../Footer\";import ImageSlider from\"../../ImageSlider\";import\"./HospitalStoreList.css\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const HospitalStoreList=()=>{const{prefectureId}=useParams();const[store,setStore]=useState([]);const[type5Tag,setType5Tag]=useState([]);const[selectedTagIds,setSelectedTagIds]=useState([]);const[selectedPrefecture,setSelectedPrefecture]=useState(\"\");const[error,setError]=useState(null);// タグの一覧を取得\nuseEffect(()=>{const fetchTags=async()=>{try{const response=await fetch(`${process.env.REACT_APP_BASE_URL}/tags`);if(!response.ok){throw new Error(\"タグ情報の取得に失敗しました\");}const data=await response.json();const type5=data.filter(tag=>tag.tag_type===5);setType5Tag(type5);}catch(error){console.error(\"タグ情報の取得に失敗しました:\",error);}};fetchTags();},[]);//------------------------------\n// 都道府県名を設定\nuseEffect(()=>{const prefectureNames={\"1\":\"北海道\",\"13\":\"東京\",\"27\":\"大阪\"};setSelectedPrefecture(prefectureNames[prefectureId!==null&&prefectureId!==void 0?prefectureId:\"\"]||\"動物病院の情報がありません\");},[prefectureId]);//タグ選択の処理\nconst handleTagClick=tagId=>{setSelectedTagIds(prev=>prev.includes(tagId)?prev.filter(id=>id!==tagId):[...prev,tagId]);};// 店舗データの関数\nconst fetchStores=async()=>{try{let url=`${process.env.REACT_APP_BASE_URL}/stores/list/${prefectureId}/4`;if(selectedTagIds.length>0){url=`${process.env.REACT_APP_BASE_URL}stores/list/tag/${prefectureId}/4?tagIds=${selectedTagIds.join(\",\")}`;}const response=await fetch(url);if(!response.ok){throw new Error(\"データ取得に失敗しました\");}const data=await response.json();setStore(data);setError(null);}catch(error){console.error(\"店舗データの取得に失敗しました:\",error);setError(\"該当する動物病院がありません\");}};// ページ読み込み時に店舗データを取得\nuseEffect(()=>{fetchStores();},[prefectureId,selectedTagIds]);//----------------------------\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[selectedPrefecture===\"動物病院の情報がありません\"?/*#__PURE__*/_jsx(\"h2\",{children:selectedPrefecture}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"title\",children:[selectedPrefecture,\"\\u306E\\u52D5\\u7269\\u75C5\\u9662\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"search-tags\",children:\"\\u52D5\\u7269\\u75C5\\u9662\\u306E\\u6761\\u4EF6\\u3092\\u7D5E\\u308A\\u8FBC\\u3080\"}),/*#__PURE__*/_jsx(\"div\",{className:\"type5-tags\",children:type5Tag.map(tag=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleTagClick(tag.id),className:`hospital-tag-button ${selectedTagIds.includes(tag.id)?\"selected\":\"\"}`,children:tag.name},tag.id))}),error?/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}):/*#__PURE__*/_jsx(\"div\",{className:\"store-list\",children:store.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"\\u8A72\\u5F53\\u3059\\u308B\\u75C5\\u9662\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\"}):store.map(storeItem=>{var _storeItem$reviews;const reviews=(_storeItem$reviews=storeItem.reviews)!==null&&_storeItem$reviews!==void 0?_storeItem$reviews:[];const totalRating=reviews.reduce((sum,review)=>sum+(review.rating||0),0);const averageRating=reviews.length>0?totalRating/reviews.length:0;return/*#__PURE__*/_jsxs(Link,{to:`/hospital/detail/${storeItem.store_id}`,className:\"store-item\",children:[/*#__PURE__*/_jsx(ImageSlider,{images:storeItem.store_img}),/*#__PURE__*/_jsxs(\"div\",{className:\"star-rating-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stars-background-storelist\",children:\"\\u2605\\u2605\\u2605\\u2605\\u2605\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stars-filled-storelist\",style:{width:`${averageRating/5*100}%`},children:\"\\u2605\\u2605\\u2605\\u2605\\u2605\"}),/*#__PURE__*/_jsx(\"span\",{className:\"average-rating-value-storelist\",children:averageRating.toFixed(1)})]}),/*#__PURE__*/_jsx(\"h3\",{className:\"store-name-storelist\",children:storeItem.store_name}),/*#__PURE__*/_jsx(\"p\",{children:storeItem.store_description}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u4F4F\\u6240:\"}),\" \",storeItem.store_address]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u96FB\\u8A71:\"}),\" \",storeItem.store_phone_number]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u55B6\\u696D\\u6642\\u9593:\"}),\" \",storeItem.store_opening_hours]})]},storeItem.store_id);})})]}),/*#__PURE__*/_jsx(Footer,{})]})]});};export default HospitalStoreList;","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","Header","Footer","ImageSlider","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","HospitalStoreList","prefectureId","store","setStore","type5Tag","setType5Tag","selectedTagIds","setSelectedTagIds","selectedPrefecture","setSelectedPrefecture","error","setError","fetchTags","response","fetch","process","env","REACT_APP_BASE_URL","ok","Error","data","json","type5","filter","tag","tag_type","console","prefectureNames","handleTagClick","tagId","prev","includes","id","fetchStores","url","length","join","children","className","map","onClick","name","storeItem","_storeItem$reviews","reviews","totalRating","reduce","sum","review","rating","averageRating","to","store_id","images","store_img","style","width","toFixed","store_name","store_description","store_address","store_phone_number","store_opening_hours"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Hospital/HospitalStoreList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport ImageSlider from \"../../ImageSlider\";\nimport \"./HospitalStoreList.css\";\n\ninterface Store {\n  store_id: number;\n  store_name: string;\n  store_description: string;\n  store_address: string;\n  store_opening_hours: string;\n  store_phone_number: string;\n  store_url: string;\n  store_img: string[];\n  reviews: Review[];\n}\n\ninterface Review {\n  id: number;\n  store_id: number;\n  rating: number;\n  comment: string;\n}\n\ninterface Tag {\n  id: number;\n  name: string;\n  tag_type: number;\n}\n\nconst HospitalStoreList: React.FC = () => {\n  const { prefectureId } = useParams<{ prefectureId: string }>();\n  const [store, setStore] = useState<Store[]>([]);\n  const [type5Tag, setType5Tag] = useState<Tag[]>([]);\n  const [selectedTagIds, setSelectedTagIds] = useState<number[]>([]);\n  const [selectedPrefecture, setSelectedPrefecture] = useState<string>(\"\");\n  const [error, setError] = useState<string | null>(null);\n\n  // タグの一覧を取得\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_BASE_URL}/tags`);\n        if (!response.ok) {\n          throw new Error(\"タグ情報の取得に失敗しました\");\n        }\n        const data: Tag[] = await response.json();\n        const type5 = data.filter((tag) => tag.tag_type === 5);\n\n        setType5Tag(type5);\n      } catch (error) {\n        console.error(\"タグ情報の取得に失敗しました:\", error);\n      }\n    };\n    fetchTags();\n  }, []);\n//------------------------------\n  // 都道府県名を設定\n  useEffect(() => {\n    const prefectureNames: { [key: string]: string } = {\n      \"1\": \"北海道\",\n      \"13\": \"東京\",\n      \"27\": \"大阪\",\n    };\n    setSelectedPrefecture(prefectureNames[prefectureId ?? \"\"] || \"動物病院の情報がありません\");\n  }, [prefectureId]);\n\n//タグ選択の処理\n  const handleTagClick = (tagId: number) => {\n    setSelectedTagIds((prev) =>\n      prev.includes(tagId) ? prev.filter((id) => id !== tagId) : [...prev,tagId]);\n  };\n\n// 店舗データの関数\n    const fetchStores = async () => {\n      try {\n        let url = `${process.env.REACT_APP_BASE_URL}/stores/list/${prefectureId}/4`;\n        if (selectedTagIds.length > 0) {\n          url = `${process.env.REACT_APP_BASE_URL}stores/list/tag/${prefectureId}/4?tagIds=${selectedTagIds.join(\",\")}`;\n        }\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(\"データ取得に失敗しました\");\n        }\n        const data = await response.json();\n        setStore(data);\n        setError(null);\n      } catch (error) {\n        console.error(\"店舗データの取得に失敗しました:\", error);\n        setError(\"該当する動物病院がありません\");\n      }\n    };\n    // ページ読み込み時に店舗データを取得\n    useEffect(() => {\n      fetchStores();\n    },[prefectureId, selectedTagIds]);\n\n//----------------------------\n  return (\n    <>\n      <Header />\n      <div className=\"content\">\n        {selectedPrefecture === \"動物病院の情報がありません\" ? (\n          <h2>{selectedPrefecture}</h2>\n        ) : (\n          <>\n            <h2 className=\"title\">{selectedPrefecture}の動物病院</h2>\n            <p className=\"search-tags\">動物病院の条件を絞り込む</p>\n            <div className=\"type5-tags\">\n               {/* type1Tagを表示 */}\n              {type5Tag.map((tag) => (\n                <button\n                  key={tag.id}\n                  onClick={() => handleTagClick(tag.id)}\n                  className={`hospital-tag-button ${selectedTagIds.includes(tag.id) ? \"selected\" : \"\"}`}\n                >\n                  {tag.name}\n                </button>\n              ))}\n            </div>\n\n            {/* エラーメッセージ */}\n            {error ? (\n              <p className=\"error-message\">{error}</p>\n            ) : (\n            <div className=\"store-list\">\n             {/* 店舗がない場合 */}\n              {store.length === 0 ? (\n                <p>該当する病院はありません。</p>\n              ) : (\n                store.map((storeItem) => {\n                  const reviews = storeItem.reviews ?? [];\n                  const totalRating = reviews.reduce((sum, review) => sum + ( review.rating || 0), 0);\n                  const averageRating = reviews.length > 0 ? totalRating / reviews.length : 0;\n                  \n                  return (\n                    <Link to={`/hospital/detail/${storeItem.store_id}`} \n                        className=\"store-item\" \n                          key={storeItem.store_id}>\n                      {/* 店舗画像 */}\n                        <ImageSlider images={storeItem.store_img} />\n\n                      {/* 星評価の表示 */}\n                      <div className=\"star-rating-container\">\n                          <div className=\"stars-background-storelist\">★★★★★</div>\n                          <div className=\"stars-filled-storelist\" style={{ width: `${(averageRating / 5) * 100}%` }}>★★★★★</div>\n                        <span className=\"average-rating-value-storelist\">{averageRating.toFixed(1)}</span>\n                      </div>\n\n                      {/* 店舗情報 */}\n                      <h3 className=\"store-name-storelist\">{storeItem.store_name}</h3>\n                      <p>{storeItem.store_description}</p>\n                      <p><strong>住所:</strong> {storeItem.store_address}</p>\n                      <p><strong>電話:</strong> {storeItem.store_phone_number}</p>\n                      <p><strong>営業時間:</strong> {storeItem.store_opening_hours}</p>\n                    </Link>\n                  );\n                })\n              )}\n            </div>\n            )}\n          </>\n        )}\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nexport default HospitalStoreList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}