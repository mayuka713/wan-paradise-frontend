{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Hospital/HospitalStoreList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HospitalStoreList = () => {\n  _s();\n  const {\n    prefectureId\n  } = useParams(); // URLのパラメータから都道府県IDを取得する\n  const [stores, setStores] = useState([]); // 病院リストの状態を定義する\n  const [hospitalTags, setHospitalTags] = useState([]); //タグ情報の状態を定義する\n  const [selectedHospitalTags, setSelectedHospitalTagIds] = useState([]); // 選択されたタグのID\n  const [selectedPrefecture, setSelectedPrefecture] = useState(\"\");\n\n  // タグデータの取得\n  useEffect(() => {\n    const fetchHospitalTags = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/hospital-tags\"); // タグデータを取得\n        const data = await response.json();\n        setHospitalTags(data); // 取得したデータを状態に設定\n      } catch (error) {\n        console.error(\"タグデータの取得に失敗しました:\", error);\n      }\n    };\n    fetchHospitalTags();\n  }, []);\n\n  //病院データの取得\n  const filteredHospitalStores = stores.filter(store => selectedHospitalTagIds.length === 0 ? true : store.tags.some(tag => selectedHospitalTagIds.includes(tag.id)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u75C5\\u9662\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: hospitalTags.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setSelectedHospitalTagIds(prev => prev.includes(tag.id) ? prev.filter(id => id !== tag.id) : [...prev, tag.id]);\n        },\n        children: tag.name\n      }, tag.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredHospitalStores.map(store => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: store.store_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: store.store_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, store.store_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n};\n_s(HospitalStoreList, \"8kTakXoJDX75/o4EiMaX0yGXi10=\", false, function () {\n  return [useParams];\n});\n_c = HospitalStoreList;\nexport default HospitalStoreList;\nvar _c;\n$RefreshReg$(_c, \"HospitalStoreList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","HospitalStoreList","_s","prefectureId","stores","setStores","hospitalTags","setHospitalTags","selectedHospitalTags","setSelectedHospitalTagIds","selectedPrefecture","setSelectedPrefecture","fetchHospitalTags","response","fetch","data","json","error","console","filteredHospitalStores","filter","store","selectedHospitalTagIds","length","tags","some","tag","includes","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","prev","name","store_name","store_description","store_id","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Hospital/HospitalStoreList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ninterface Hospital {\n  store_id: number;\n  store_name: string;\n  store_description: string;\n  store_address: string;\n  store_phone: number;\n  store_url: string;\n  store_img: string;\n  tags: {id: number; name: string}[];\n}\n\ninterface HospitalTag {\n  id: number;\n  name: string;\n}\n\n  const HospitalStoreList = () => {\n  const { prefectureId } = useParams<{ prefectureId: string }>(); // URLのパラメータから都道府県IDを取得する\n  const [stores, setStores] = useState<Hospital[]>([]);// 病院リストの状態を定義する\n  const [hospitalTags, setHospitalTags] = useState<HospitalTag[]>([]); //タグ情報の状態を定義する\n  const [selectedHospitalTags, setSelectedHospitalTagIds] = useState<number[]>([]); // 選択されたタグのID\n  const [ selectedPrefecture, setSelectedPrefecture] = useState<string>(\"\");\n \n\n // タグデータの取得\n useEffect(() => {\n  const fetchHospitalTags = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5003/hospital-tags\"); // タグデータを取得\n      const data: HospitalTag[] = await response.json();\n      setHospitalTags(data); // 取得したデータを状態に設定\n    } catch (error) {\n      console.error(\"タグデータの取得に失敗しました:\", error);\n    }\n  };\n  fetchHospitalTags();\n}, []);\n\n//病院データの取得\n   const filteredHospitalStores = stores.filter((store) => \n    selectedHospitalTagIds.length === 0 \n    ? true \n    : store.tags.some((tag) => selectedHospitalTagIds.includes(tag.id))\n    );\n  \n \n    return (\n      <div>\n        <h2>病院一覧</h2>\n        {/* 絞り込みタグ */}\n        <div>\n          {hospitalTags.map((tag) => (\n            <button\n              key={tag.id}\n              onClick={() => {\n                setSelectedHospitalTagIds((prev) =>\n                  prev.includes(tag.id)\n                    ? prev.filter((id) => id !== tag.id)\n                    : [...prev, tag.id]\n                );\n              }}\n            >\n              {tag.name}\n            </button>\n          ))}\n        </div>\n        {/* 病院データ */}\n        <div>\n          {filteredHospitalStores.map((store) => (\n            <div key={store.store_id}>\n              <h3>{store.store_name}</h3>\n              <p>{store.store_description}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n\n\n\n\nexport default HospitalStoreList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}