{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunStoreList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DogRunStoreList = () => {\n  _s();\n  const {\n    prefectureId\n  } = useParams();\n  const [stores, setStores] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [selectedTagId, setSelectedTagId] = useState(null);\n  const [selectedPrefecure, setSelectedPrefecture] = useState(\"\");\n\n  // 店舗データの取得\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/stores/list/${prefectureId}`);\n        const data = await response.json();\n        console.log(\"storedata:\", data);\n        setStores(data);\n      } catch (error) {\n        console.error(\"店舗情報の取得に失敗しました:\", error);\n      }\n    };\n    fetchStores();\n  }, [prefectureId]);\n\n  // タグデータの取得\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/tags\");\n        const data = await response.json();\n        setTags(data);\n      } catch (error) {\n        console.error(\"タグ情報の取得に失敗しました:\", error);\n      }\n    };\n    fetchTags();\n  }, []);\n\n  // タグ選択のハンドリング\n  const handleTagClick = tagId => {\n    setSelectedTagId(tagId === selectedTagId ? null : tagId); // 同じタグを選択するとフィルタ解除\n  };\n\n  // フィルタリングされた店舗一覧\n  const filteredStores = selectedTagId ? stores.filter(store => store.tags.some(tag => tag.id === selectedTagId)) : stores;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\",\n      backgroundColor: \"#FAF3E0\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"14px\",\n        marginBottom: \"20px\"\n      },\n      children: \"\\u884C\\u304D\\u305F\\u3044\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u306E\\u6761\\u4EF6\\u3092\\u63A2\\u3059\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        gap: \"10px\"\n      },\n      children: tags.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTagClick(tag.id),\n        style: {\n          backgroundColor: selectedTagId === tag.id ? \"#D1E8E2\" : \"#FFF\",\n          color: \"#333\",\n          padding: \"10px 15px\",\n          border: \"1px solid #333\",\n          borderRadius: \"20px\",\n          cursor: \"pointer\",\n          fontSize: \"14px\"\n        },\n        children: tag.name\n      }, tag.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"30px\"\n      },\n      children: filteredStores.length > 0 ? filteredStores.map(store => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: store.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: store.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u4F4F\\u6240: \", store.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: store.store_url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: store.store_img,\n          alt: store.name,\n          style: {\n            width: \"200px\",\n            height: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)]\n      }, store.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u8A72\\u5F53\\u3059\\u308B\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(DogRunStoreList, \"ltRs/witHcfrS5AXHgO25oM4SwM=\", false, function () {\n  return [useParams];\n});\n_c = DogRunStoreList;\nexport default DogRunStoreList;\nvar _c;\n$RefreshReg$(_c, \"DogRunStoreList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","DogRunStoreList","_s","prefectureId","stores","setStores","tags","setTags","selectedTagId","setSelectedTagId","selectedPrefecure","setSelectedPrefecture","fetchStores","response","fetch","data","json","console","log","error","fetchTags","handleTagClick","tagId","filteredStores","filter","store","some","tag","id","style","textAlign","padding","backgroundColor","children","fontSize","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","flexWrap","justifyContent","gap","map","onClick","color","border","borderRadius","cursor","name","marginTop","length","description","address","href","store_url","target","rel","src","store_img","alt","width","height","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunStoreList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ninterface Store {\n  id: number;\n  name: string;\n  description: string;\n  address: string;\n  phone_number: string;\n  store_url: string;\n  store_img: string;\n  tags: Tag[];\n}\n\ninterface Tag {\n  id: number;\n  name: string;\n}\n\nconst DogRunStoreList: React.FC = () => {\n  const { prefectureId } = useParams<{ prefectureId: string }>();\n  const [stores, setStores] = useState<Store[]>([]);\n  const [tags, setTags] = useState<Tag[]>([]);\n  const [selectedTagId, setSelectedTagId] = useState<number | null>(null);\n  const [selectedPrefecure, setSelectedPrefecture] = useState<string>(\"\");\n\n  // 店舗データの取得\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        const response = await fetch(\n          `http://localhost:5003/stores/list/${prefectureId}`\n        );\n        const data: Store[] = await response.json();\n        console.log(\"storedata:\", data);\n        setStores(data);\n      } catch (error) {\n        console.error(\"店舗情報の取得に失敗しました:\", error);\n      }\n    };\n    fetchStores();\n  }, [prefectureId]);\n\n  // タグデータの取得\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/tags\");\n        const data: Tag[] = await response.json();\n        setTags(data);\n      } catch (error) {\n        console.error(\"タグ情報の取得に失敗しました:\", error);\n      }\n    };\n    fetchTags();\n  }, []);\n\n  // タグ選択のハンドリング\n  const handleTagClick = (tagId: number) => {\n    setSelectedTagId(tagId === selectedTagId ? null : tagId); // 同じタグを選択するとフィルタ解除\n  };\n\n  // フィルタリングされた店舗一覧\n  const filteredStores = selectedTagId\n    ? stores.filter((store) =>\n        store.tags.some((tag) => tag.id === selectedTagId)\n      )\n    : stores;\n\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        padding: \"20px\",\n        backgroundColor: \"#FAF3E0\",\n      }}\n    >\n      <p style={{ fontSize: \"14px\", marginBottom: \"20px\" }}>\n        行きたいドッグランの条件を探す\n      </p>\n\n      {/* タグボタン */}\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          gap: \"10px\",\n        }}\n      >\n        {tags.map((tag) => (\n          <button\n            key={tag.id}\n            onClick={() => handleTagClick(tag.id)}\n            style={{\n              backgroundColor: selectedTagId === tag.id ? \"#D1E8E2\" : \"#FFF\",\n              color: \"#333\",\n              padding: \"10px 15px\",\n              border: \"1px solid #333\",\n              borderRadius: \"20px\",\n              cursor: \"pointer\",\n              fontSize: \"14px\",\n            }}\n          >\n            {tag.name}\n          </button>\n        ))}\n      </div>\n\n      {/* フィルタリングされた店舗表示 */}\n      <div style={{ marginTop: \"30px\" }}>\n        {filteredStores.length > 0 ? (\n          filteredStores.map((store) => (\n            <div key={store.id} style={{ marginBottom: \"20px\" }}>\n              <h3>{store.name}</h3>\n              <p>{store.description}</p>\n              <p>住所: {store.address}</p>\n              <a\n                href={store.store_url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                URL\n              </a>\n              <br />\n              <img\n                src={store.store_img}\n                alt={store.name}\n                style={{ width: \"200px\", height: \"auto\" }}\n              />\n            </div>\n          ))\n        ) : (\n          <p>該当するドッグランが見つかりません。</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DogRunStoreList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}