{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Hospital/HospitalPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./HospitalPage.css\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HospitalPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [stores, setStores] = useState([]);\n  useEffect(() => {\n    const fetchStoreData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/stores/type/random/4\");\n        const data = await response.json();\n        console.log(data);\n        const parsedData = data.map(store => ({\n          ...store,\n          id: store.id || store.store_id,\n          store_img: Array.isArray(store.store_img) ? store.store_img : JSON.parse(store.store_img)\n        }));\n        setStores(parsedData); // 状態を更新\n      } catch (err) {\n        console.error(\"Error fetching store data:\", err);\n      }\n    };\n    fetchStoreData();\n  }, []);\n\n  // データを十分に複製\n  const extendedStores = Array(10).fill(stores).flat();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hospital-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => navigate(\"/hospitalregionsList\"),\n        className: \"search-hospital\",\n        children: \"\\u5168\\u56FD\\u306E\\u52D5\\u7269\\u75C5\\u9662\\u3092\\u63A2\\u3059\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hospital-top-store-list\",\n        children: extendedStores.map((store, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"store-card\",\n          onClick: () => navigate(`/store/detail/${store.id}`),\n          children: [store.store_img.length > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: store.store_img[0],\n            alt: store.store_name,\n            className: \"store-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"slider-store-name\",\n            children: store.store_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"slider-prefecture-name\",\n            children: store.prefecture_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)]\n        }, `${store.id}-${index}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(HospitalPage, \"2oYpR92eD7t+xv9LnjhjpwE5UgE=\", false, function () {\n  return [useNavigate];\n});\n_c = HospitalPage;\nexport default HospitalPage;\nvar _c;\n$RefreshReg$(_c, \"HospitalPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","HospitalPage","_s","navigate","stores","setStores","fetchStoreData","response","fetch","data","json","console","log","parsedData","map","store","id","store_id","store_img","Array","isArray","JSON","parse","err","error","extendedStores","fill","flat","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","index","length","src","alt","store_name","prefecture_name","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Hospital/HospitalPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./HospitalPage.css\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\n\ninterface Store {\n    id: number;\n    store_name: string;\n    description: string;\n    store_img: string[];\n    address: string;\n    phone_number: string;\n    opening_hours: string;\n    store_url: string;\n    prefecture_name: string;\n}\n\nconst HospitalPage: React.FC = () => {\n    const navigate = useNavigate();\n    const [stores, setStores] = useState<Store[]>([]);\n\n    useEffect(() => {\n        const fetchStoreData = async () => {\n            try {\n                const response = await fetch(\"http://localhost:5003/stores/type/random/4\");\n                const data = await response.json();\n                console.log(data);\n\n                const parsedData = data.map((store: any) => ({\n                    ...store,\n                    id: store.id || store.store_id,\n                    store_img: Array.isArray(store.store_img)\n                        ? store.store_img\n                        : JSON.parse(store.store_img),\n                }));\n\n                setStores(parsedData); // 状態を更新\n            } catch (err) {\n                console.error(\"Error fetching store data:\", err);\n            }\n        };\n\n        fetchStoreData();\n    }, []);\n\n    // データを十分に複製\n    const extendedStores = Array(10).fill(stores).flat();\n\n    return (\n        <>\n            <Header />\n            <div className=\"hospital-page-container\">\n                <p onClick={() => navigate(\"/hospitalregionsList\")} className=\"search-hospital\">\n                    全国の動物病院を探す\n                </p>\n                <div className=\"hospital-top-store-list\">\n                    {extendedStores.map((store, index) => (\n                        <div\n                            key={`${store.id}-${index}`}\n                            className=\"store-card\"\n                            onClick={() => navigate(`/store/detail/${store.id}`)}\n                        >\n                            {store.store_img.length > 0 && (\n                                <img\n                                    src={store.store_img[0]}\n                                    alt={store.store_name}\n                                    className=\"store-image\"\n                                />\n                            )}\n                            <h3 className=\"slider-store-name\">{store.store_name}</h3>\n                            <h3 className=\"slider-prefecture-name\">{store.prefecture_name}</h3>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <Footer />\n        </>\n    );\n};\n\nexport default HospitalPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}