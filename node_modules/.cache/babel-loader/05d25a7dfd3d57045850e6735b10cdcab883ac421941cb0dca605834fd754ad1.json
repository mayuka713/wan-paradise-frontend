{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useParams,Link}from\"react-router-dom\";import\"./DogRunStoreList.css\";import Header from\"../Header\";import Footer from\"../Footer\";import\"../Header.css\";import ImageSlider from\"../../ImageSlider\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const DogRunStoreList=()=>{const{prefectureId}=useParams();const[store,setStore]=useState([]);const[type1Tag,setType1Tag]=useState([]);const[type2Tag,setType2Tag]=useState([]);const[selectedPrefecture,setSelectedPrefecture]=useState(\"\");const[selectedTagIds,setSelectedTagIds]=useState([]);const[error,setError]=useState(null);// タグの一覧を取得する\nuseEffect(()=>{const fetchTags=async()=>{try{const response=await fetch(\"http://localhost:5003/tags\");if(!response.ok){throw new Error(\"タグ情報の取得に失敗しました\");}const data=await response.json();const type1=data.filter(tag=>tag.tag_type===1);const type2=data.filter(tag=>tag.tag_type===2);setType1Tag(type1);setType2Tag(type2);setError(null);// エラーをリセット\n}catch(error){console.error(error);setError(\"タグ情報の取得に失敗しました\");}};fetchTags();},[]);// 各都道府県を設定\nuseEffect(()=>{const prefectureNames={\"1\":\"北海道\",\"13\":\"東京\",\"27\":\"大阪\"};setSelectedPrefecture(prefectureNames[prefectureId!==null&&prefectureId!==void 0?prefectureId:\"\"]||\"ドッグラン情報がありません\");},[prefectureId]);// タグ選択の処理\nconst handleTagClick=tagId=>{setSelectedTagIds(prev=>prev.includes(tagId)?prev.filter(id=>id!==tagId):[...prev,tagId]);};// 店舗データの取得\nuseEffect(()=>{const fetchStores=async()=>{try{let url=\"http://localhost:5003/stores/list/\".concat(prefectureId,\"/1\");if(selectedTagIds.length>0){url=\"http://localhost:5003/stores/list/tag/\".concat(prefectureId,\"/1?tagIds=\").concat(selectedTagIds.join(\",\"));}const response=await fetch(url);if(!response.ok){throw new Error(\"データ取得に失敗しました\");}const data=await response.json();setStore(data);setError(null);}catch(error){console.error(\"データ取得中にエラーが発生しました:\",error);setError(\"タグに該当するドッグランがありません\");}};fetchStores();},[prefectureId,selectedTagIds]);store.forEach(storeItem=>{console.log(\"取得した店舗情報:\",storeItem);console.log(\"口コミデータ:\",storeItem.reviews);});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[selectedPrefecture===\"ドッグラン情報がありません\"?/*#__PURE__*/_jsx(\"h2\",{children:selectedPrefecture}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"store-list\",children:[selectedPrefecture,\"\\u306E\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\"]}),/*#__PURE__*/_jsx(\"h3\",{className:\"search-tags\",children:\"\\u884C\\u304D\\u305F\\u3044\\u6761\\u4EF6\\u306E\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u3092\\u63A2\\u3059\"}),/*#__PURE__*/_jsx(\"div\",{className:\"type1-tags\",children:type1Tag.map(tag=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleTagClick(tag.id),className:\"dogrun-tag-button \".concat(selectedTagIds.includes(tag.id)?\"selected\":\"\"),children:tag.name},tag.id))}),/*#__PURE__*/_jsx(\"h3\",{className:\"search-tags2\",children:\"\\u8A2D\\u5099\\u3092\\u63A2\\u3059\"}),/*#__PURE__*/_jsx(\"div\",{className:\"type2-tags\",children:type2Tag.map(tag=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleTagClick(tag.id),className:\"dogrun-tag-button \".concat(selectedTagIds.includes(tag.id)?\"selected\":\"\"),children:tag.name},tag.id))}),error?/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}):/*#__PURE__*/_jsx(\"div\",{className:\"store-list\",children:store.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"\\u8A72\\u5F53\\u3059\\u308B\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\"}):// 店舗がある場合\nstore.map(storeItem=>{var _storeItem$reviews;const reviews=(_storeItem$reviews=storeItem.reviews)!==null&&_storeItem$reviews!==void 0?_storeItem$reviews:[];// 初期値 0 を指定して NaN を防ぐ\nconst totalRating=reviews.reduce((sum,review)=>sum+(review.rating||0),0);// レビューがない場合、平均評価を 0 にする\nconst averageRating=reviews.length>0?totalRating/reviews.length:0;console.log(\"averageRating:\",averageRating);console.log(\"stars width:\",!isNaN(averageRating)?averageRating/5*100:0);return/*#__PURE__*/_jsxs(Link,{to:\"/dogrun/detail/\".concat(storeItem.store_id),className:\"store-item\",children:[/*#__PURE__*/_jsx(ImageSlider,{images:storeItem.store_img}),/*#__PURE__*/_jsxs(\"div\",{className:\"star-rating-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stars-background-storelist\",children:\"\\u2605\\u2605\\u2605\\u2605\\u2605\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stars-filled-storelist\",style:{width:\"\".concat(averageRating/5*100,\"%\")},children:\"\\u2605\\u2605\\u2605\\u2605\\u2605\"}),/*#__PURE__*/_jsx(\"span\",{className:\"average-rating-value-storelist\",children:averageRating.toFixed(1)})]}),/*#__PURE__*/_jsx(\"h3\",{className:\"store-name-storelist\",children:storeItem.store_name}),/*#__PURE__*/_jsx(\"p\",{className:\"store-description\",children:storeItem.store_description}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u4F4F\\u6240: \"}),storeItem.store_address]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u96FB\\u8A71: \"}),\" \",storeItem.store_phone_number]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u55B6\\u696D\\u6642\\u9593: \"}),storeItem.store_opening_hours]})]},storeItem.store_id);})})]}),/*#__PURE__*/_jsx(Footer,{})]})]});};export default DogRunStoreList;","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","Header","Footer","ImageSlider","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DogRunStoreList","prefectureId","store","setStore","type1Tag","setType1Tag","type2Tag","setType2Tag","selectedPrefecture","setSelectedPrefecture","selectedTagIds","setSelectedTagIds","error","setError","fetchTags","response","fetch","ok","Error","data","json","type1","filter","tag","tag_type","type2","console","prefectureNames","handleTagClick","tagId","prev","includes","id","fetchStores","url","concat","length","join","forEach","storeItem","log","reviews","children","className","map","onClick","name","_storeItem$reviews","totalRating","reduce","sum","review","rating","averageRating","isNaN","to","store_id","images","store_img","style","width","toFixed","store_name","store_description","store_address","store_phone_number","store_opening_hours"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunStoreList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport \"./DogRunStoreList.css\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport \"../Header.css\";\nimport ImageSlider from \"../../ImageSlider\";\n\n\ninterface Store {\n  store_id: number;\n  store_name: string;\n  store_description: string;\n  store_address: string;\n  store_opening_hours: number;\n  store_phone_number: string;\n  store_url: string;\n  store_img: string[];\n  reviews?: Review[];\n}\n\ninterface Review {\n  id: number;\n  store_id: number;\n  rating: number;\n  comment: string;\n}\n\ninterface Tag {\n  id: number;\n  name: string;\n  tag_type: number;\n}\n\nconst DogRunStoreList: React.FC = () => {\n  const { prefectureId } = useParams<{ prefectureId: string }>();\n  const [store, setStore] = useState<Store[]>([]);\n  const [type1Tag, setType1Tag] = useState<Tag[]>([]);\n  const [type2Tag, setType2Tag] = useState<Tag[]>([]);\n  const [selectedPrefecture, setSelectedPrefecture] = useState<string>(\"\");\n  const [selectedTagIds, setSelectedTagIds] = useState<number[]>([]);\n  const [error, setError] = useState<string | null>(null);\n\n  // タグの一覧を取得する\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/tags\");\n        if (!response.ok) {\n          throw new Error(\"タグ情報の取得に失敗しました\");\n        }\n        const data: Tag[] = await response.json();\n        const type1 = data.filter((tag) => tag.tag_type === 1);\n        const type2 = data.filter((tag) => tag.tag_type === 2);\n\n        setType1Tag(type1);\n        setType2Tag(type2);\n        setError(null); // エラーをリセット\n      } catch (error) {\n        console.error(error);\n        setError(\"タグ情報の取得に失敗しました\");\n      }\n    };\n    fetchTags();\n  }, []);\n\n  // 各都道府県を設定\n  useEffect(() => {\n    const prefectureNames: { [key: string]: string } = {\n      \"1\": \"北海道\",\n      \"13\": \"東京\",\n      \"27\": \"大阪\",\n    };\n    setSelectedPrefecture(\n      prefectureNames[prefectureId ?? \"\"] || \"ドッグラン情報がありません\");\n  }, [prefectureId]);\n\n  // タグ選択の処理\n  const handleTagClick = (tagId: number) => {\n    setSelectedTagIds((prev) =>\n      prev.includes(tagId) ? prev.filter((id) => id !== tagId) : [...prev, tagId]);\n  };\n\n  // 店舗データの取得\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        let url = `http://localhost:5003/stores/list/${prefectureId}/1`;\n        if (selectedTagIds.length > 0) {\n          url = `http://localhost:5003/stores/list/tag/${prefectureId}/1?tagIds=${selectedTagIds.join(\",\")}`;\n        }\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(\"データ取得に失敗しました\");\n        }\n        const data = await response.json();\n        setStore(data);\n        setError(null);\n      } catch (error) {\n        console.error(\"データ取得中にエラーが発生しました:\", error);\n        setError(\"タグに該当するドッグランがありません\");\n      }\n    };\n    fetchStores();\n  }, [prefectureId, selectedTagIds]);\n  store.forEach((storeItem) => {\n    console.log(\"取得した店舗情報:\", storeItem);\n    console.log(\"口コミデータ:\", storeItem.reviews);\n  });\n\n  return (\n    <>\n      <Header />\n      <div className=\"content\">\n        {selectedPrefecture === \"ドッグラン情報がありません\" ? (\n          <h2>{selectedPrefecture}</h2>\n        ) : (\n          <>\n            <h2 className=\"store-list\">{selectedPrefecture}のドッグラン</h2>\n            <h3 className=\"search-tags\">行きたい条件のドッグランを探す</h3>\n            <div className=\"type1-tags\">\n              {/* type1Tagを表示 */}\n              {type1Tag.map((tag) => (\n                <button\n                  key={tag.id}\n                  onClick={() => handleTagClick(tag.id)}\n                  className={`dogrun-tag-button ${selectedTagIds.includes(tag.id) ? \"selected\" : \"\"\n                    }`}\n                >\n                  {tag.name}\n                </button>\n              ))}\n            </div>\n            {/* type2Tagを表示 */}\n            <h3 className=\"search-tags2\">設備を探す</h3>\n            <div className=\"type2-tags\">\n              {type2Tag.map((tag) => (\n                <button\n                  key={tag.id}\n                  onClick={() => handleTagClick(tag.id)}\n                  className={`dogrun-tag-button ${selectedTagIds.includes(tag.id) ? \"selected\" : \"\"\n                    }`}\n                >\n                  {tag.name}\n                </button>\n              ))}\n            </div>\n            {/* エラーメッセージ */}\n            {error ? (\n              <p className=\"error-message\">{error}</p>\n            ) : (\n              <div className=\"store-list\">\n                {/* 店舗がない場合 */}\n                {store.length === 0 ? (\n                  <p>該当するドッグランはありません。</p>\n                ) : (\n                  // 店舗がある場合\n                  store.map((storeItem) => {\n                    const reviews = storeItem.reviews ?? [];\n                    // 初期値 0 を指定して NaN を防ぐ\n                    const totalRating = reviews.reduce((sum, review) => sum + (review.rating || 0), 0);\n                    // レビューがない場合、平均評価を 0 にする\n                    const averageRating = reviews.length > 0 ? totalRating / reviews.length : 0;\n                    console.log(\"averageRating:\", averageRating);\n                    console.log(\"stars width:\", !isNaN(averageRating) ? (averageRating / 5) * 100 : 0);\n\n                    return (\n                      <Link\n                        to={`/dogrun/detail/${storeItem.store_id}`}\n                        className=\"store-item\"\n                        key={storeItem.store_id}\n                      >\n                        {/* 画像の表示 */}\n                        <ImageSlider images={storeItem.store_img} />\n\n                        {/* 星評価の表示 */}\n                        <div className=\"star-rating-container\">\n                            <div className=\"stars-background-storelist\">★★★★★</div>\n                            <div\n                              className=\"stars-filled-storelist\"\n                              style={{\n                                width: `${(averageRating / 5) * 100}%` \n                                }}> \n                              ★★★★★\n                            </div>\n                          <span className=\"average-rating-value-storelist\">\n                            {averageRating.toFixed(1)}\n                          </span>\n                        </div>\n                        <h3 className=\"store-name-storelist\">{storeItem.store_name}</h3>\n                        <p className=\"store-description\">\n                        {storeItem.store_description}</p>\n                        <p><strong>住所: </strong>{storeItem.store_address}</p>\n                        <p><strong>電話: </strong> {storeItem.store_phone_number}</p>\n                        <p><strong>営業時間: </strong>{storeItem.store_opening_hours}</p>\n                      </Link>\n                    );\n                  })\n                )}\n              </div>\n            )}\n          </>\n        )}\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nexport default DogRunStoreList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}