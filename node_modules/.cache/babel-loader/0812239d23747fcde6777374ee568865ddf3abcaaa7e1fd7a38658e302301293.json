{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nconst HospitalList = () => {\n  _s();\n  const {\n    prefectureId\n  } = useParams(); // URLのパラメータから都道府県IDを取得する\n  const [hospitalList, setHospitalList] = useState([]); // 病院リストの状態を定義する\n  const [hostpitalTags, setHospitalTags] = useState([]); //タグ情報の状態を定義する\n  const [selectedPrefecture, setSelectedPrefecture] = useState(\"\");\n  ;\n};\n\n// タグデータの取得\n_s(HospitalList, \"sO5wzdeUYSEFhOQx6vE5FCNadMc=\", false, function () {\n  return [useParams];\n});\n_c = HospitalList;\nuseEffect(() => {\n  const fetchHospitalTags = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5003/hospital-tags\"); // タグデータを取得\n      const data = await response.json();\n      fetchHospitalTags(data); // 取得したデータを状態に設定\n    } catch (error) {\n      console.error(\"タグデータの取得に失敗しました:\", error);\n    }\n  };\n  fetchHospitalTags();\n}, []);\nexport default HospitalList;\nvar _c;\n$RefreshReg$(_c, \"HospitalList\");","map":{"version":3,"names":["useEffect","useState","useParams","HospitalList","_s","prefectureId","hospitalList","setHospitalList","hostpitalTags","setHospitalTags","selectedPrefecture","setSelectedPrefecture","_c","fetchHospitalTags","response","fetch","data","json","error","console","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Hospital/HospitalStoreList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ninterface Hospital {\n  store_id: number;\n  store_name: string;\n  store_description: string;\n  store_address: string;\n  store_phone: number;\n  store_url: string;\n  store_img: string;\n}\n\ninterface HospitalTag {\n  id: number;\n  name: string;\n}\n\nconst HospitalList: React.FC = () => {\n  const { prefectureId } = useParams<{ prefectureId: string }>(); // URLのパラメータから都道府県IDを取得する\n  const [ hospitalList, setHospitalList  ] = useState<Hospital[]>([]); // 病院リストの状態を定義する\n  const [ hostpitalTags, setHospitalTags ] = useState<HospitalTag[]>([]); //タグ情報の状態を定義する\n  const [ selectedPrefecture, setSelectedPrefecture] = useState<string>(\"\");\n;}\n\n // タグデータの取得\n useEffect(() => {\n  const fetchHospitalTags = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5003/hospital-tags\"); // タグデータを取得\n      const data: HospitalTag[] = await response.json();\n      fetchHospitalTags(data); // 取得したデータを状態に設定\n    } catch (error) {\n      console.error(\"タグデータの取得に失敗しました:\", error);\n    }\n  };\n  fetchHospitalTags();\n}, []);\n\n\n\nexport default HospitalList;\n"],"mappings":";AAAA,SAAgBA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAiB5C,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAa,CAAC,GAAGH,SAAS,CAA2B,CAAC,CAAC,CAAC;EAChE,MAAM,CAAEI,YAAY,EAAEC,eAAe,CAAG,GAAGN,QAAQ,CAAa,EAAE,CAAC,CAAC,CAAC;EACrE,MAAM,CAAEO,aAAa,EAAEC,eAAe,CAAE,GAAGR,QAAQ,CAAgB,EAAE,CAAC,CAAC,CAAC;EACxE,MAAM,CAAES,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAC3E;AAAC,CAAC;;AAED;AAAAG,EAAA,CAPKD,YAAsB;EAAA,QACDD,SAAS;AAAA;AAAAU,EAAA,GAD9BT,YAAsB;AAQ3BH,SAAS,CAAC,MAAM;EACf,MAAMa,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC,CAAC,CAAC;MACrE,MAAMC,IAAmB,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACjDJ,iBAAiB,CAACG,IAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C;EACF,CAAC;EACDL,iBAAiB,CAAC,CAAC;AACrB,CAAC,EAAE,EAAE,CAAC;AAIN,eAAeV,YAAY;AAAC,IAAAS,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}