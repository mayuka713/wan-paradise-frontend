{"ast":null,"code":"var _s = $RefreshSig$();\nconst DogRunDetailPage = () => {\n  _s();\n  const {\n    prefecture\n  } = useParams(); // URLから都道府県を取得\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search); // クエリパラメータを取得\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const displayPrefecture = prefecture && prefecture in regions ? regions[prefecture].name : prefecture;\n  const navigate = useNavigate();\n  const handleOptionClick = option => {\n    setSelectedOptions(prevSelected => prevSelected.includes(option) ? prevSelected.filter(item => item !== option) : [...prevSelected, option]);\n  };\n  const handleSearch = () => {\n    if (selectedOptions.includes(\"駐車場あり\") && selectedOptions.includes(\"人工芝生\")) {\n      navigate(`/dogrun/${prefecture}/parking-artificial-grass`);\n    }\n  };\n  // その他のコード...\n};\n_s(DogRunDetailPage, \"4iGefcQeG/PXLeRjV8C6iEAO/u8=\", true);\n_c = DogRunDetailPage;\nvar _c;\n$RefreshReg$(_c, \"DogRunDetailPage\");","map":{"version":3,"names":["DogRunDetailPage","_s","prefecture","useParams","location","useLocation","queryParams","URLSearchParams","search","selectedOptions","setSelectedOptions","useState","displayPrefecture","regions","name","navigate","useNavigate","handleOptionClick","option","prevSelected","includes","filter","item","handleSearch","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunPage.tsx"],"sourcesContent":["const DogRunDetailPage: React.FC = () => {\n  const { prefecture } = useParams<{ prefecture: string }>(); // URLから都道府県を取得\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search); // クエリパラメータを取得\n  const [selectedOptions, setSelectedOptions] = useState<string[]>([]);\n  const displayPrefecture = (prefecture && prefecture in regions) \n    ? (regions[prefecture as keyof typeof regions].name)\n    : prefecture;\n  const navigate = useNavigate();\n\n  const handleOptionClick = (option: string) => {\n    setSelectedOptions((prevSelected) =>\n      prevSelected.includes(option)\n        ? prevSelected.filter((item) => item !== option)\n        : [...prevSelected, option]\n    );\n  };\n\n  const handleSearch = () => {\n    if (selectedOptions.includes(\"駐車場あり\") && selectedOptions.includes(\"人工芝生\")) {\n      navigate(`/dogrun/${prefecture}/parking-artificial-grass`);\n    }\n  };\n  // その他のコード...\n};\n"],"mappings":";AAAA,MAAMA,gBAA0B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAM;IAAEC;EAAW,CAAC,GAAGC,SAAS,CAAyB,CAAC,CAAC,CAAC;EAC5D,MAAMC,QAAQ,GAAGC,WAAW,CAAC,CAAC;EAC9B,MAAMC,WAAW,GAAG,IAAIC,eAAe,CAACH,QAAQ,CAACI,MAAM,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGC,QAAQ,CAAW,EAAE,CAAC;EACpE,MAAMC,iBAAiB,GAAIV,UAAU,IAAIA,UAAU,IAAIW,OAAO,GACzDA,OAAO,CAACX,UAAU,CAAyB,CAACY,IAAI,GACjDZ,UAAU;EACd,MAAMa,QAAQ,GAAGC,WAAW,CAAC,CAAC;EAE9B,MAAMC,iBAAiB,GAAIC,MAAc,IAAK;IAC5CR,kBAAkB,CAAES,YAAY,IAC9BA,YAAY,CAACC,QAAQ,CAACF,MAAM,CAAC,GACzBC,YAAY,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKJ,MAAM,CAAC,GAC9C,CAAC,GAAGC,YAAY,EAAED,MAAM,CAC9B,CAAC;EACH,CAAC;EAED,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAId,eAAe,CAACW,QAAQ,CAAC,OAAO,CAAC,IAAIX,eAAe,CAACW,QAAQ,CAAC,MAAM,CAAC,EAAE;MACzEL,QAAQ,CAAC,WAAWb,UAAU,2BAA2B,CAAC;IAC5D;EACF,CAAC;EACD;AACF,CAAC;AAACD,EAAA,CAxBID,gBAA0B;AAAAwB,EAAA,GAA1BxB,gBAA0B;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}