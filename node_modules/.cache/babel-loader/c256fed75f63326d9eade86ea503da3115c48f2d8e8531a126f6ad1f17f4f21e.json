{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunReview.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./DogRunReviewList.css\";\nimport \"./Modal.css\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewList = () => {\n  _s();\n  const {\n    storeId\n  } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedRating, setSelectedRating] = useState(0);\n  const [averageRating, setAverageRating] = useState(0);\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/reviews/${storeId}`);\n        const data = await response.json();\n\n        // 明示的に created_at で降順ソート\n        const storedData = data.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());\n\n        // 平均評価を計算\n        const avgRating = storedData.length ? storedData.reduce((sum, review) => sum + review.rating, 0) / storedData.length : 0;\n        setReviews(storedData);\n        setAverageRating(avgRating);\n      } catch (error) {\n        console.error(error);\n        setError(\"口コミの取得に失敗しました\");\n      }\n    };\n    fetchReviews();\n  }, [storeId]);\n  const handleReviewSubmit = async (rating, comment) => {\n    try {\n      console.log(\"storeId:\", storeId);\n      const response = await fetch(\"http://localhost:5003/reviews\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          store_id: storeId,\n          rating,\n          comment\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"コメント投稿に失敗しました\");\n      }\n      const createdReview = await response.json();\n      setReviews(prev => [createdReview, ...prev]);\n      setError(null);\n      setShowModal(false);\n    } catch (error) {\n      console.error(error);\n      setError(\"コメント投稿に失敗しました\");\n    }\n  };\n  const handleStarClick = value => {\n    setSelectedRating(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"average-rating\",\n      children: [1, 2, 3, 4, 5].map(value => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `star ${value <= Math.round(averageRating) ? \"selected\" : \"\"}`,\n        children: \"\\u2605\"\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"review-title\",\n      children: \"\\u53E3\\u30B3\\u30DF\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowModal(true),\n      style: {\n        marginTop: \"20px\"\n      },\n      children: \"\\u6295\\u7A3F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), error && reviews.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 39\n    }, this), reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"review-rating\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u8A55\\u4FA1:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), \" \", review.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"review-comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u53E3\\u30B3\\u30DF:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), \" \", review.comment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, review.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onClose: () => setShowModal(false),\n      onSubmit: (rating, comment) => handleReviewSubmit(rating, comment)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewList, \"Kghx1btlpD5d3r6VSuXJn+QYaKc=\", false, function () {\n  return [useParams];\n});\n_c = ReviewList;\nexport default ReviewList;\nvar _c;\n$RefreshReg$(_c, \"ReviewList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Modal","jsxDEV","_jsxDEV","ReviewList","_s","storeId","reviews","setReviews","error","setError","showModal","setShowModal","selectedRating","setSelectedRating","averageRating","setAverageRating","fetchReviews","response","fetch","data","json","storedData","sort","a","b","Date","created_at","getTime","avgRating","length","reduce","sum","review","rating","console","handleReviewSubmit","comment","log","method","headers","body","JSON","stringify","store_id","ok","Error","createdReview","prev","handleStarClick","value","className","children","map","Math","round","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginTop","color","id","show","onClose","onSubmit","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunReview.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./DogRunReviewList.css\";\nimport \"./Modal.css\";\nimport Modal from \"./Modal\";\n\ntype Review = {\n  id: number;\n  name: string;\n  store_id: number;\n  rating: number;\n  comment: string;\n  date: string;\n  created_at: string;\n  updated_at: string;\n};\n\nconst ReviewList: React.FC = () => {\n  const { storeId } = useParams<{ storeId: string }>();\n  const [reviews, setReviews] = useState<Review[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedRating, setSelectedRating] = useState<number>(0);\n  const [averageRating, setAverageRating] = useState<number>(0);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/reviews/${storeId}`);\n        const data = await response.json();\n\n        // 明示的に created_at で降順ソート\n        const storedData = data.sort(\n          (a: Review, b: Review) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime()\n        );\n\n        // 平均評価を計算\n        const avgRating = storedData.length\n          ? storedData.reduce((sum: number, review: Review) => sum + review.rating, 0) /\n            storedData.length\n          : 0;\n\n        setReviews(storedData);\n        setAverageRating(avgRating);\n      } catch (error) {\n        console.error(error);\n        setError(\"口コミの取得に失敗しました\");\n      }\n    };\n\n    fetchReviews();\n  }, [storeId]);\n\n  const handleReviewSubmit = async (rating: number, comment: string) => {\n    try {\n      console.log(\"storeId:\", storeId);\n\n      const response = await fetch(\"http://localhost:5003/reviews\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          store_id: storeId,\n          rating,\n          comment,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"コメント投稿に失敗しました\");\n      }\n      const createdReview = (await response.json()) as Review;\n\n      setReviews((prev) => [createdReview, ...prev]);\n      setError(null);\n      setShowModal(false);\n    } catch (error) {\n      console.error(error);\n      setError(\"コメント投稿に失敗しました\");\n    }\n  };\n\n  const handleStarClick = (value: number) => {\n    setSelectedRating(value);\n  };\n\n  return (\n    <div className=\"review-container\">\n      {/* 平均評価を表示 */}\n      <div className=\"average-rating\">\n        {[1, 2, 3, 4, 5].map((value) => (\n          <span\n            key={value}\n            className={`star ${value <= Math.round(averageRating) ? \"selected\" : \"\"}`}\n          >\n            ★\n          </span>\n        ))}\n      </div>\n      <h2 className=\"review-title\">口コミ一覧</h2>\n      <button onClick={() => setShowModal(true)} style={{ marginTop: \"20px\" }}>\n        投稿\n      </button>\n      {error && reviews.length > 0 && <p style={{ color: \"red\" }}>{error}</p>}\n      {reviews.map((review) => (\n        <div key={review.id} className=\"review-card\">\n          <p className=\"review-rating\">\n            <strong>評価:</strong> {review.rating}\n          </p>\n          <p className=\"review-comment\">\n            <strong>口コミ:</strong> {review.comment}\n          </p>\n        </div>\n      ))}\n      {showModal && (\n        <Modal\n          show={showModal}\n          onClose={() => setShowModal(false)}\n          onSubmit={(rating: number, comment: string) => handleReviewSubmit(rating, comment)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ReviewList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,wBAAwB;AAC/B,OAAO,aAAa;AACpB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAa5B,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAQ,CAAC,GAAGN,SAAS,CAAsB,CAAC;EACpD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAS,CAAC,CAAC;EAC/D,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAS,CAAC,CAAC;EAE7DD,SAAS,CAAC,MAAM;IACd,MAAMmB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiCb,OAAO,EAAE,CAAC;QACxE,MAAMc,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAElC;QACA,MAAMC,UAAU,GAAGF,IAAI,CAACG,IAAI,CAC1B,CAACC,CAAS,EAAEC,CAAS,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,UAAU,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAIF,IAAI,CAACF,CAAC,CAACG,UAAU,CAAC,CAACC,OAAO,CAAC,CAC9F,CAAC;;QAED;QACA,MAAMC,SAAS,GAAGP,UAAU,CAACQ,MAAM,GAC/BR,UAAU,CAACS,MAAM,CAAC,CAACC,GAAW,EAAEC,MAAc,KAAKD,GAAG,GAAGC,MAAM,CAACC,MAAM,EAAE,CAAC,CAAC,GAC1EZ,UAAU,CAACQ,MAAM,GACjB,CAAC;QAELtB,UAAU,CAACc,UAAU,CAAC;QACtBN,gBAAgB,CAACa,SAAS,CAAC;MAC7B,CAAC,CAAC,OAAOpB,KAAK,EAAE;QACd0B,OAAO,CAAC1B,KAAK,CAACA,KAAK,CAAC;QACpBC,QAAQ,CAAC,eAAe,CAAC;MAC3B;IACF,CAAC;IAEDO,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACX,OAAO,CAAC,CAAC;EAEb,MAAM8B,kBAAkB,GAAG,MAAAA,CAAOF,MAAc,EAAEG,OAAe,KAAK;IACpE,IAAI;MACFF,OAAO,CAACG,GAAG,CAAC,UAAU,EAAEhC,OAAO,CAAC;MAEhC,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DoB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,QAAQ,EAAEtC,OAAO;UACjB4B,MAAM;UACNG;QACF,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACnB,QAAQ,CAAC2B,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;MAClC;MACA,MAAMC,aAAa,GAAI,MAAM7B,QAAQ,CAACG,IAAI,CAAC,CAAY;MAEvDb,UAAU,CAAEwC,IAAI,IAAK,CAACD,aAAa,EAAE,GAAGC,IAAI,CAAC,CAAC;MAC9CtC,QAAQ,CAAC,IAAI,CAAC;MACdE,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACd0B,OAAO,CAAC1B,KAAK,CAACA,KAAK,CAAC;MACpBC,QAAQ,CAAC,eAAe,CAAC;IAC3B;EACF,CAAC;EAED,MAAMuC,eAAe,GAAIC,KAAa,IAAK;IACzCpC,iBAAiB,CAACoC,KAAK,CAAC;EAC1B,CAAC;EAED,oBACE/C,OAAA;IAAKgD,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAE/BjD,OAAA;MAAKgD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAEH,KAAK,iBACzB/C,OAAA;QAEEgD,SAAS,EAAE,QAAQD,KAAK,IAAII,IAAI,CAACC,KAAK,CAACxC,aAAa,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;QAAAqC,QAAA,EAC3E;MAED,GAJOF,KAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNxD,OAAA;MAAIgD,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCxD,OAAA;MAAQyD,OAAO,EAAEA,CAAA,KAAMhD,YAAY,CAAC,IAAI,CAAE;MAACiD,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAV,QAAA,EAAC;IAEzE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRlD,KAAK,IAAIF,OAAO,CAACuB,MAAM,GAAG,CAAC,iBAAI3B,OAAA;MAAG0D,KAAK,EAAE;QAAEE,KAAK,EAAE;MAAM,CAAE;MAAAX,QAAA,EAAE3C;IAAK;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtEpD,OAAO,CAAC8C,GAAG,CAAEpB,MAAM,iBAClB9B,OAAA;MAAqBgD,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1CjD,OAAA;QAAGgD,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC1BjD,OAAA;UAAAiD,QAAA,EAAQ;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC1B,MAAM,CAACC,MAAM;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACJxD,OAAA;QAAGgD,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BjD,OAAA;UAAAiD,QAAA,EAAQ;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC1B,MAAM,CAACI,OAAO;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA,GANI1B,MAAM,CAAC+B,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOd,CACN,CAAC,EACDhD,SAAS,iBACRR,OAAA,CAACF,KAAK;MACJgE,IAAI,EAAEtD,SAAU;MAChBuD,OAAO,EAAEA,CAAA,KAAMtD,YAAY,CAAC,KAAK,CAAE;MACnCuD,QAAQ,EAAEA,CAACjC,MAAc,EAAEG,OAAe,KAAKD,kBAAkB,CAACF,MAAM,EAAEG,OAAO;IAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpF,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtD,EAAA,CAzGID,UAAoB;EAAA,QACJJ,SAAS;AAAA;AAAAoE,EAAA,GADzBhE,UAAoB;AA2G1B,eAAeA,UAAU;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}