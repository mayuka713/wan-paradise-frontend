{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Petshop/PetShopStoreList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PetShopStoreList = () => {\n  _s();\n  const {\n    prefectureId\n  } = useParams();\n  const [stores, setStores] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [selectedPrefecture, setSelectedPrefecture] = useState(\"\");\n  const [selectedTagIds, setSelectedTagIds] = useState([]);\n\n  //店舗データの取得\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/stores/list/${prefectureId}`);\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setStores(data);\n        } else {\n          console.error(\"APIのレスポンスが配列ではありません;\", data);\n          setStores([]);\n        }\n      } catch (error) {\n        console.error(\"店舗情報の取得に失敗しました:\", error);\n        setStores([]);\n      }\n    };\n    fetchStores();\n  }, [prefectureId]);\n\n  //都道府県名の設定\n  useEffect(() => {\n    const prefectureNames = {\n      \"1\": \"北海道\",\n      \"60\": \"東京\",\n      \"61\": \"神奈川\",\n      \"70\": \"愛知\",\n      \"73\": \"京都\",\n      \"74\": \"大阪\",\n      \"75\": \"兵庫\"\n    };\n    setSelectedPrefecture(prefectureNames[prefectureId !== null && prefectureId !== void 0 ? prefectureId : \"\"] || \"ペットショップ情報がありません\");\n  }, [prefectureId]);\n\n  //タグデータの取得\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/tags\");\n        if (!response.ok) {\n          throw new Error(`HTTPエラー: ${response.status}`);\n        }\n        const data = await response.json();\n        setTags(data);\n      } catch (error) {\n        console.error(\"タグの情報に失敗しました:\", error);\n      }\n    };\n    fetchTags();\n  }, []);\n  // タグ選択のハンドリング\n  const handleTagClick = tagId => {\n    setSelectedTagIds(prevSelectedTagIds => prevSelectedTagIds.includes(tagId) ? prevSelectedTagIds.filter(id => id !== tagId) // タグを解除\n    : [...prevSelectedTagIds, tagId] // タグを追加\n    );\n  };\n  // フィルタリングされた店舗一覧\n  const filteredStores = selectedTagIds.length > 0 ? stores.filter(store => store.tags.some(tag => selectedTagIds.includes(tag))) : stores;\n  const isPrefectureSupported = selectedPrefecture !== \"ドッグラン情報がありません\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\",\n      backgroundColor: \"#FAF3E0\"\n    },\n    children: isPrefectureSupported ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedPrefecture, \"\\u306E\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"14px\",\n          marginBottom: \"20px\"\n        },\n        children: \"\\u884C\\u304D\\u305F\\u3044\\u306E\\u6761\\u4EF6\\u3092\\u63A2\\u3059\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          gap: \"10px\"\n        },\n        children: tags.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTagClick(tag.id),\n          style: {\n            backgroundColor: selectedTagIds.includes(tag.id) ? \"#D1E8E2\" : \"#FFF\",\n            color: \"#333\",\n            padding: \"10px 15px\",\n            border: \"1px solid #333\",\n            borderRadius: \"20px\",\n            cursor: \"pointer\",\n            fontSize: \"14px\"\n          },\n          children: tag.name\n        }, tag.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), selectedTagIds.length > 0 && filteredStores.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"30px\"\n        },\n        children: filteredStores.map(store => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: store.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: store.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: store.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: store.store_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: store.store_img,\n            alt: store.name,\n            style: {\n              width: \"200px\",\n              height: \"auto\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }, this)]\n        }, store.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u8A72\\u5F53\\u3059\\u308B\\u30DA\\u30C3\\u30C8\\u30B7\\u30E7\\u30C3\\u30D7\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(PetShopStoreList, \"U0UDItn8a1ldkuj7Ptif8MXvfKI=\", false, function () {\n  return [useParams];\n});\n_c = PetShopStoreList;\nexport default PetShopStoreList;\nvar _c;\n$RefreshReg$(_c, \"PetShopStoreList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","PetShopStoreList","_s","prefectureId","stores","setStores","tags","setTags","selectedPrefecture","setSelectedPrefecture","selectedTagIds","setSelectedTagIds","fetchStores","response","fetch","data","json","Array","isArray","console","error","prefectureNames","fetchTags","ok","Error","status","handleTagClick","tagId","prevSelectedTagIds","includes","filter","id","filteredStores","length","store","some","tag","isPrefectureSupported","style","textAlign","padding","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","marginBottom","display","flexWrap","justifyContent","gap","map","onClick","color","border","borderRadius","cursor","name","marginTop","description","address","href","store_url","target","rel","src","store_img","alt","width","height","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Petshop/PetShopStoreList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ninterface Store {\n  id: number;\n  name: string;\n  description: string;\n  address: string;\n  phone_number: string;\n  store_url: string;\n  store_img: string;\n  tags: number[];\n}\n\ninterface Tag {\n  id: number;\n  name: string;\n}\nconst PetShopStoreList: React.FC = () => {\n  const { prefectureId } = useParams<{ prefectureId: string }>();\n  const [stores, setStores] = useState<Store[]>([]);\n  const [tags, setTags] = useState<Tag[]>([]);\n  const [selectedPrefecture, setSelectedPrefecture] = useState<string>(\"\");\n  const [selectedTagIds, setSelectedTagIds] = useState<number[]>([]);\n\n  //店舗データの取得\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        const response = await fetch (\n          `http://localhost:5003/stores/list/${prefectureId}`\n        );\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setStores(data);\n        } else {\n          console.error(\"APIのレスポンスが配列ではありません;\", data);\n          setStores([]);\n         }\n        } catch (error) {\n          console.error(\"店舗情報の取得に失敗しました:\", error);\n          setStores([]);\n        } \n      };\n  fetchStores();\n  }, [prefectureId]);\n\n  //都道府県名の設定\n  useEffect(() => {\n   const prefectureNames: { [key: string]: string } = {\n    \"1\": \"北海道\",\n    \"60\": \"東京\",\n    \"61\": \"神奈川\",\n    \"70\": \"愛知\",\n    \"73\": \"京都\",\n    \"74\": \"大阪\",\n    \"75\": \"兵庫\",\n   };\n  \n    setSelectedPrefecture(\n      prefectureNames[prefectureId ?? \"\"] || \"ペットショップ情報がありません\"\n    );\n  },[prefectureId] );\n\n  //タグデータの取得\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/tags\");\n      if (!response.ok) {\n        throw new Error(`HTTPエラー: ${response.status}`);\n      }\n      const data: Tag[] = await response.json();\n      setTags(data);\n      }catch(error) {\n        console.error(\"タグの情報に失敗しました:\", error);\n      }\n    };\n  fetchTags();\n  },[]);\n  // タグ選択のハンドリング\n  const handleTagClick = (tagId: number) => {\n    setSelectedTagIds((prevSelectedTagIds) =>\n      prevSelectedTagIds.includes(tagId)\n        ? prevSelectedTagIds.filter((id) => id !== tagId) // タグを解除\n        : [...prevSelectedTagIds, tagId] // タグを追加\n    );\n  };\n  // フィルタリングされた店舗一覧\n  const filteredStores =\n    selectedTagIds.length > 0\n      ? stores.filter((store) =>\n          store.tags.some((tag) => selectedTagIds.includes(tag))\n        )\n      : stores;\n\n  const isPrefectureSupported = selectedPrefecture !== \"ドッグラン情報がありません\";\n\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        padding: \"20px\",\n        backgroundColor: \"#FAF3E0\",\n      }}\n    >\n      {isPrefectureSupported ? (\n        <>\n          <h2>{selectedPrefecture}のドッグラン</h2>\n          <p style={{ fontSize: \"14px\", marginBottom: \"20px\" }}>\n            行きたいの条件を探す\n          </p>\n          {/* タグ選択エリア */}\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"center\",\n              gap: \"10px\",\n            }}\n          >\n            {tags.map((tag) => (\n              <button\n                key={tag.id}\n                onClick={() => handleTagClick(tag.id)}\n                style={{\n                  backgroundColor: selectedTagIds.includes(tag.id)\n                    ? \"#D1E8E2\"\n                    : \"#FFF\",\n                  color: \"#333\",\n                  padding: \"10px 15px\",\n                  border: \"1px solid #333\",\n                  borderRadius: \"20px\",\n                  cursor: \"pointer\",\n                  fontSize: \"14px\",\n                }}\n              >\n                {tag.name}\n              </button>\n            ))}\n          </div>\n\n          {/* フィルタリング結果の表示 */}\n          {selectedTagIds.length > 0 && filteredStores.length > 0 && (\n            <div style={{ marginTop: \"30px\" }}>\n              {filteredStores.map((store) => (\n                <div key={store.id} style={{ marginBottom: \"20px\" }}>\n                  <h3>{store.name}</h3>\n                  <p>{store.description}</p>\n                  <p>{store.address}</p>\n                  <a\n                    href={store.store_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    URL\n                  </a>\n                  <br />\n                  <img\n                    src={store.store_img}\n                    alt={store.name}\n                    style={{ width: \"200px\", height: \"auto\" }}\n                  />\n                </div>\n              ))}\n            </div>\n          )}\n        </>\n      ) : (\n        <p>該当するペットショップが見つかりません。</p>\n      )}\n    </div>\n  );\n};\n\nexport default PetShopStoreList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAiB7C,MAAMC,gBAA0B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAM;IAAEC;EAAa,CAAC,GAAGP,SAAS,CAA2B,CAAC;EAC9D,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAU,EAAE,CAAC;EACjD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAQ,EAAE,CAAC;EAC3C,MAAM,CAACa,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGd,QAAQ,CAAS,EAAE,CAAC;EACxE,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAW,EAAE,CAAC;;EAElE;EACAD,SAAS,CAAC,MAAM;IACd,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qCAAqCX,YAAY,EACnD,CAAC;QACD,MAAMY,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;UACvBV,SAAS,CAACU,IAAI,CAAC;QACjB,CAAC,MAAM;UACLI,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEL,IAAI,CAAC;UAC3CV,SAAS,CAAC,EAAE,CAAC;QACd;MACD,CAAC,CAAC,OAAOe,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;QACvCf,SAAS,CAAC,EAAE,CAAC;MACf;IACF,CAAC;IACLO,WAAW,CAAC,CAAC;EACb,CAAC,EAAE,CAACT,YAAY,CAAC,CAAC;;EAElB;EACAT,SAAS,CAAC,MAAM;IACf,MAAM2B,eAA0C,GAAG;MAClD,GAAG,EAAE,KAAK;MACV,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,IAAI;MACV,IAAI,EAAE;IACP,CAAC;IAEAZ,qBAAqB,CACnBY,eAAe,CAAClB,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAI,EAAE,CAAC,IAAI,iBACzC,CAAC;EACH,CAAC,EAAC,CAACA,YAAY,CAAE,CAAC;;EAElB;EACAT,SAAS,CAAC,MAAM;IACd,MAAM4B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;QAC5D,IAAI,CAACD,QAAQ,CAACU,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,YAAYX,QAAQ,CAACY,MAAM,EAAE,CAAC;QAChD;QACA,MAAMV,IAAW,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACzCT,OAAO,CAACQ,IAAI,CAAC;MACb,CAAC,QAAMK,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACvC;IACF,CAAC;IACHE,SAAS,CAAC,CAAC;EACX,CAAC,EAAC,EAAE,CAAC;EACL;EACA,MAAMI,cAAc,GAAIC,KAAa,IAAK;IACxChB,iBAAiB,CAAEiB,kBAAkB,IACnCA,kBAAkB,CAACC,QAAQ,CAACF,KAAK,CAAC,GAC9BC,kBAAkB,CAACE,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKJ,KAAK,CAAC,CAAC;IAAA,EAChD,CAAC,GAAGC,kBAAkB,EAAED,KAAK,CAAC,CAAC;IACrC,CAAC;EACH,CAAC;EACD;EACA,MAAMK,cAAc,GAClBtB,cAAc,CAACuB,MAAM,GAAG,CAAC,GACrB7B,MAAM,CAAC0B,MAAM,CAAEI,KAAK,IAClBA,KAAK,CAAC5B,IAAI,CAAC6B,IAAI,CAAEC,GAAG,IAAK1B,cAAc,CAACmB,QAAQ,CAACO,GAAG,CAAC,CACvD,CAAC,GACDhC,MAAM;EAEZ,MAAMiC,qBAAqB,GAAG7B,kBAAkB,KAAK,eAAe;EAEpE,oBACEV,OAAA;IACEwC,KAAK,EAAE;MACLC,SAAS,EAAE,QAAQ;MACnBC,OAAO,EAAE,MAAM;MACfC,eAAe,EAAE;IACnB,CAAE;IAAAC,QAAA,EAEDL,qBAAqB,gBACpBvC,OAAA,CAAAE,SAAA;MAAA0C,QAAA,gBACE5C,OAAA;QAAA4C,QAAA,GAAKlC,kBAAkB,EAAC,sCAAM;MAAA;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnChD,OAAA;QAAGwC,KAAK,EAAE;UAAES,QAAQ,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAN,QAAA,EAAC;MAEtD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEJhD,OAAA;QACEwC,KAAK,EAAE;UACLW,OAAO,EAAE,MAAM;UACfC,QAAQ,EAAE,MAAM;UAChBC,cAAc,EAAE,QAAQ;UACxBC,GAAG,EAAE;QACP,CAAE;QAAAV,QAAA,EAEDpC,IAAI,CAAC+C,GAAG,CAAEjB,GAAG,iBACZtC,OAAA;UAEEwD,OAAO,EAAEA,CAAA,KAAM5B,cAAc,CAACU,GAAG,CAACL,EAAE,CAAE;UACtCO,KAAK,EAAE;YACLG,eAAe,EAAE/B,cAAc,CAACmB,QAAQ,CAACO,GAAG,CAACL,EAAE,CAAC,GAC5C,SAAS,GACT,MAAM;YACVwB,KAAK,EAAE,MAAM;YACbf,OAAO,EAAE,WAAW;YACpBgB,MAAM,EAAE,gBAAgB;YACxBC,YAAY,EAAE,MAAM;YACpBC,MAAM,EAAE,SAAS;YACjBX,QAAQ,EAAE;UACZ,CAAE;UAAAL,QAAA,EAEDN,GAAG,CAACuB;QAAI,GAdJvB,GAAG,CAACL,EAAE;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeL,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAGLpC,cAAc,CAACuB,MAAM,GAAG,CAAC,IAAID,cAAc,CAACC,MAAM,GAAG,CAAC,iBACrDnC,OAAA;QAAKwC,KAAK,EAAE;UAAEsB,SAAS,EAAE;QAAO,CAAE;QAAAlB,QAAA,EAC/BV,cAAc,CAACqB,GAAG,CAAEnB,KAAK,iBACxBpC,OAAA;UAAoBwC,KAAK,EAAE;YAAEU,YAAY,EAAE;UAAO,CAAE;UAAAN,QAAA,gBAClD5C,OAAA;YAAA4C,QAAA,EAAKR,KAAK,CAACyB;UAAI;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBhD,OAAA;YAAA4C,QAAA,EAAIR,KAAK,CAAC2B;UAAW;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1BhD,OAAA;YAAA4C,QAAA,EAAIR,KAAK,CAAC4B;UAAO;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtBhD,OAAA;YACEiE,IAAI,EAAE7B,KAAK,CAAC8B,SAAU;YACtBC,MAAM,EAAC,QAAQ;YACfC,GAAG,EAAC,qBAAqB;YAAAxB,QAAA,EAC1B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACJhD,OAAA;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNhD,OAAA;YACEqE,GAAG,EAAEjC,KAAK,CAACkC,SAAU;YACrBC,GAAG,EAAEnC,KAAK,CAACyB,IAAK;YAChBrB,KAAK,EAAE;cAAEgC,KAAK,EAAE,OAAO;cAAEC,MAAM,EAAE;YAAO;UAAE;YAAA5B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC;QAAA,GAhBMZ,KAAK,CAACH,EAAE;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAiBb,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA,eACD,CAAC,gBAEHhD,OAAA;MAAA4C,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC3B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5C,EAAA,CA3JID,gBAA0B;EAAA,QACLL,SAAS;AAAA;AAAA4E,EAAA,GAD9BvE,gBAA0B;AA6JhC,eAAeA,gBAAgB;AAAC,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}