{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunStoreList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DogRunStoreList = () => {\n  _s();\n  const {\n    prefectureId\n  } = useParams();\n  const [stores, setStores] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [selectedTagId, setSelectedTagId] = useState(null);\n  const [selectedPrefecture, setSelectedPrefecture] = useState(\"\");\n  const [selectedTagIds, setSelectedTagIds] = useState([]);\n\n  // 店舗データの取得\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/stores/list/${prefectureId}`);\n        const data = await response.json();\n        console.log(\"storedata:\", data);\n        setStores(data);\n      } catch (error) {\n        console.error(\"店舗情報の取得に失敗しました:\", error);\n      }\n    };\n    fetchStores();\n    const prefectureNames = {\n      \"1\": \"北海道\",\n      \"60\": \"東京\",\n      \"61\": \"神奈川\",\n      \"70\": \"愛知\",\n      \"73\": \"京都\",\n      \"74\": \"大阪\",\n      \"75\": \"兵庫\"\n    };\n    setSelectedPrefecture(prefectureNames[prefectureId !== null && prefectureId !== void 0 ? prefectureId : \"\"] || \"ドッグラン情報がありません\");\n  }, [prefectureId]);\n\n  // タグデータの取得\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/tags\");\n        const data = await response.json();\n        setTags(data);\n      } catch (error) {\n        console.error(\"タグ情報の取得に失敗しました:\", error);\n      }\n    };\n    fetchTags();\n  }, []);\n\n  // タグ選択のハンドリング\n  const handleTagClick = tagId => {\n    setSelectedTagId(tagId === selectedTagId ? null : tagId); // 同じタグを選択するとフィルタ解除\n  };\n\n  // フィルタリングされた店舗一覧\n  const filteredStores = selectedTagId ? stores.filter(store => store.tags.some(tag => tag.id === selectedTagId)) : stores;\n  const isPrefectureSupported = selectedPrefecture !== \"ドッグラン情報がありません\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\",\n      backgroundColor: \"#FAF3E0\"\n    },\n    children: isPrefectureSupported ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedPrefecture, \"\\u306E\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"14px\",\n          marginBottom: \"20px\"\n        },\n        children: \"\\u884C\\u304D\\u305F\\u3044\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u306E\\u6761\\u4EF6\\u3092\\u63A2\\u3059\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          gap: \"10px\"\n        },\n        children: tags.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTagClick(tag.id),\n          style: {\n            backgroundColor: selectedTagId === tag.id ? \"#D1E8E2\" : \"#FFF\",\n            color: \"#333\",\n            padding: \"10px 15px\",\n            border: \"1px solid #333\",\n            borderRadius: \"20px\",\n            cursor: \"pointer\",\n            fontSize: \"14px\"\n          },\n          children: tag.name\n        }, tag.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), filteredStores.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"30px\"\n        },\n        children: filteredStores.map(store => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: store.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: store.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u4F4F\\u6240: \", store.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: store.store_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: store.store_img,\n            alt: store.name,\n            style: {\n              width: \"200px\",\n              height: \"auto\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 19\n          }, this)]\n        }, store.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u60C5\\u5831\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u8A72\\u5F53\\u3059\\u308B\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(DogRunStoreList, \"2kBb3fRjcY9J6dXMRb4OQVH341E=\", false, function () {\n  return [useParams];\n});\n_c = DogRunStoreList;\nexport default DogRunStoreList;\nvar _c;\n$RefreshReg$(_c, \"DogRunStoreList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","DogRunStoreList","_s","prefectureId","stores","setStores","tags","setTags","selectedTagId","setSelectedTagId","selectedPrefecture","setSelectedPrefecture","selectedTagIds","setSelectedTagIds","fetchStores","response","fetch","data","json","console","log","error","prefectureNames","fetchTags","handleTagClick","tagId","filteredStores","filter","store","some","tag","id","isPrefectureSupported","style","textAlign","padding","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","marginBottom","display","flexWrap","justifyContent","gap","map","onClick","color","border","borderRadius","cursor","name","length","marginTop","description","address","href","store_url","target","rel","src","store_img","alt","width","height","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunStoreList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ninterface Store {\n  id: number;\n  name: string;\n  description: string;\n  address: string;\n  phone_number: string;\n  store_url: string;\n  store_img: string;\n  tags: Tag[];\n}\n\ninterface Tag {\n  id: number;\n  name: string;\n}\n\nconst DogRunStoreList: React.FC = () => {\n  const { prefectureId } = useParams<{ prefectureId: string }>();\n  const [stores, setStores] = useState<Store[]>([]);\n  const [tags, setTags] = useState<Tag[]>([]);\n  const [selectedTagId, setSelectedTagId] = useState<number | null>(null);\n  const [selectedPrefecture, setSelectedPrefecture] = useState<string>(\"\");\n  const [selectedTagIds, setSelectedTagIds] = useState<number[]>([]);\n\n  // 店舗データの取得\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        const response = await fetch(\n          `http://localhost:5003/stores/list/${prefectureId}`\n        );\n        const data: Store[] = await response.json();\n        console.log(\"storedata:\", data);\n        setStores(data);\n      } catch (error) {\n        console.error(\"店舗情報の取得に失敗しました:\", error);\n      }\n    };\n    fetchStores();\n\n    const prefectureNames: { [key: string]: string } = {\n      \"1\": \"北海道\",\n      \"60\": \"東京\",\n      \"61\": \"神奈川\",\n      \"70\": \"愛知\",\n      \"73\": \"京都\",\n      \"74\": \"大阪\",\n      \"75\": \"兵庫\",\n    };\n\n    setSelectedPrefecture(\n      prefectureNames[prefectureId ?? \"\"] || \"ドッグラン情報がありません\"\n    );\n  }, [prefectureId]);\n\n  // タグデータの取得\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/tags\");\n        const data: Tag[] = await response.json();\n        setTags(data);\n      } catch (error) {\n        console.error(\"タグ情報の取得に失敗しました:\", error);\n      }\n    };\n    fetchTags();\n  }, []);\n\n  // タグ選択のハンドリング\n  const handleTagClick = (tagId: number) => {\n    setSelectedTagId(tagId === selectedTagId ? null : tagId); // 同じタグを選択するとフィルタ解除\n  };\n\n  // フィルタリングされた店舗一覧\n  const filteredStores = selectedTagId\n    ? stores.filter((store) =>\n        store.tags.some((tag) => tag.id === selectedTagId)\n      )\n    : stores;\n\n  const isPrefectureSupported = selectedPrefecture !== \"ドッグラン情報がありません\";\n\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        padding: \"20px\",\n        backgroundColor: \"#FAF3E0\",\n      }}\n    >\n      {/* 条件付きレンダリング */}\n      {isPrefectureSupported ? (\n        <>\n        <h2>{selectedPrefecture}のドッグラン</h2>\n        <p style={{ fontSize:\"14px\", marginBottom: \"20px\" }}>\n          行きたいドッグランの条件を探す\n        </p>\n        \n          {/* タグボタン */}\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"center\",\n              gap: \"10px\",\n            }}\n          >\n            {tags.map((tag) => (\n              <button\n                key={tag.id}\n                onClick={() => handleTagClick(tag.id)}\n                style={{\n                  backgroundColor: selectedTagId === tag.id ? \"#D1E8E2\" : \"#FFF\",\n                  color: \"#333\",\n                  padding: \"10px 15px\",\n                  border: \"1px solid #333\",\n                  borderRadius: \"20px\",\n                  cursor: \"pointer\",\n                  fontSize: \"14px\",\n                }}\n              >\n                {tag.name}\n              </button>\n            ))}\n          </div>\n           {/* フィルタリングされた店舗表示 */}\n           {filteredStores.length > 0 && (\n            <div style={{ marginTop: \"30px\" }}>\n              {filteredStores.map((store) => (\n                <div key={store.id} style={{ marginBottom: \"20px\" }}>\n                  <h3>{store.name}</h3>\n                  <p>{store.description}</p>\n                  <p>住所: {store.address}</p>\n                  <a\n                    href={store.store_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    URL\n                  </a>\n                  <br />\n                  <img\n                    src={store.store_img}\n                    alt={store.name}\n                    style={{ width: \"200px\", height: \"auto\" }}\n                  />\n                </div>\n              ))}\n            </div>\n          )}\n        </>\n      ) : (\n        <>\n          <h2>ドッグラン情報がありません</h2>\n          <p>該当するドッグランが見つかりません。</p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default DogRunStoreList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}