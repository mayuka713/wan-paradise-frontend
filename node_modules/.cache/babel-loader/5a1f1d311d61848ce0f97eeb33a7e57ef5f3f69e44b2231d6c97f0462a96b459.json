{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunStoreList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DogRunStoreList = () => {\n  _s();\n  const {\n    prefectureId\n  } = useParams();\n  const [Store, setStore] = useState([]);\n  const [Stores, setStores] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [tagsFacility, setTagsFacility] = useState([]);\n  const [selectedPrefecture, setSelectedPrefecture] = useState(\"\");\n  const [selectedTagIds, setSelectedTagIds] = useState([]);\n  const [selectedFacilityTagIds, setSelectedFacilityTagIds] = useState([]);\n\n  // ページを開いた時に何かを表示する\n  useEffect(() => {\n    //データを取ってくる関数を呼び出す\n    const fetchStore = async () => {\n      try {\n        //サーバーにデータをとりに行く\n        const response = await fetch(`http://localhost:5003/stores/list/${prefectureId}`);\n        //サーバーから返ってきたデータをJSONとして読む\n        const data = await response.json();\n        //状態を更新して画面に表示できるようにする\n        setStore(data);\n      } catch (error) {\n        console.error(\"設備タグ情報の取得に失敗しました:\", error);\n      }\n    };\n    fetchStore(); //上で作った関数を呼び出す\n  }, [prefectureId]); //[]はページを開いた時に一回だけやってね。という意味\n\n  // タグや条件に合ったお店を探すお手伝いをしてる\n  useEffect(() => {\n    if (selectedTagIds.length === 0 && selectedFacilityTagIds.length === 0) {\n      setStores([]);\n      return;\n    }\n    const fetchStoresByTags = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/stores/list/${prefectureId}?tags=${selectedTagIds.join(\",\")}`);\n        const data = await response.json();\n        setStores(data);\n        console.log(\"バックエンドからのデータ:\", data);\n      } catch (error) {\n        console.error(\"該当する店舗情報が見つかりませんでした:\", error);\n      }\n    };\n    fetchStoresByTags();\n  }, [selectedTagIds, selectedFacilityTagIds, prefectureId]);\n\n  // 都道府県名の設定\n  useEffect(() => {\n    const prefectureNames = {\n      \"1\": \"北海道\",\n      \"13\": \"東京\",\n      \"14\": \"神奈川\",\n      \"23\": \"愛知\",\n      \"26\": \"京都\",\n      \"27\": \"大阪\",\n      \"28\": \"兵庫\"\n    };\n    setSelectedPrefecture(prefectureNames[prefectureId !== null && prefectureId !== void 0 ? prefectureId : \"\"] || \"ドッグラン情報がありません\");\n  }, [prefectureId]); //都道府県IDが変わったら動いてねという意味\n\n  // タグデータの取得\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/tags\");\n        const data = await response.json();\n        setTags(data);\n      } catch (error) {\n        console.error(\"タグ情報の取得に失敗しました:\", error);\n      }\n    };\n    fetchTags();\n  }, []);\n\n  // 設備タグデータの取得\n  useEffect(() => {\n    const fetchTagsFacility = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/tags_facility\");\n        const data = await response.json();\n        setTagsFacility(data);\n      } catch (error) {\n        console.error(\"設備タグ情報の取得に失敗しました:\", error);\n      }\n    };\n    fetchTagsFacility();\n  }, []);\n\n  //ここから配列の中から特定の条件を満たす要素だけを抽出する\n  // 選択されたタグのリストを更新する\n  const handleTagClick = tagId => {\n    setSelectedTagIds(prevSelectedTagIds => {\n      const updatedTags = prevSelectedTagIds.includes(tagId) ? prevSelectedTagIds.filter(id => id !== tagId) : [...prevSelectedTagIds, tagId];\n      console.log(\"選択されたtagID:\", updatedTags);\n      return updatedTags;\n    });\n  };\n\n  // 設備タグ選択のハンドリング\n  const handleFacilityTagClick = facilityTagId => {\n    setSelectedFacilityTagIds(prevSelectedFacilityTagIds => {\n      const updatedFacilityTags = prevSelectedFacilityTagIds.includes(facilityTagId) ? prevSelectedFacilityTagIds.filter(id => id !== facilityTagId) //あったら削除\n      : [...prevSelectedFacilityTagIds, facilityTagId]; //なかったら追加\n      console.log(\"選択されたfaicilitytagID\", facilitytagId);\n      return updatedFacilityTags; //新しいリストを返す\n    });\n  };\n\n  // フィルタリングされた店舗一覧\n  const filteredStores = Stores.filter(store => Array.isArray(store.tags) && store.tags.some(tag => selectedTagIds.includes(tag.id)) && (selectedFacilityTagIds.length === 0 || selectedFacilityTagIds.some(facilityId => store.tags.some(tag => tag.id === facilityId))));\n  const isPrefectureSupported = selectedPrefecture !== \"ドッグラン情報がありません\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\",\n      backgroundColor: \"#FAF3E0\"\n    },\n    children: isPrefectureSupported ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedPrefecture, \"\\u306E\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"14px\",\n          marginBottom: \"20px\",\n          fontWeight: \"bold\",\n          fontFamily: \"'ゴシック', YuGothic,'游ゴシック体',sans-serif\"\n        },\n        children: \"\\u6761\\u4EF6\\u3092\\u7D5E\\u308A\\u8FBC\\u3080\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          gap: \"10px\"\n        },\n        children: tags.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTagClick(tag.id),\n          style: {\n            backgroundColor: selectedTagIds.includes(tag.id) ? \"#D1E8E1\" : \"#FFF\",\n            color: \"#333\",\n            padding: \"10px 15px\",\n            border: \"1px solid #333\",\n            borderRadius: \"20px\",\n            cursor: \"pointer\",\n            fontSize: \"14px\"\n          },\n          children: tag.name\n        }, tag.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"14px\",\n          marginBottom: \"20px\",\n          fontWeight: \"bold\",\n          fontFamily: \"'ゴシック', YuGothic,'游ゴシック体',sans-serif\"\n        },\n        children: \"\\u8A2D\\u5099\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          gap: \"10px\"\n        },\n        children: tagsFacility.map(facility => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFacilityTagClick(facility.id),\n          style: {\n            backgroundColor: selectedFacilityTagIds.includes(facility.id) ? \"#D1E8E1\" : \"#FFF\",\n            color: \"#333\",\n            padding: \"10px 15px\",\n            border: \"1px solid #333\",\n            borderRadius: \"20px\",\n            cursor: \"pointer\",\n            fontSize: \"14px\"\n          },\n          children: facility.name\n        }, facility.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), Store.map(store => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: store.store_img,\n          alt: store.store_name,\n          style: {\n            width: \"400px\",\n            height: \"300\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u5F15\\u7528\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: store.store_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: store.store_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u4F4F\\u6240: \", store.store_address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: store.store_url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 15\n        }, this)]\n      }, store.store_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u60C5\\u5831\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(DogRunStoreList, \"zqWXz6MOe5kVSjteOswRnpkkUdU=\", false, function () {\n  return [useParams];\n});\n_c = DogRunStoreList;\nexport default DogRunStoreList;\nvar _c;\n$RefreshReg$(_c, \"DogRunStoreList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","DogRunStoreList","_s","prefectureId","Store","setStore","Stores","setStores","tags","setTags","tagsFacility","setTagsFacility","selectedPrefecture","setSelectedPrefecture","selectedTagIds","setSelectedTagIds","selectedFacilityTagIds","setSelectedFacilityTagIds","fetchStore","response","fetch","data","json","error","console","length","fetchStoresByTags","join","log","prefectureNames","fetchTags","fetchTagsFacility","handleTagClick","tagId","prevSelectedTagIds","updatedTags","includes","filter","id","handleFacilityTagClick","facilityTagId","prevSelectedFacilityTagIds","updatedFacilityTags","facilitytagId","filteredStores","store","Array","isArray","some","tag","facilityId","isPrefectureSupported","style","textAlign","padding","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","marginBottom","fontWeight","fontFamily","display","flexWrap","justifyContent","gap","map","onClick","color","border","borderRadius","cursor","name","facility","src","store_img","alt","store_name","width","height","store_description","store_address","href","store_url","target","rel","store_id","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunStoreList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ninterface Store {\n  store_id: number;\n  store_name: string;\n  store_description: string;\n  store_address: string;\n  store_phone: number;\n  store_url: string;\n  store_img: string;\n}\n\ninterface StoreTag {\n  id: number;\n  name: string;\n  description: string;\n  address: string;\n  phone_number: number;\n  store_url: string;\n  store_img: string;\n  tags: Tag[];\n}\n\ninterface Tag {\n  id: number;\n  name: string;\n}\n\ninterface FacilityTag {\n  id: number;\n  name: string;\n}\n\nconst DogRunStoreList: React.FC = () => {\n  const { prefectureId } = useParams<{ prefectureId: string }>();\n  const [Store, setStore] = useState<Store[]>([]);\n  const [Stores, setStores] = useState<StoreTag[]>([]);\n  const [tags, setTags] = useState<Tag[]>([]);\n  const [tagsFacility, setTagsFacility] = useState<FacilityTag[]>([]);\n  const [selectedPrefecture, setSelectedPrefecture] = useState<string>(\"\");\n  const [selectedTagIds, setSelectedTagIds] = useState<number[]>([]);\n  const [selectedFacilityTagIds, setSelectedFacilityTagIds] = useState<\n    number[]\n  >([]);\n\n  // ページを開いた時に何かを表示する\n  useEffect(() => {\n    //データを取ってくる関数を呼び出す\n    const fetchStore = async () => {\n      try {\n        //サーバーにデータをとりに行く\n        const response = await fetch(\n          `http://localhost:5003/stores/list/${prefectureId}`\n        );\n        //サーバーから返ってきたデータをJSONとして読む\n        const data: Store[] = await response.json();\n        //状態を更新して画面に表示できるようにする\n        setStore(data);\n      } catch (error) {\n        console.error(\"設備タグ情報の取得に失敗しました:\", error);\n      }\n    };\n    fetchStore(); //上で作った関数を呼び出す\n  }, [prefectureId]); //[]はページを開いた時に一回だけやってね。という意味\n\n  // タグや条件に合ったお店を探すお手伝いをしてる\n  useEffect(() => {\n    if (selectedTagIds.length === 0 && selectedFacilityTagIds.length === 0) {\n      setStores([]);\n      return;\n    }\n\n    const fetchStoresByTags = async () => {\n      try {\n        const response = await fetch(\n          `http://localhost:5003/stores/list/${prefectureId}?tags=${selectedTagIds.join(\n            \",\"\n          )}`\n        );\n        const data = await response.json();\n        setStores(data);\n        console.log(\"バックエンドからのデータ:\", data);\n      } catch (error) {\n        console.error(\"該当する店舗情報が見つかりませんでした:\", error);\n      }\n    };\n\n    fetchStoresByTags();\n  }, [selectedTagIds, selectedFacilityTagIds, prefectureId]);\n\n  // 都道府県名の設定\n  useEffect(() => {\n    const prefectureNames: { [key: string]: string } = { \n      \"1\": \"北海道\",\n      \"13\": \"東京\",\n      \"14\": \"神奈川\",\n      \"23\": \"愛知\",\n      \"26\": \"京都\",\n      \"27\": \"大阪\",\n      \"28\": \"兵庫\",\n    };\n    setSelectedPrefecture(\n      prefectureNames[prefectureId ?? \"\"] || \"ドッグラン情報がありません\"\n    );\n  }, [prefectureId]);//都道府県IDが変わったら動いてねという意味\n\n  // タグデータの取得\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/tags\");\n        const data: Tag[] = await response.json();\n        setTags(data);\n      } catch (error) {\n        console.error(\"タグ情報の取得に失敗しました:\", error);\n      }\n    };\n    fetchTags();\n  }, []);\n\n  // 設備タグデータの取得\n  useEffect(() => {\n    const fetchTagsFacility = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/tags_facility\");\n        const data: FacilityTag[] = await response.json();\n        setTagsFacility(data);\n      } catch (error) {\n        console.error(\"設備タグ情報の取得に失敗しました:\", error);\n      }\n    };\n    fetchTagsFacility();\n  }, []);\n \n  //ここから配列の中から特定の条件を満たす要素だけを抽出する\n  // 選択されたタグのリストを更新する\n  const handleTagClick = (tagId: number) => { \n    setSelectedTagIds((prevSelectedTagIds) => {\n      const updatedTags = prevSelectedTagIds.includes(tagId)\n      ? prevSelectedTagIds.filter((id) => id !== tagId)\n        : [...prevSelectedTagIds, tagId];\n      console.log(\"選択されたtagID:\",updatedTags);\n      return updatedTags;\n    });\n  };\n\n  // 設備タグ選択のハンドリング\n  const handleFacilityTagClick = (facilityTagId: number) => {\n    setSelectedFacilityTagIds((prevSelectedFacilityTagIds) => {\n      const updatedFacilityTags = prevSelectedFacilityTagIds.includes(facilityTagId)\n        ? prevSelectedFacilityTagIds.filter((id) => id !== facilityTagId)//あったら削除\n        : [...prevSelectedFacilityTagIds, facilityTagId];//なかったら追加\n        console.log(\"選択されたfaicilitytagID\",facilitytagId);\n      return updatedFacilityTags;//新しいリストを返す\n    });\n  };\n\n  // フィルタリングされた店舗一覧\n  const filteredStores = Stores.filter(\n    (store) =>\n      Array.isArray(store.tags) &&\n      store.tags.some((tag) => selectedTagIds.includes(tag.id)) &&\n      (selectedFacilityTagIds.length === 0 ||\n        selectedFacilityTagIds.some((facilityId) =>\n          store.tags.some((tag) => tag.id === facilityId)\n        ))\n  );\n\n  const isPrefectureSupported =\n    selectedPrefecture !== \"ドッグラン情報がありません\";\n\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        padding: \"20px\",\n        backgroundColor: \"#FAF3E0\",\n      }}\n    >\n      {isPrefectureSupported ? (\n        <>\n          <h2>{selectedPrefecture}のドッグラン</h2>\n          <p\n            style={{\n              fontSize: \"14px\",\n              marginBottom: \"20px\",\n              fontWeight: \"bold\",\n              fontFamily: \"'ゴシック', YuGothic,'游ゴシック体',sans-serif\",\n            }}\n          >\n            条件を絞り込む\n          </p>\n\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"center\",\n              gap: \"10px\",\n            }}\n          >\n            {tags.map((tag) => (\n              <button\n                key={tag.id}\n                onClick={() => handleTagClick(tag.id)}\n                style={{\n                  backgroundColor: selectedTagIds.includes(tag.id)\n                    ? \"#D1E8E1\"\n                    : \"#FFF\",\n                  color: \"#333\",\n                  padding: \"10px 15px\",\n                  border: \"1px solid #333\",\n                  borderRadius: \"20px\",\n                  cursor: \"pointer\",\n                  fontSize: \"14px\",\n                }}\n              >\n                {tag.name}\n              </button>\n            ))}\n          </div>\n\n          <p\n            style={{\n              fontSize: \"14px\",\n              marginBottom: \"20px\",\n              fontWeight: \"bold\",\n              fontFamily: \"'ゴシック', YuGothic,'游ゴシック体',sans-serif\",\n            }}\n          >\n            設備\n          </p>\n\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"center\",\n              gap: \"10px\",\n            }}\n          >\n            {tagsFacility.map((facility) => (\n              <button\n                key={facility.id}\n                onClick={() => handleFacilityTagClick(facility.id)}\n                style={{\n                  backgroundColor: selectedFacilityTagIds.includes(facility.id)\n                    ? \"#D1E8E1\"\n                    : \"#FFF\",\n                  color: \"#333\",\n                  padding: \"10px 15px\",\n                  border: \"1px solid #333\",\n                  borderRadius: \"20px\",\n                  cursor: \"pointer\",\n                  fontSize: \"14px\",\n                }}\n              >\n                {facility.name}\n              </button>\n            ))}\n          </div>\n\n          {Store.map((store) => (\n            <div key={store.store_id} style={{ marginBottom: \"20px\" }}>\n              <img\n                src={store.store_img}\n                alt={store.store_name}\n                style={{ width: \"400px\", height: \"300\" }}\n              />\n              <p>引用</p>\n              <h3>{store.store_name}</h3>\n              <p>{store.store_description}</p>\n              <p>住所: {store.store_address}</p>\n              <br />\n              <a\n                href={store.store_url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                URL\n              </a>\n            </div>\n          ))}\n        </>\n      ) : (\n        <>\n          <h2>ドッグラン情報がありません</h2>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default DogRunStoreList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}