{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/HamburgerMenu.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./HamburgerMenu.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HamburgerMenu = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const menuItems = [{\n    label: \"お気に入り\",\n    link: \"/favorites\"\n  }, {\n    label: \"ドッグラン\",\n    link: \"/dogrun\"\n  }, {\n    label: \"ドッグカフェ\",\n    link: \"/dogcafe\"\n  }, {\n    label: \"ペットショップ\",\n    link: \"/petshop\"\n  }, {\n    label: \"動物病院\",\n    link: \"/hospital\"\n  }];\n  const togglwMenu = () => {\n    setIsOpen(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hamburger-menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"burger\",\n      htmlFor: \"burger\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"burger\",\n        onClick: togglwMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: `menu ${isOpen ? \"visible\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: menuItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item.link,\n            children: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(HamburgerMenu, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = HamburgerMenu;\nexport default HamburgerMenu;\nvar _c;\n$RefreshReg$(_c, \"HamburgerMenu\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HamburgerMenu","_s","isOpen","setIsOpen","menuItems","label","link","togglwMenu","prev","className","children","htmlFor","type","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","href","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/HamburgerMenu.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./HamburgerMenu.css\";\n\nconst HamburgerMenu = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const menuItems = [\n    { label: \"お気に入り\", link: \"/favorites\" },\n    { label: \"ドッグラン\", link: \"/dogrun\" },\n    { label: \"ドッグカフェ\", link: \"/dogcafe\" },\n    { label: \"ペットショップ\", link: \"/petshop\" },\n    { label: \"動物病院\", link: \"/hospital\" },\n\n  ];\n  const togglwMenu = () => {\n    setIsOpen((prev) => !prev);\n\n  };\n  return (\n    <div className=\"hamburger-menu\">\n      <label className=\"burger\" htmlFor=\"burger\">\n        <input type=\"checkbox\" id=\"burger\" onClick={togglwMenu} />\n        <span />\n        <span />\n        <span />\n      </label>\n      <nav className={`menu ${isOpen ? \"visible\" : \"\"}`}>\n        <ul>\n          {/*メニュー項目をループで表示*/}\n          {menuItems.map((item, index) => (\n            <li key={index}>\n              <a href={item.link}>{item.label}</a>\n            </li>\n          ))}\n\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default HamburgerMenu;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMO,SAAS,GAAG,CAChB;IAAEC,KAAK,EAAE,OAAO;IAAEC,IAAI,EAAE;EAAa,CAAC,EACtC;IAAED,KAAK,EAAE,OAAO;IAAEC,IAAI,EAAE;EAAU,CAAC,EACnC;IAAED,KAAK,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAW,CAAC,EACrC;IAAED,KAAK,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAW,CAAC,EACtC;IAAED,KAAK,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAY,CAAC,CAErC;EACD,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBJ,SAAS,CAAEK,IAAI,IAAK,CAACA,IAAI,CAAC;EAE5B,CAAC;EACD,oBACET,OAAA;IAAKU,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BX,OAAA;MAAOU,SAAS,EAAC,QAAQ;MAACE,OAAO,EAAC,QAAQ;MAAAD,QAAA,gBACxCX,OAAA;QAAOa,IAAI,EAAC,UAAU;QAACC,EAAE,EAAC,QAAQ;QAACC,OAAO,EAAEP;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1DnB,OAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRnB,OAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRnB,OAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACRnB,OAAA;MAAKU,SAAS,EAAE,QAAQP,MAAM,GAAG,SAAS,GAAG,EAAE,EAAG;MAAAQ,QAAA,eAChDX,OAAA;QAAAW,QAAA,EAEGN,SAAS,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBtB,OAAA;UAAAW,QAAA,eACEX,OAAA;YAAGuB,IAAI,EAAEF,IAAI,CAACd,IAAK;YAAAI,QAAA,EAAEU,IAAI,CAACf;UAAK;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC,GAD7BG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CApCID,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAsCnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}