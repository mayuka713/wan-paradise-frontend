{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/HospitalPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport \"./HospitalPage.css\";\nimport hospital from \"../assets/images/hospital.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst prefectureNames = {\n  hokkaido: \"北海道\",\n  tohoku: \"東北地方\",\n  kanto: \"関東地方\",\n  chubu: \"中部地方\",\n  kansai: \"関西地方\",\n  chugoku: \"中国地方\",\n  shikoku: \"四国地方\",\n  kyushu: \"九州地方\",\n  okinawa: \"沖縄\"\n};\n\n// hospital コンポーネント（都道府県別のページ）\nconst HospitalPage = () => {\n  _s();\n  const {\n    prefecture\n  } = useParams(); // URLから都道府県を取得\n  const location = useLocation();\n  //useNavigateはページ遷移を行うためのフック\n  const navigate = useNavigate();\n  const queryParams = new URLSearchParams(location.search);\n  const [selectedOptions, setselectedOptions] = useState([]);\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n\n  // ドロップダウンの表示/非表示を切り替える\n  const toggleDropdown = () => {\n    setIsDropdownVisible(!isDropdownVisible);\n  };\n  // 条件の選択/解除\n  const handleOptionClick = option => {\n    setselectedOptions(prevSelected => prevSelected.includes(option) ? prevSelected.filter(item => item == option) // 選択済みのオプションを削除\n    : [...prevSelected, option] // 新しいオプションを追加\n    );\n  };\n  // 都道府県のリンククリック時の処理\n  const handlePrefectureClick = prefectureKey => {\n    setSelectedOptions(prevSelected => prevSelected.includes(Option) ? prevSelected.filter(item => item !== Option) // 選択済みのオプションを削除\n    : [...prevSelected, Option] // 新しいオプションを追加\n    );\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hospital-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        style: {\n          textDecoration: \"none\",\n          color: \"black\"\n        },\n        children: \"wan paradise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u52D5\\u7269\\u75C5\\u9662\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-container\",\n      onClick: toggleDropdown,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"hospital-title\",\n        children: \"\\u5168\\u56FD\\u306E\\u52D5\\u7269\\u75C5\\u9662\\u3092\\u63A2\\u3059\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hospital-img\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: hospital,\n          alt: \"\\u75C5\\u9662\\u306E\\u30A4\\u30E9\\u30B9\\u30C8\",\n          className: \"hospital-illust\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), isDropdownVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(prefectureNames).map(key => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/hospital/${key}`,\n            children: prefectureNames[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), prefectureNames[key]]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(HospitalPage, \"xWmN2BLcYEYIo6iqu7IxuISPDMM=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = HospitalPage;\nexport default HospitalPage;\nvar _c;\n$RefreshReg$(_c, \"HospitalPage\");","map":{"version":3,"names":["React","useState","Link","useParams","useNavigate","useLocation","hospital","jsxDEV","_jsxDEV","prefectureNames","hokkaido","tohoku","kanto","chubu","kansai","chugoku","shikoku","kyushu","okinawa","HospitalPage","_s","prefecture","location","navigate","queryParams","URLSearchParams","search","selectedOptions","setselectedOptions","isDropdownVisible","setIsDropdownVisible","toggleDropdown","handleOptionClick","option","prevSelected","includes","filter","item","handlePrefectureClick","prefectureKey","setSelectedOptions","Option","className","children","to","style","textDecoration","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","Object","keys","map","key","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/HospitalPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport \"./HospitalPage.css\";\nimport hospital from \"../assets/images/hospital.png\";\n\nconst prefectureNames: { [key: string]: string } = {\n  hokkaido: \"北海道\",\n  tohoku: \"東北地方\",\n  kanto: \"関東地方\",\n  chubu: \"中部地方\",\n  kansai: \"関西地方\",\n  chugoku: \"中国地方\",\n  shikoku: \"四国地方\",\n  kyushu: \"九州地方\",\n  okinawa: \"沖縄\",\n\n};\n\n// hospital コンポーネント（都道府県別のページ）\nconst HospitalPage: React.FC = () => {\n  const { prefecture } = useParams<{ prefecture: string }>(); // URLから都道府県を取得\n  const location = useLocation();\n  //useNavigateはページ遷移を行うためのフック\n  const navigate = useNavigate();\n  const queryParams = new URLSearchParams(location.search);\n  const [selectedOptions, setselectedOptions] = useState<string[]>([]);\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false)\n\n // ドロップダウンの表示/非表示を切り替える\n   const toggleDropdown = () => {\n    setIsDropdownVisible(!isDropdownVisible);\n  };\n    // 条件の選択/解除\n  const handleOptionClick = (option: string) => {\n    setselectedOptions((prevSelected) =>\n      prevSelected.includes(option)\n        ? prevSelected.filter((item) => item! == option)// 選択済みのオプションを削除\n        : [...prevSelected, option] // 新しいオプションを追加\n    );\n  };\n  // 都道府県のリンククリック時の処理\n  const handlePrefectureClick = (prefectureKey: string) => {\n    setSelectedOptions((prevSelected) =>\n      prevSelected.includes(Option)\n        ? prevSelected.filter((item) => item !== Option) // 選択済みのオプションを削除\n        : [...prevSelected, Option] // 新しいオプションを追加\n    );\n  };\n  return (\n    <div className=\"hospital-page\">\n      <header className=\"header\">\n        <Link to=\"/\" style={{ textDecoration: \"none\",color:\"black\"}}>\n        wan paradise\n        </Link>\n      </header>\n      <div className=\"\"></div>\n      <h1>動物病院</h1>\n      <div className=\"tab-container\" onClick={toggleDropdown}>\n        <span className=\"hospital-title\">全国の動物病院を探す</span>\n        <div className=\"hospital-img\">\n          <img src={hospital}\n            alt=\"病院のイラスト\"\n            className=\"hospital-illust\" />\n        </div>\n      </div>\n      {/* ドロップダウンメニューの表示 */}\n      {isDropdownVisible && (\n        <div className=\"dropdown-menu\">\n          <ul>\n            {Object.keys(prefectureNames).map((key) => (\n              <li key={key}>\n                <Link to={`/hospital/${key}`}>{prefectureNames[key]}</Link>\n                {prefectureNames[key]}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HospitalPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}