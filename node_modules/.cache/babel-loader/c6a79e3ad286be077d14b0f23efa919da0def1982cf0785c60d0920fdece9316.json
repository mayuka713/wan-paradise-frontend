{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/components/StoresList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoresList = () => {\n  _s();\n  const [stores, setStores] = useState([]); // データを保存するためのステートを準備\n\n  useEffect(() => {\n    // APIを呼び出してデータを取得\n    fetch(\"http://localhost:5003/stores\").then(responce => responce.json()) // JSON形式でレスポンスを取得\n    .then(data => {\n      setStores(data); // 取得したデータをステートに保存\n    }).catch(error => {\n      console.error(\"エラーが発生しました\", error); // エラーハンドリング\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u5E97\\u8217\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: stores.map(store => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: store.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: store.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u6240\\u5728\\u5730: \", store.prefecture, \" \", store.city]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: store.store_url,\n          children: \"\\u5E97\\u8217\\u30EA\\u30F3\\u30AF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, store.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(StoresList, \"9eWA3iE2Dz5ReR9eY7oAKBm8LZY=\");\n_c = StoresList;\nexport default StoresList;\nvar _c;\n$RefreshReg$(_c, \"StoresList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","StoresList","_s","stores","setStores","fetch","then","responce","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","store","name","description","prefecture","city","href","store_url","id","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/components/StoresList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst StoresList: React.FC = () => {\n  const [stores, setStores] = useState([]); // データを保存するためのステートを準備\n\n\n  useEffect(() => {\n    // APIを呼び出してデータを取得\n    fetch(\"http://localhost:5003/stores\")\n      .then((responce) => responce.json()) // JSON形式でレスポンスを取得\n      .then((data) => {\n        setStores(data); // 取得したデータをステートに保存\n      })\n      .catch((error) => {\n        console.error(\"エラーが発生しました\", error); // エラーハンドリング\n      });\n  }, []);\n\n  return (\n    <div>\n      <h1>店舗一覧</h1>\n      <ul>\n        {stores.map((store: any) => (\n          <li key={store.id}>\n            <h2>{store.name}</h2>\n            <p>{store.description}</p>\n            <p>\n              所在地: {store.prefecture} {store.city}\n            </p>\n            <a href={store.store_url}>店舗リンク</a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default StoresList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAG1CD,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAC,8BAA8B,CAAC,CAClCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAAA,CACpCF,IAAI,CAAEG,IAAI,IAAK;MACdL,SAAS,CAACK,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbjB,OAAA;MAAAa,QAAA,EACGV,MAAM,CAACe,GAAG,CAAEC,KAAU,iBACrBnB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAKM,KAAK,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBjB,OAAA;UAAAa,QAAA,EAAIM,KAAK,CAACE;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BjB,OAAA;UAAAa,QAAA,GAAG,sBACI,EAACM,KAAK,CAACG,UAAU,EAAC,GAAC,EAACH,KAAK,CAACI,IAAI;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACJjB,OAAA;UAAGwB,IAAI,EAAEL,KAAK,CAACM,SAAU;UAAAZ,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GAN5BE,KAAK,CAACO,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CAjCID,UAAoB;AAAA0B,EAAA,GAApB1B,UAAoB;AAmC1B,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}