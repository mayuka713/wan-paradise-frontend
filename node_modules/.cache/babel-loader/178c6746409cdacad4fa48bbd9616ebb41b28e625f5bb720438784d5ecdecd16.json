{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useParams}from\"react-router-dom\";import{useModal}from\"../../context/ModalContext\";// useModal を使用\nimport\"./DogRunReviewList.css\";import Header from\"../Header\";import Footer from\"../Footer\";import Modal from\"../../components/Modal\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const DogRunReviewList=()=>{const{storeId}=useParams();const[reviews,setReviews]=useState([]);const[error,setError]=useState(null);const[averageRating,setAverageRating]=useState(0);const[storeName,setStoreName]=useState(\"\");const{openModal}=useModal();// モーダルを開く関数\nuseEffect(()=>{if(!storeId)return;// storeId が存在しない場合は処理を中断\nconst fetchReviews=async()=>{try{const response=await fetch(\"http://localhost:5003/reviews/\".concat(storeId));if(!response.ok)throw new Error(\"口コミの取得に失敗しました\");const data=await response.json();console.log(\"Fetched Reviews Data:\",data);// 取得したデータを確認\nsetReviews(data);if(data.length>0){const totalRating=data.reduce((sum,review)=>sum+review.rating,0);const avgRating=totalRating/data.length;setAverageRating(Math.min(avgRating,5));}else{setAverageRating(0);// データがない場合の対応\n}}catch(err){console.error(\"エラー詳細:\",err);setError(\"口コミの取得に失敗しました\");}};const fetchStoreName=async()=>{try{const response=await fetch(\"http://localhost:5003/stores/store-name/\".concat(storeId));if(!response.ok)throw new Error(\"店舗情報の取得に失敗しました\");const data=await response.json();setStoreName(data.store_name);}catch(err){console.error(\"エラー詳細:\",err);setError(\"店舗情報の取得に失敗しました\");}};fetchReviews();fetchStoreName();},[storeId]);// 口コミを投稿する関数\nconst handleReviewSubmit=async(rating,comment)=>{try{const response=await fetch(\"http://localhost:5003/reviews\",{method:\"POST\",headers:{\"Content-type\":\"application/json\"},body:JSON.stringify({store_id:storeId,rating,comment})});if(!response.ok)throw new Error(\"コメント投稿に失敗しました\");const newReview=await response.json();setReviews(prevReviews=>{const updatedReviews=[newReview,...prevReviews];const totalRating=updatedReviews.reduce((sum,rev)=>sum+rev.rating,0);const newAverageRating=totalRating/updatedReviews.length;console.log(\"Star Fill Width:\",\"\".concat(averageRating/5*100,\"%\"));setAverageRating(Math.min(newAverageRating,5));// 平均評価を更新\nreturn updatedReviews;});}catch(err){console.error(\"エラー詳細:\",err);setError(\"コメント投稿に失敗しました\");}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"review-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"store-name-review\",children:storeName||\"店舗名を取得中...\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"review-star-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"review-star-background\",children:\"\\u2605\\u2605\\u2605\\u2605\\u2605\"}),/*#__PURE__*/_jsx(\"div\",{className:\"review-star-filled\",style:{width:\"\".concat(averageRating/5*100,\"%\")},children:\"\\u2605\\u2605\\u2605\\u2605\\u2605\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"average-rating-value\",children:averageRating.toFixed(1)}),/*#__PURE__*/_jsxs(\"h2\",{className:\"review-title\",children:[storeName,\" \\u53E3\\u30B3\\u30DF\\u4E00\\u89A7\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>openModal(storeName),className:\"click-review-button\",children:\"\\u6295\\u7A3F\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),reviews.map(review=>/*#__PURE__*/_jsxs(\"div\",{className:\"review-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"review-rating\",children:[[1,2,3,4,5].map(value=>/*#__PURE__*/_jsx(\"span\",{className:\"star \".concat(value<=review.rating?\"selected\":\"\"),children:\"\\u2605\"},value)),/*#__PURE__*/_jsx(\"strong\",{style:{marginLeft:\"8px\"},children:review.rating.toFixed(1)})]}),/*#__PURE__*/_jsx(\"p\",{className:\"review-comment\",children:review.comment})]},review.id))]}),/*#__PURE__*/_jsx(Footer,{}),/*#__PURE__*/_jsx(Modal,{onSubmit:handleReviewSubmit})]});};export default DogRunReviewList;","map":{"version":3,"names":["React","useEffect","useState","useParams","useModal","Header","Footer","Modal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DogRunReviewList","storeId","reviews","setReviews","error","setError","averageRating","setAverageRating","storeName","setStoreName","openModal","fetchReviews","response","fetch","concat","ok","Error","data","json","console","log","length","totalRating","reduce","sum","review","rating","avgRating","Math","min","err","fetchStoreName","store_name","handleReviewSubmit","comment","method","headers","body","JSON","stringify","store_id","newReview","prevReviews","updatedReviews","rev","newAverageRating","children","className","style","width","toFixed","onClick","map","value","marginLeft","id","onSubmit"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunReviewList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useModal } from \"../../context/ModalContext\"; // useModal を使用\nimport \"./DogRunReviewList.css\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport Modal from \"../../components/Modal\";\n\ntype Review = {\n  id: number;\n  name: string;\n  store_id: number;\n  store_name: string;\n  rating: number;\n  comment: string;\n  date: string;\n  created_at: string;\n  updated_at: string;\n};\n\nconst DogRunReviewList: React.FC = () => {\n  const { storeId } = useParams<{ storeId: string }>();\n  const [reviews, setReviews] = useState<Review[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [averageRating, setAverageRating] = useState<number>(0);\n  const [storeName, setStoreName] = useState<string>(\"\");\n  const { openModal } = useModal(); // モーダルを開く関数\n\n  useEffect(() => {\n    if (!storeId) return; // storeId が存在しない場合は処理を中断\n\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/reviews/${storeId}`);\n        if (!response.ok) throw new Error(\"口コミの取得に失敗しました\");\n\n        const data: Review[] = await response.json();\n        console.log(\"Fetched Reviews Data:\", data); // 取得したデータを確認\n\n        setReviews(data);\n\n        if (data.length > 0) {\n          const totalRating = data.reduce(\n            (sum: number, review: Review) => sum + review.rating,\n            0\n          );\n          const avgRating = totalRating / data.length;\n          setAverageRating(Math.min(avgRating, 5));\n        } else {\n          setAverageRating(0); // データがない場合の対応\n        }\n      } catch (err) {\n        console.error(\"エラー詳細:\", err);\n        setError(\"口コミの取得に失敗しました\");\n      }\n    };\n\n    const fetchStoreName = async () => {\n      try {\n        const response = await fetch(\n          `http://localhost:5003/stores/store-name/${storeId}`\n        );\n        if (!response.ok) throw new Error(\"店舗情報の取得に失敗しました\");\n\n        const data = await response.json();\n        setStoreName(data.store_name);\n      } catch (err) {\n        console.error(\"エラー詳細:\", err);\n        setError(\"店舗情報の取得に失敗しました\");\n      }\n    };\n\n    fetchReviews();\n    fetchStoreName();\n  }, [storeId]);\n\n  // 口コミを投稿する関数\n  const handleReviewSubmit = async (rating: number, comment: string) => {\n    try {\n      const response = await fetch(\"http://localhost:5003/reviews\", {\n        method: \"POST\",\n        headers: { \"Content-type\": \"application/json\" },\n        body: JSON.stringify({\n          store_id: storeId,\n          rating,\n          comment,\n        }),\n      });\n\n      if (!response.ok) throw new Error(\"コメント投稿に失敗しました\");\n\n      const newReview: Review = await response.json();\n\n      setReviews((prevReviews) => {\n        const updatedReviews = [newReview, ...prevReviews];\n        const totalRating = updatedReviews.reduce(\n          (sum: number, rev: Review) => sum + rev.rating,\n          0\n        );\n        const newAverageRating = totalRating / updatedReviews.length;\n        console.log(\"Star Fill Width:\", `${(averageRating / 5) * 100}%`);\n\n        setAverageRating(Math.min(newAverageRating, 5)); // 平均評価を更新\n        return updatedReviews;\n        \n      });\n    } catch (err) {\n      console.error(\"エラー詳細:\", err);\n      setError(\"コメント投稿に失敗しました\");\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"review-container\">\n        <h1 className=\"store-name-review\">{storeName || \"店舗名を取得中...\"}</h1>\n        {/* 平均評価の表示 */}\n        <div className=\"review-star-container\">\n          <div className=\"review-star-background\">★★★★★</div>\n          <div\n            className=\"review-star-filled\"\n            style={{\n              width: `${(averageRating / 5) * 100}%`,\n            }}\n          >\n            ★★★★★\n          </div>\n        </div>\n        <span className=\"average-rating-value\">{averageRating.toFixed(1)}</span>\n\n        <h2 className=\"review-title\">{storeName} 口コミ一覧</h2>\n        {/* モーダルを開く */}\n        <button onClick={() => openModal(storeName)} className=\"click-review-button\">\n          投稿\n        </button>\n\n        {error && <p className=\"error-message\">{error}</p>}\n        {/* レビューリストの表示 */}\n        {reviews.map((review) => (\n          <div key={review.id} className=\"review-card\">\n            <div className=\"review-rating\">\n              {[1, 2, 3, 4, 5].map((value) => (\n                <span\n                  key={value}\n                  className={`star ${value <= review.rating ? \"selected\" : \"\"}`}\n                >\n                  ★\n                </span>\n              ))}\n              <strong style={{ marginLeft: \"8px\" }}>{review.rating.toFixed(1)}</strong>\n            </div>\n            <p className=\"review-comment\">{review.comment}</p>\n          </div>\n        ))}\n      </div>\n      <Footer />\n\n      {/* モーダルコンポーネント */}\n      <Modal onSubmit={handleReviewSubmit} />\n    </>\n  );\n};\n\nexport default DogRunReviewList;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,OAASC,QAAQ,KAAQ,4BAA4B,CAAE;AACvD,MAAO,wBAAwB,CAC/B,MAAO,CAAAC,MAAM,KAAM,WAAW,CAC9B,MAAO,CAAAC,MAAM,KAAM,WAAW,CAC9B,MAAO,CAAAC,KAAK,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAc3C,KAAM,CAAAC,gBAA0B,CAAGA,CAAA,GAAM,CACvC,KAAM,CAAEC,OAAQ,CAAC,CAAGZ,SAAS,CAAsB,CAAC,CACpD,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAW,EAAE,CAAC,CACpD,KAAM,CAACgB,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAgB,IAAI,CAAC,CACvD,KAAM,CAACkB,aAAa,CAAEC,gBAAgB,CAAC,CAAGnB,QAAQ,CAAS,CAAC,CAAC,CAC7D,KAAM,CAACoB,SAAS,CAAEC,YAAY,CAAC,CAAGrB,QAAQ,CAAS,EAAE,CAAC,CACtD,KAAM,CAAEsB,SAAU,CAAC,CAAGpB,QAAQ,CAAC,CAAC,CAAE;AAElCH,SAAS,CAAC,IAAM,CACd,GAAI,CAACc,OAAO,CAAE,OAAQ;AAEtB,KAAM,CAAAU,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,kCAAAC,MAAA,CAAkCb,OAAO,CAAE,CAAC,CACxE,GAAI,CAACW,QAAQ,CAACG,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,eAAe,CAAC,CAElD,KAAM,CAAAC,IAAc,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAC5CC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEH,IAAI,CAAC,CAAE;AAE5Cd,UAAU,CAACc,IAAI,CAAC,CAEhB,GAAIA,IAAI,CAACI,MAAM,CAAG,CAAC,CAAE,CACnB,KAAM,CAAAC,WAAW,CAAGL,IAAI,CAACM,MAAM,CAC7B,CAACC,GAAW,CAAEC,MAAc,GAAKD,GAAG,CAAGC,MAAM,CAACC,MAAM,CACpD,CACF,CAAC,CACD,KAAM,CAAAC,SAAS,CAAGL,WAAW,CAAGL,IAAI,CAACI,MAAM,CAC3Cd,gBAAgB,CAACqB,IAAI,CAACC,GAAG,CAACF,SAAS,CAAE,CAAC,CAAC,CAAC,CAC1C,CAAC,IAAM,CACLpB,gBAAgB,CAAC,CAAC,CAAC,CAAE;AACvB,CACF,CAAE,MAAOuB,GAAG,CAAE,CACZX,OAAO,CAACf,KAAK,CAAC,QAAQ,CAAE0B,GAAG,CAAC,CAC5BzB,QAAQ,CAAC,eAAe,CAAC,CAC3B,CACF,CAAC,CAED,KAAM,CAAA0B,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF,KAAM,CAAAnB,QAAQ,CAAG,KAAM,CAAAC,KAAK,4CAAAC,MAAA,CACiBb,OAAO,CACpD,CAAC,CACD,GAAI,CAACW,QAAQ,CAACG,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,gBAAgB,CAAC,CAEnD,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClCT,YAAY,CAACQ,IAAI,CAACe,UAAU,CAAC,CAC/B,CAAE,MAAOF,GAAG,CAAE,CACZX,OAAO,CAACf,KAAK,CAAC,QAAQ,CAAE0B,GAAG,CAAC,CAC5BzB,QAAQ,CAAC,gBAAgB,CAAC,CAC5B,CACF,CAAC,CAEDM,YAAY,CAAC,CAAC,CACdoB,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,CAAC9B,OAAO,CAAC,CAAC,CAEb;AACA,KAAM,CAAAgC,kBAAkB,CAAG,KAAAA,CAAOP,MAAc,CAAEQ,OAAe,GAAK,CACpE,GAAI,CACF,KAAM,CAAAtB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,+BAA+B,CAAE,CAC5DsB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,QAAQ,CAAEvC,OAAO,CACjByB,MAAM,CACNQ,OACF,CAAC,CACH,CAAC,CAAC,CAEF,GAAI,CAACtB,QAAQ,CAACG,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,eAAe,CAAC,CAElD,KAAM,CAAAyB,SAAiB,CAAG,KAAM,CAAA7B,QAAQ,CAACM,IAAI,CAAC,CAAC,CAE/Cf,UAAU,CAAEuC,WAAW,EAAK,CAC1B,KAAM,CAAAC,cAAc,CAAG,CAACF,SAAS,CAAE,GAAGC,WAAW,CAAC,CAClD,KAAM,CAAApB,WAAW,CAAGqB,cAAc,CAACpB,MAAM,CACvC,CAACC,GAAW,CAAEoB,GAAW,GAAKpB,GAAG,CAAGoB,GAAG,CAAClB,MAAM,CAC9C,CACF,CAAC,CACD,KAAM,CAAAmB,gBAAgB,CAAGvB,WAAW,CAAGqB,cAAc,CAACtB,MAAM,CAC5DF,OAAO,CAACC,GAAG,CAAC,kBAAkB,IAAAN,MAAA,CAAMR,aAAa,CAAG,CAAC,CAAI,GAAG,KAAG,CAAC,CAEhEC,gBAAgB,CAACqB,IAAI,CAACC,GAAG,CAACgB,gBAAgB,CAAE,CAAC,CAAC,CAAC,CAAE;AACjD,MAAO,CAAAF,cAAc,CAEvB,CAAC,CAAC,CACJ,CAAE,MAAOb,GAAG,CAAE,CACZX,OAAO,CAACf,KAAK,CAAC,QAAQ,CAAE0B,GAAG,CAAC,CAC5BzB,QAAQ,CAAC,eAAe,CAAC,CAC3B,CACF,CAAC,CAED,mBACER,KAAA,CAAAE,SAAA,EAAA+C,QAAA,eACEnD,IAAA,CAACJ,MAAM,GAAE,CAAC,cACVM,KAAA,QAAKkD,SAAS,CAAC,kBAAkB,CAAAD,QAAA,eAC/BnD,IAAA,OAAIoD,SAAS,CAAC,mBAAmB,CAAAD,QAAA,CAAEtC,SAAS,EAAI,YAAY,CAAK,CAAC,cAElEX,KAAA,QAAKkD,SAAS,CAAC,uBAAuB,CAAAD,QAAA,eACpCnD,IAAA,QAAKoD,SAAS,CAAC,wBAAwB,CAAAD,QAAA,CAAC,gCAAK,CAAK,CAAC,cACnDnD,IAAA,QACEoD,SAAS,CAAC,oBAAoB,CAC9BC,KAAK,CAAE,CACLC,KAAK,IAAAnC,MAAA,CAAMR,aAAa,CAAG,CAAC,CAAI,GAAG,KACrC,CAAE,CAAAwC,QAAA,CACH,gCAED,CAAK,CAAC,EACH,CAAC,cACNnD,IAAA,SAAMoD,SAAS,CAAC,sBAAsB,CAAAD,QAAA,CAAExC,aAAa,CAAC4C,OAAO,CAAC,CAAC,CAAC,CAAO,CAAC,cAExErD,KAAA,OAAIkD,SAAS,CAAC,cAAc,CAAAD,QAAA,EAAEtC,SAAS,CAAC,iCAAM,EAAI,CAAC,cAEnDb,IAAA,WAAQwD,OAAO,CAAEA,CAAA,GAAMzC,SAAS,CAACF,SAAS,CAAE,CAACuC,SAAS,CAAC,qBAAqB,CAAAD,QAAA,CAAC,cAE7E,CAAQ,CAAC,CAER1C,KAAK,eAAIT,IAAA,MAAGoD,SAAS,CAAC,eAAe,CAAAD,QAAA,CAAE1C,KAAK,CAAI,CAAC,CAEjDF,OAAO,CAACkD,GAAG,CAAE3B,MAAM,eAClB5B,KAAA,QAAqBkD,SAAS,CAAC,aAAa,CAAAD,QAAA,eAC1CjD,KAAA,QAAKkD,SAAS,CAAC,eAAe,CAAAD,QAAA,EAC3B,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAACM,GAAG,CAAEC,KAAK,eACzB1D,IAAA,SAEEoD,SAAS,SAAAjC,MAAA,CAAUuC,KAAK,EAAI5B,MAAM,CAACC,MAAM,CAAG,UAAU,CAAG,EAAE,CAAG,CAAAoB,QAAA,CAC/D,QAED,EAJOO,KAID,CACP,CAAC,cACF1D,IAAA,WAAQqD,KAAK,CAAE,CAAEM,UAAU,CAAE,KAAM,CAAE,CAAAR,QAAA,CAAErB,MAAM,CAACC,MAAM,CAACwB,OAAO,CAAC,CAAC,CAAC,CAAS,CAAC,EACtE,CAAC,cACNvD,IAAA,MAAGoD,SAAS,CAAC,gBAAgB,CAAAD,QAAA,CAAErB,MAAM,CAACS,OAAO,CAAI,CAAC,GAZ1CT,MAAM,CAAC8B,EAaZ,CACN,CAAC,EACC,CAAC,cACN5D,IAAA,CAACH,MAAM,GAAE,CAAC,cAGVG,IAAA,CAACF,KAAK,EAAC+D,QAAQ,CAAEvB,kBAAmB,CAAE,CAAC,EACvC,CAAC,CAEP,CAAC,CAED,cAAe,CAAAjC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}