{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/components/StoresList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n\n// データの型を定義\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoresList = () => {\n  _s();\n  // APIから取得したデータを保存するためのステート\n  const [stores, setStores] = useState([]); // データを保存するためのステートを準備\n\n  useEffect(() => {\n    // APIを呼び出してデータを取得\n    fetch(\"http://localhost:5003/stores\").then(response => response.json()) // JSON形式でレスポンスを取得\n    .then(data => {\n      // データの型を明示的に指定\n      setStores(data); // 取得したデータをステートに保存\n    }).catch(error => {\n      console.error(\"エラーが発生しました\", error); // エラーハンドリング\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: stores.map((store, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: store.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: store.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: store.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(StoresList, \"9eWA3iE2Dz5ReR9eY7oAKBm8LZY=\");\n_c = StoresList;\nexport default StoresList;\nvar _c;\n$RefreshReg$(_c, \"StoresList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","StoresList","_s","stores","setStores","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","store","index","name","description","address","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/components/StoresList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// データの型を定義\ntype Store = {\n  name: string;\n  description: string;\n  address: string;\n};\n\nconst StoresList: React.FC = () => {\n  // APIから取得したデータを保存するためのステート\n  const [stores, setStores] = useState<Store[]>([]); // データを保存するためのステートを準備\n\n  useEffect(() => {\n    // APIを呼び出してデータを取得\n    fetch(\"http://localhost:5003/stores\")\n      .then((response) => response.json()) // JSON形式でレスポンスを取得\n      .then((data: Store[]) => { // データの型を明示的に指定\n        setStores(data); // 取得したデータをステートに保存\n      })\n      .catch((error) => {\n        console.error(\"エラーが発生しました\", error); // エラーハンドリング\n      });\n  }, []);\n\n  return (\n    <div>\n      <h1>ドッグラン一覧</h1>\n      <ul>\n        {stores.map((store, index) => (\n          <li key={index}>\n            <h2>{store.name}</h2>\n            <p>{store.description}</p>\n            <p>{store.address}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default StoresList;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAU,EAAE,CAAC,CAAC,CAAC;;EAEnDD,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAC,8BAA8B,CAAC,CAClCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAAA,CACpCF,IAAI,CAAEG,IAAa,IAAK;MAAE;MACzBL,SAAS,CAACK,IAAI,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBjB,OAAA;MAAAa,QAAA,EACGV,MAAM,CAACe,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBpB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAKM,KAAK,CAACE;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBjB,OAAA;UAAAa,QAAA,EAAIM,KAAK,CAACG;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BjB,OAAA;UAAAa,QAAA,EAAIM,KAAK,CAACI;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHfG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CA9BID,UAAoB;AAAAuB,EAAA,GAApBvB,UAAoB;AAgC1B,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}