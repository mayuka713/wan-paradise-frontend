{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Hospital/HospitalStoreList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HospitalStoreList = () => {\n  _s();\n  const {\n    prefectureId\n  } = useParams(); // URLのパラメータから都道府県IDを取得\n  const [stores, setStores] = useState([]); // 病院リスト\n  const [hospitalTags, setHospitalTags] = useState([]); // タグ情報\n  const [selectedHospitalTags, setSelectedHospitalTags] = useState([]); // 選択されたタグID\n  const [filteredHospitalStores, setFilteredHospitalStores] = useState([]); // 絞り込み後の病院リスト\n\n  // タグデータの取得\n  useEffect(() => {\n    const fetchHospitalTags = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/hospital-tags\"); // タグデータを取得\n        const data = await response.json();\n        setHospitalTags(data); // 取得したデータを状態に設定\n      } catch (error) {\n        console.error(\"タグデータの取得に失敗しました:\", error);\n      }\n    };\n    fetchHospitalTags();\n  }, []);\n\n  // 病院データの取得\n  useEffect(() => {\n    const fetchHospitalStores = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/hospital-stores/${prefectureId}`); // 都道府県IDでフィルタリング\n        const data = await response.json();\n        setStores(data);\n        setFilteredHospitalStores(data); // 初期状態ではすべての病院を表示\n      } catch (error) {\n        console.error(\"病院データの取得に失敗しました:\", error);\n      }\n    };\n    fetchHospitalStores();\n  }, [prefectureId]);\n\n  // タグ選択に基づく病院データのフィルタリング\n  useEffect(() => {\n    const filteredStores = stores.filter(store => selectedHospitalTags.length === 0 ? true // タグが選択されていない場合はすべての病院を表示\n    : store.tags.some(tag => selectedHospitalTags.includes(tag.id)) // タグが一致する病院のみ表示\n    );\n    setFilteredHospitalStores(filteredStores); // フィルタリング後の病院を設定\n  }, [selectedHospitalTags, stores]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u75C5\\u9662\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: hospitalTags.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setSelectedHospitalTags(prev => prev.includes(tag.id) ? prev.filter(id => id !== tag.id) // すでに選択されている場合は削除\n          : [...prev, tag.id] // 新しいタグを追加\n          );\n        },\n        style: {\n          margin: \"5px\",\n          backgroundColor: selectedHospitalTags.includes(tag.id) ? \"lightblue\" : \"white\"\n        },\n        children: tag.name\n      }, tag.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredHospitalStores.length > 0 ? filteredHospitalStores.map(store => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: store.store_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: store.store_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u4F4F\\u6240: \", store.store_address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u96FB\\u8A71\\u756A\\u53F7: \", store.store_phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: store.store_url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"\\u8A73\\u7D30\\u306F\\u3053\\u3061\\u3089\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)]\n      }, store.store_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u8A72\\u5F53\\u3059\\u308B\\u75C5\\u9662\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(HospitalStoreList, \"dl3AT49d7J06CFa0KoVq85U2ovw=\", false, function () {\n  return [useParams];\n});\n_c = HospitalStoreList;\nexport default HospitalStoreList;\nvar _c;\n$RefreshReg$(_c, \"HospitalStoreList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","HospitalStoreList","_s","prefectureId","stores","setStores","hospitalTags","setHospitalTags","selectedHospitalTags","setSelectedHospitalTags","filteredHospitalStores","setFilteredHospitalStores","fetchHospitalTags","response","fetch","data","json","error","console","fetchHospitalStores","filteredStores","filter","store","length","tags","some","tag","includes","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","prev","style","margin","backgroundColor","name","store_name","store_description","store_address","store_phone","href","store_url","target","rel","store_id","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Hospital/HospitalStoreList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ninterface Hospital {\n  store_id: number;\n  store_name: string;\n  store_description: string;\n  store_address: string;\n  store_phone: number;\n  store_url: string;\n  store_img: string;\n  tags: { id: number; name: string }[]; // タグの配列\n}\n\ninterface HospitalTag {\n  id: number;\n  name: string;\n}\n\nconst HospitalStoreList: React.FC = () => {\n  const { prefectureId } = useParams<{ prefectureId: string }>(); // URLのパラメータから都道府県IDを取得\n  const [stores, setStores] = useState<Hospital[]>([]); // 病院リスト\n  const [hospitalTags, setHospitalTags] = useState<HospitalTag[]>([]); // タグ情報\n  const [selectedHospitalTags, setSelectedHospitalTags] = useState<number[]>([]); // 選択されたタグID\n  const [filteredHospitalStores, setFilteredHospitalStores] = useState<Hospital[]>([]); // 絞り込み後の病院リスト\n\n  // タグデータの取得\n  useEffect(() => {\n    const fetchHospitalTags = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/hospital-tags\"); // タグデータを取得\n        const data: HospitalTag[] = await response.json();\n        setHospitalTags(data); // 取得したデータを状態に設定\n      } catch (error) {\n        console.error(\"タグデータの取得に失敗しました:\", error);\n      }\n    };\n    fetchHospitalTags();\n  }, []);\n\n  // 病院データの取得\n  useEffect(() => {\n    const fetchHospitalStores = async () => {\n      try {\n        const response = await fetch(\n          `http://localhost:5003/hospital-stores/${prefectureId}`\n        ); // 都道府県IDでフィルタリング\n        const data: Hospital[] = await response.json();\n        setStores(data);\n        setFilteredHospitalStores(data); // 初期状態ではすべての病院を表示\n      } catch (error) {\n        console.error(\"病院データの取得に失敗しました:\", error);\n      }\n    };\n    fetchHospitalStores();\n  }, [prefectureId]);\n\n  // タグ選択に基づく病院データのフィルタリング\n  useEffect(() => {\n    const filteredStores = stores.filter((store) =>\n      selectedHospitalTags.length === 0\n        ? true // タグが選択されていない場合はすべての病院を表示\n        : store.tags.some((tag) => selectedHospitalTags.includes(tag.id)) // タグが一致する病院のみ表示\n    );\n    setFilteredHospitalStores(filteredStores); // フィルタリング後の病院を設定\n  }, [selectedHospitalTags, stores]);\n\n  return (\n    <div>\n      <h2>病院一覧</h2>\n      {/* タグの絞り込みボタン */}\n      <div>\n        {hospitalTags.map((tag) => (\n          <button\n            key={tag.id}\n            onClick={() => {\n              setSelectedHospitalTags((prev) =>\n                prev.includes(tag.id)\n                  ? prev.filter((id) => id !== tag.id) // すでに選択されている場合は削除\n                  : [...prev, tag.id] // 新しいタグを追加\n              );\n            }}\n            style={{\n              margin: \"5px\",\n              backgroundColor: selectedHospitalTags.includes(tag.id)\n                ? \"lightblue\"\n                : \"white\",\n            }}\n          >\n            {tag.name}\n          </button>\n        ))}\n      </div>\n      {/* 病院リスト */}\n      <div>\n        {filteredHospitalStores.length > 0 ? (\n          filteredHospitalStores.map((store) => (\n            <div key={store.store_id}>\n              <h3>{store.store_name}</h3>\n              <p>{store.store_description}</p>\n              <p>住所: {store.store_address}</p>\n              <p>電話番号: {store.store_phone}</p>\n              <a href={store.store_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                詳細はこちら\n              </a>\n            </div>\n          ))\n        ) : (\n          <p>該当する病院がありません。</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HospitalStoreList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}