{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nconst HospitalList = () => {\n  _s();\n  const {\n    prefectureId\n  } = useParams(); // URLのパラメータから都道府県IDを取得する\n  const [hospitalList, setHospitalList] = useState([]); // 病院リストの状態を定義する\n  const [hostpitalTags, setHospitalTags] = useState([]); //タグ情報の状態を定義する\n\n  //病院データの取得\n  useEffect(() => {\n    const fetchHospitalList = async () => {\n      try {\n        const response = await fetch('http://localhost:5003/hospitals/${prefectureId}');\n        const data = await response.json();\n        setHospitalList(data);\n      } catch (error) {\n        console.error(\"病院データの取得に失敗しました:\", error);\n      }\n    };\n    fetchHospitalList();\n  }, [prefectureId]);\n};\n_s(HospitalList, \"b+y08RXls5yCkBPvGloZdqdR5VY=\", false, function () {\n  return [useParams];\n});\n_c = HospitalList;\nexport default HospitalList;\nvar _c;\n$RefreshReg$(_c, \"HospitalList\");","map":{"version":3,"names":["useEffect","useState","useParams","HospitalList","_s","prefectureId","hospitalList","setHospitalList","hostpitalTags","setHospitalTags","fetchHospitalList","response","fetch","data","json","error","console","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Hospital/HospitalStoreList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ninterface Hospital {\n  store_id: number;\n  store_name: string;\n  store_description: string;\n  store_address: string;\n  store_phone: number;\n  store_url: string;\n  store_img: string;\n}\n\ninterface HospitalTag {\n  id: number;\n  name: string;\n}\n\nconst HospitalList: React.FC = () => {\n  const { prefectureId } = useParams<{ prefectureId: string }>(); // URLのパラメータから都道府県IDを取得する\n  const [ hospitalList, setHospitalList  ] = useState<Hospital[]>([]); // 病院リストの状態を定義する\n  const [ hostpitalTags, setHospitalTags ] = useState<HospitalTag[]>([]); //タグ情報の状態を定義する\n\n//病院データの取得\nuseEffect(() => {\n  const fetchHospitalList = async () => {\n    try {\n      const response = await fetch ('http://localhost:5003/hospitals/${prefectureId}');\n      const data: Hospital[] = await response.json();\n      setHospitalList(data);\n    } catch (error) {\n      console.error(\"病院データの取得に失敗しました:\", error);\n    }\n   };\n   fetchHospitalList();\n  },[prefectureId]);}\n\n\n\nexport default HospitalList;\n"],"mappings":";AAAA,SAAgBA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAiB5C,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAa,CAAC,GAAGH,SAAS,CAA2B,CAAC,CAAC,CAAC;EAChE,MAAM,CAAEI,YAAY,EAAEC,eAAe,CAAG,GAAGN,QAAQ,CAAa,EAAE,CAAC,CAAC,CAAC;EACrE,MAAM,CAAEO,aAAa,EAAEC,eAAe,CAAE,GAAGR,QAAQ,CAAgB,EAAE,CAAC,CAAC,CAAC;;EAE1E;EACAD,SAAS,CAAC,MAAM;IACd,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iDAAiD,CAAC;QAChF,MAAMC,IAAgB,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAC9CP,eAAe,CAACM,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC1C;IACD,CAAC;IACDL,iBAAiB,CAAC,CAAC;EACpB,CAAC,EAAC,CAACL,YAAY,CAAC,CAAC;AAAC,CAAC;AAAAD,EAAA,CAjBfD,YAAsB;EAAA,QACDD,SAAS;AAAA;AAAAe,EAAA,GAD9Bd,YAAsB;AAqB5B,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}