{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Hospital/HospitalStoreList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HospitalStoreList = () => {\n  _s();\n  const {\n    prefectureId\n  } = useParams(); // URLのパラメータから都道府県IDを取得する\n  const [stores, setStores] = useState([]); // 病院リストの状態を定義する\n  const [selectedHospitalTags, setSelectedHospitalTags] = useState([]); // 選択されたタグのID\n  const [selectedPrefecture, setSelectedPrefecture] = useState(\"\");\n  const [filteredHospitalStores, setFilteredHospitsalStores] = useState([]);\n\n  // タグデータの取得\n  useEffect(() => {\n    const fetchHospitalTags = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/hospital-tags\"); // タグデータを取得\n        const data = await response.json();\n        setHospitalTags(data); // 取得したデータを状態に設定\n      } catch (error) {\n        console.error(\"タグデータの取得に失敗しました:\", error);\n      }\n    };\n    fetchHospitalTags();\n  }, []);\n\n  //病院データの取得\n  useEffect(() => {\n    const fetchHospitalStores = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/Hospital/list/${prefectureId}?tags=${selectedHospitalTags.join(\",\")}`);\n        const data = await response.json();\n        setStores(data);\n        setFilteredHospitsalStores(data);\n      } catch (error) {\n        console.error(\"病院データの取得に失敗しました:\", error);\n      }\n    };\n    fetchHospitalStores();\n  }, [prefectureId, selectedHospitalTags]);\n\n  // タグ選択による病院データのフィルタリング\t\n  useEffect(() => {\n    const filteredStores = stores.filter(store => selectedHospitalTags.length === 0 ? true // タグが選択されていない場合はすべての病院を表示\n    : store.tags.some(tag => selectedHospitalTags.includes(tag.id)) // タグが一致する病院のみ表示\n    );\n    setFilteredHospitsalStores(filteredStores); // フィルタリングされた病院リストを設定\n  }, [selectedHospitalTags, stores]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u52D5\\u7269\\u75C5\\u9662\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: hospitalTags.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setSelectedHospitalTags(prev => prev.includes(tag.id) ? prev.filter(id => id !== tag.id) : [...prev, tag.id]);\n        },\n        style: {\n          margin: \"5px\"\n        },\n        children: tag.name\n      }, tag.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredHospitalStores.length > 0 ? filteredHospitalStores.map(store => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: store.store_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: store.store_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u4F4F\\u6240: \", store.store_address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u96FB\\u8A71\\u756A\\u53F7: \", store.store_phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: store.store_url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"\\u8A73\\u7D30\\u306F\\u3053\\u3061\\u3089\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)]\n      }, store.store_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u8A72\\u5F53\\u3059\\u308B\\u75C5\\u9662\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(HospitalStoreList, \"yTowhgQHRDL9ALqsHOt4+zVejlU=\", false, function () {\n  return [useParams];\n});\n_c = HospitalStoreList;\nexport default HospitalStoreList;\nvar _c;\n$RefreshReg$(_c, \"HospitalStoreList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","HospitalStoreList","_s","prefectureId","stores","setStores","selectedHospitalTags","setSelectedHospitalTags","selectedPrefecture","setSelectedPrefecture","filteredHospitalStores","setFilteredHospitsalStores","fetchHospitalTags","response","fetch","data","json","setHospitalTags","error","console","fetchHospitalStores","join","filteredStores","filter","store","length","tags","some","tag","includes","id","children","fileName","_jsxFileName","lineNumber","columnNumber","hospitalTags","map","onClick","prev","style","margin","name","store_name","store_description","store_address","store_phone","href","store_url","target","rel","store_id","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Hospital/HospitalStoreList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n\ninterface Hospital {\n  store_id: number;\n  store_name: string;\n  store_description: string;\n  store_address: string;\n  store_phone: number;\n  store_url: string;\n  store_img: string;\n  tags: { id: number; name: string }[];\n}\n\ninterface Tag {\n  id: number;\n  name: string;\n  tag_type: number;\n}\n\nconst HospitalStoreList: React.FC = () => {\n  const { prefectureId } = useParams<{ prefectureId: string }>(); // URLのパラメータから都道府県IDを取得する\n  const [stores, setStores] = useState<Hospital[]>([]);// 病院リストの状態を定義する\n  const [selectedHospitalTags, setSelectedHospitalTags] = useState<number[]>([]); // 選択されたタグのID\n  const [selectedPrefecture, setSelectedPrefecture] = useState<string>(\"\");\n  const [filteredHospitalStores, setFilteredHospitsalStores] = useState<Hospital[]>([]);\n\n  // タグデータの取得\n  useEffect(() => {\n    const fetchHospitalTags = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/hospital-tags\"); // タグデータを取得\n        const data: HospitalTag[] = await response.json();\n        setHospitalTags(data); // 取得したデータを状態に設定\n      } catch (error) {\n        console.error(\"タグデータの取得に失敗しました:\", error);\n      }\n    };\n    fetchHospitalTags();\n  }, []);\n\n  //病院データの取得\n  useEffect(() => {\n    const fetchHospitalStores = async () => {\n      try {\n        const response = await fetch(\n          `http://localhost:5003/Hospital/list/${prefectureId}?tags=${selectedHospitalTags.join(\",\")}`\n        );\n        const data: Hospital[] = await response.json();\n        setStores(data);\n        setFilteredHospitsalStores(data);\n      } catch (error) {\n        console.error(\"病院データの取得に失敗しました:\", error);\n      }\n    };\n    fetchHospitalStores();\n  }, [prefectureId, selectedHospitalTags]);\n  \n\n  // タグ選択による病院データのフィルタリング\t\n  useEffect(() => {\n    const filteredStores = stores.filter((store) =>\n      selectedHospitalTags.length === 0\n        ? true // タグが選択されていない場合はすべての病院を表示\n        : store.tags.some((tag) => selectedHospitalTags.includes(tag.id)) // タグが一致する病院のみ表示\n    );\n    setFilteredHospitsalStores(filteredStores); // フィルタリングされた病院リストを設定\n  }, [selectedHospitalTags, stores]);\n\n\n\n  return (\n    <div>\n      <h2>動物病院一覧</h2>\n      {/* 絞り込みタグ */}\n      <div>\n        {hospitalTags.map((tag) => (\n          <button\n            key={tag.id}\n            onClick={() => {\n              setSelectedHospitalTags((prev) =>\n                prev.includes(tag.id)\n                  ? prev.filter((id) => id !== tag.id)\n                  : [...prev, tag.id]\n              );\n            }}\n            style={{\n              margin: \"5px\",\n\n            }}\n          >\n            {tag.name}\n          </button>\n        ))}\n      </div>\n      {/* 病院リスト */}\n      <div>\n        {filteredHospitalStores.length > 0 ? (\n          filteredHospitalStores.map((store) => (\n            <div key={store.store_id}>\n              <h3>{store.store_name}</h3>\n              <p>{store.store_description}</p>\n              <p>住所: {store.store_address}</p>\n              <p>電話番号: {store.store_phone}</p>\n              <a href={store.store_url} target=\"_blank\" rel=\"noopener noreferrer\">詳細はこちら</a>\n            </div>\n          ))\n        ) : (\n          <p>該当する病院がありません。</p>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default HospitalStoreList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}