{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./DogRunPage.css\";\nimport DogrunImage from \"../assets/images/Dogrun/dogrun.png\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DogRunPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [stores, setStores] = useState([]);\n  const handleClick = () => {\n    navigate('/DogrunRegionsList');\n  };\n  useEffect(() => {\n    //店舗データを取得\n    const fetchStores = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/stores\");\n        if (!response.ok) {\n          throw new Error(\"店舗データの取得に失敗しました\");\n        }\n        const data = await response.json();\n        setStores(data);\n      } catch (error) {\n        console.error(\"データ取得エラー:\", error);\n      }\n    };\n    fetchStores();\n  }, []);\n\n  // 店舗データの取得\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        let url = `http://localhost:5003/stores/list/${prefectureId}/1`;\n        if (selectedTagIds.length > 0) {\n          url = `http://localhost:5003/stores/list/tag/${prefectureId}/1?tagIds=${selectedTagIds.join(\",\")}`;\n        }\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(\"データ取得に失敗しました\");\n        }\n        const data = await response.json();\n        setStore(data);\n        setError(null);\n      } catch (error) {\n        console.error(\"データ取得中にエラーが発生しました:\", error);\n        setError(\"タグに該当するドッグランがありません\");\n      }\n    };\n    fetchStores();\n  }, [prefectureId]);\n  store.forEach(storeItem => {\n    console.log(\"取得した店舗情報:\", storeItem);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dogrun-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: handleClick,\n        className: \"search-dogrun\",\n        children: \"\\u5168\\u56FD\\u306E\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u3092\\u63A2\\u3059\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: DogrunImage,\n          alt: \"DogrunImage\",\n          className: \"dogrun-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DogRunPage, \"TI+wXey7FRduAqDjH12E6tEFcWo=\", false, function () {\n  return [useNavigate];\n});\n_c = DogRunPage;\nexport default DogRunPage;\nvar _c;\n$RefreshReg$(_c, \"DogRunPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","DogrunImage","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","DogRunPage","_s","navigate","stores","setStores","handleClick","fetchStores","response","fetch","ok","Error","data","json","error","console","url","prefectureId","selectedTagIds","length","join","setStore","setError","store","forEach","storeItem","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./DogRunPage.css\";\nimport DogrunImage from \"../assets/images/Dogrun/dogrun.png\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\"\nimport \"swiper/css/pagination\";\n\n\n\ninterface Store {\n  id: number;\n  name: string;\n  img: string;\n  description: string;\n}\n\nconst DogRunPage: React.FC = () => {\n  const navigate = useNavigate();\n  const [stores, setStores] = useState<Store[]>([]);\n\n  const handleClick = () => {\n    navigate('/DogrunRegionsList');\n  };\n\nuseEffect(()=> {\n  //店舗データを取得\n  const fetchStores = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5003/stores\");\n      if(!response.ok) {\n        throw new Error(\"店舗データの取得に失敗しました\");\n      }\n      const data: Store[] = await response.json();\n      setStores(data);\n    } catch (error) {\n      console.error(\"データ取得エラー:\", error);\n    }\n  };\n\n  fetchStores();\n}, []);\n\n  // 店舗データの取得\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        let url = `http://localhost:5003/stores/list/${prefectureId}/1`;\n        if (selectedTagIds.length > 0) {\n          url = `http://localhost:5003/stores/list/tag/${prefectureId}/1?tagIds=${selectedTagIds.join(\",\")}`;\n        }\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(\"データ取得に失敗しました\");\n        }\n        const data = await response.json();\n        setStore(data);\n        setError(null);\n      } catch (error) {\n        console.error(\"データ取得中にエラーが発生しました:\", error);\n        setError(\"タグに該当するドッグランがありません\");\n      }\n    };\n    fetchStores();\n  }, [prefectureId]);\n  store.forEach((storeItem) => {\n    console.log(\"取得した店舗情報:\", storeItem);\n  });\n\n\n  return (\n    <>\n      <Header />\n      <div className=\"dogrun-page-container\">\n        <p onClick={handleClick} className=\"search-dogrun\">\n          全国のドッグランを探す\n        </p>\n        <div>\n          <img src={DogrunImage} alt=\"DogrunImage\" className=\"dogrun-image\" />\n        </div>\n      </div>\n\n      <Footer/>\n    </>\n\n  );\n};\n\n\nexport default DogRunPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}