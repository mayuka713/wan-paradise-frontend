{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/components/Login/Login.tsx\",\n  _s = $RefreshSig$();\nimport \"./Login.css\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5003/auth/login\", {\n        method: \"POST\",\n        // POST に変更\n        credentials: \"include\",\n        // クッキーを含める\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        }) // データを送信\n      });\n      console.log(\"Response status:\", response.status);\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"ログイン成功:\", data); // デバッグ用\n        setErrorMessage(\"\");\n        navigate(\"/top\"); // トップページへ遷移\n      } else {\n        const errorData = await response.json();\n        console.error(\"ログインエラー:\", errorData);\n        setErrorMessage(\"メールアドレスまたはパスワードが間違っています。\");\n      }\n    } catch (error) {\n      console.error(\"通信エラー:\", error);\n      setErrorMessage(\"サーバーとの通信に失敗しました。ネットワーク状態を確認してください。\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"wan paradise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true,\n            \"aria-label\": \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true,\n            \"aria-label\": \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u521D\\u3081\\u3066\\u3054\\u5229\\u7528\\u306E\\u65B9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            navigate(\"/register\");\n          },\n          children: \"\\u65B0\\u898F\\u4F1A\\u54E1\\u767B\\u9332\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"errorMessage\",\n        style: {\n          color: \"red\"\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"9nQbzgCSptZpLUPw8KNBqcYIC2Y=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","errorMessage","setErrorMessage","navigate","handleSubmit","e","preventDefault","response","fetch","method","credentials","headers","body","JSON","stringify","console","log","status","ok","data","json","errorData","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","name","placeholder","value","onChange","target","required","onClick","style","color","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/components/Login/Login.tsx"],"sourcesContent":["import \"./Login.css\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Login(): JSX.Element {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(\"http://localhost:5003/auth/login\", {\n        method: \"POST\", // POST に変更\n        credentials: \"include\", // クッキーを含める\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }), // データを送信\n      });\n\n      console.log(\"Response status:\", response.status); \n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"ログイン成功:\", data); // デバッグ用\n        setErrorMessage(\"\");\n        navigate(\"/top\"); // トップページへ遷移\n      } else {\n        const errorData = await response.json();\n        console.error(\"ログインエラー:\", errorData);\n        setErrorMessage(\"メールアドレスまたはパスワードが間違っています。\");\n      }\n    } catch (error) {\n      console.error(\"通信エラー:\", error);\n      setErrorMessage(\"サーバーとの通信に失敗しました。ネットワーク状態を確認してください。\");\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <header className=\"login\">\n        <h1>wan paradise</h1>\n        <h2>ログイン</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"メールアドレス\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              aria-label=\"メールアドレス\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"パスワード\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              aria-label=\"パスワード\"\n            />\n          </div>\n          <button type=\"submit\">ログイン</button>\n          <p>初めてご利用の方</p>\n          <button\n            type=\"button\"\n            onClick={() => {\n              navigate(\"/register\");\n            }} >\n            新規会員登録\n          </button>\n        </form>\n        {errorMessage && (\n          <p id=\"errorMessage\" style={{ color: \"red\" }}>\n            {errorMessage}\n          </p>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}