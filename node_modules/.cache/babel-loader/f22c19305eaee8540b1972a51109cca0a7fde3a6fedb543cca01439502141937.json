{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogcafe/DogCafeStoreList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DogCafesStoreList = () => {\n  _s();\n  const {\n    prefectureId\n  } = useParams();\n  const [store, setStore] = useState([]);\n  const [type3Tag, setType3Tag] = useState([]);\n  const [selectedTagIds, setSelectedTagIds] = useState([]);\n  const [selectedPrefecture, setSelectedPrefecture] = useState(\"\");\n\n  // タグの一覧\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/tags`);\n        const data = await response.json();\n        const type3 = data.filter(tag => tag.tag_type === 3);\n        setType3Tag(type3);\n      } catch (error) {\n        console.error(\"タグ情報の取得に失敗しました:\", error);\n      }\n    };\n    fetchTags();\n  }, []);\n\n  // 店舗データを取得\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        let url;\n        if (selectedTagIds.length === 0) {\n          // タグが選択されていない場合は全店舗を取得\n          url = `http://localhost:5003/stores/list/${prefectureId}`;\n        } else {\n          // タグが選択されている場合はフィルタリング\n          url = `http://localhost:5003/stores/list/tag/${prefectureId}?tagIds=${selectedTagIds.join(\",\")}`;\n        }\n        const response = await fetch(url);\n        const data = await response.json();\n        setStore(data);\n      } catch (error) {\n        console.error(\"店舗データの取得に失敗しました:\", error);\n      }\n    };\n    fetchStores();\n  }, [prefectureId, selectedTagIds]);\n\n  // 都道府県名の設定\n  useEffect(() => {\n    const prefectureNames = {\n      \"1\": \"北海道\",\n      \"13\": \"東京\",\n      \"14\": \"神奈川\",\n      \"23\": \"愛知\",\n      \"26\": \"京都\",\n      \"27\": \"大阪\",\n      \"28\": \"兵庫\"\n    };\n    if (prefectureId && prefectureId in prefectureNames) {\n      setSelectedPrefecture(prefectureNames[prefectureId]);\n    } else {\n      setSelectedPrefecture(\"ドッグカフェ情報がありません\");\n    }\n  }, [prefectureId]);\n\n  // タグ選択のハンドリング\n  const handleTagClick = tagId => {\n    setSelectedTagIds(prev => prev.includes(tagId) ? prev.filter(id => id !== tagId) : [...prev, tagId]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\",\n      backgroundColor: \"#FAF3E0\"\n    },\n    children: selectedPrefecture === \"ドッグカフェ情報がありません\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        children: [\" \", selectedPrefecture, \"\\u306E\\u30C9\\u30C3\\u30B0\\u30AB\\u30D5\\u30A7\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u6761\\u4EF6\\u3092\\u7D5E\\u308A\\u8FBC\\u3080\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: type3Tag.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTagClick(tag.id),\n          style: {\n            marginRight: \"10px\",\n            backgroundColor: selectedTagIds.includes(tag.id) ? \"#B6A28E\" : \"white\"\n          },\n          children: dogCafeTag.name\n        }, tag.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u5E97\\u8217\\u4E00\\u89A7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30C9\\u30C3\\u30B0\\u30AB\\u30D5\\u30A7\\u60C5\\u5831\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u8A72\\u5F53\\u3059\\u308B\\u30C7\\u30FC\\u30BF\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(DogCafesStoreList, \"+LAxu2qPxWleJa9USVI+l0uA8gE=\", false, function () {\n  return [useParams];\n});\n_c = DogCafesStoreList;\nexport default DogCafesStoreList;\nvar _c;\n$RefreshReg$(_c, \"DogCafesStoreList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","DogCafesStoreList","_s","prefectureId","store","setStore","type3Tag","setType3Tag","selectedTagIds","setSelectedTagIds","selectedPrefecture","setSelectedPrefecture","fetchTags","response","fetch","data","json","type3","filter","tag","tag_type","error","console","fetchStores","url","length","join","prefectureNames","handleTagClick","tagId","prev","includes","id","style","textAlign","padding","backgroundColor","children","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","marginRight","dogCafeTag","name","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogcafe/DogCafeStoreList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ninterface DogCafe {\n  store_id: number;\n  name: string;\n  description: string;\n  address: string;\n  phone_number: string;\n  store_url: string;\n  store_img: string;\n  tags: { id: number; name: string }[];\n}\n\n\ninterface tags {\n  id: number;\n  name: string;\n}\n\n\nconst DogCafesStoreList: React.FC = () => {\n  const { prefectureId } = useParams<{ prefectureId: string }>();\n  const [store, setStore] = useState<Store[]>([]);\n  const [type3Tag, setType3Tag] = useState<Tag[]>([]);\n  const [selectedTagIds, setSelectedTagIds] = useState<number[]>([]);\n\n  const [selectedPrefecture, setSelectedPrefecture] = useState<string>(\"\");\n\n  // タグの一覧\n  useEffect(() => {\n    const fetchTags = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/tags`);\n        const data: Tag[] = await response.json();\n        const type3 = data.filter((tag) => tag.tag_type === 3);\n\n        setType3Tag(type3);\n      } catch (error) {\n        console.error(\"タグ情報の取得に失敗しました:\", error);\n      }\n    };\n    fetchTags();\n  }, []);\n\n\n  // 店舗データを取得\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        let url;\n        if (selectedTagIds.length === 0) {\n          // タグが選択されていない場合は全店舗を取得\n          url = `http://localhost:5003/stores/list/${prefectureId}`;\n        } else {\n          // タグが選択されている場合はフィルタリング\n          url = `http://localhost:5003/stores/list/tag/${prefectureId}?tagIds=${selectedTagIds.join(\",\")}`;\n        }\n\n        const response = await fetch(url);\n        const data = await response.json();\n        setStore(data);\n      } catch (error) {\n        console.error(\"店舗データの取得に失敗しました:\", error);\n      }\n    };\n    fetchStores();\n  }, [prefectureId, selectedTagIds]);\n\n\n\n  // 都道府県名の設定\n  useEffect(() => {\n    const prefectureNames: { [key: string]: string } = {\n      \"1\": \"北海道\",\n      \"13\": \"東京\",\n      \"14\": \"神奈川\",\n      \"23\": \"愛知\",\n      \"26\": \"京都\",\n      \"27\": \"大阪\",\n      \"28\": \"兵庫\",\n    };\n    if (prefectureId && prefectureId in prefectureNames) {\n      setSelectedPrefecture(prefectureNames[prefectureId]);\n    } else {\n      setSelectedPrefecture(\"ドッグカフェ情報がありません\");\n    }\n  }, [prefectureId]);\n\n\n\n  // タグ選択のハンドリング\n  const handleTagClick = (tagId: number) => {\n    setSelectedTagIds((prev) =>\n      prev.includes(tagId) ? prev.filter((id) => id !== tagId) : [...prev, tagId]\n    );\n  };\n\n\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        padding: \"20px\",\n        backgroundColor: \"#FAF3E0\",\n      }}\n    >\n      {selectedPrefecture === \"ドッグカフェ情報がありません\" ? (\n        <>\n          <h2 style={{ fontWeight: \"bold\", }}> {selectedPrefecture}のドッグカフェ</h2>\n          <p>条件を絞り込む</p>\n          <div>\n            {type3Tag.map((tag) => (\n              <button\n                key={tag.id}\n                onClick={() => handleTagClick(tag.id)}\n                style={{\n                  marginRight: \"10px\",\n                  backgroundColor: selectedTagIds.includes(tag.id)\n                    ? \"#B6A28E\"\n                    : \"white\",\n                }}\n              >\n                {dogCafeTag.name}\n              </button>\n            ))}\n          </div>\n          <h3>店舗一覧</h3>\n\n        </>\n      ) : (\n        <>\n          <h2>ドッグカフェ情報がありません</h2>\n          <p>該当するデータが見つかりません。</p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default DogCafesStoreList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}