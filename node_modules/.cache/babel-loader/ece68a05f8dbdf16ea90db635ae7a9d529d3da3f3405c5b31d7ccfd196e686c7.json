{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/FavoritePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../pages/FavoritePage.css\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FavoritePage = () => {\n  _s();\n  const [favorites, setFavorites] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [user_id, setUser_id] = useState(0);\n  const getUserIdFromCookie = () => {\n    const cookies = document.cookie.split(\"; \"); // クッキーを分割\n    for (let cookie of cookies) {\n      const [name, value] = cookie.split(\"=\"); // クッキー名と値を分割\n      if (name === \"user_id\") {\n        const parsedValue = parseInt(decodeURIComponent(value), 10); // URIデコードしてから数値に変換\n        return isNaN(parsedValue) ? null : parsedValue; // NaNの場合はnullを返す\n      }\n    }\n    return null; // 該当するクッキーが存在しない場合\n  };\n  useEffect(() => {\n    const userIdFromCookie = getUserIdFromCookie();\n    setUser_id(userIdFromCookie); // `number | null` の型で渡す\n  }, []);\n  useEffect(() => {\n    const fetchFavorites = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/favorites/${user_id}`, {\n          method: \"GET\",\n          credentials: \"include\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"エラーが返されました\");\n        }\n        const data = await response.json();\n        if (!Array.isArray(data)) {\n          throw new Error(\"予想しないデータ形式\");\n        }\n        setFavorites(data);\n      } catch (error) {}\n    };\n    fetchFavorites();\n  }, [user_id]);\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/reviews\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"口コミデータの取得に失敗しました\");\n        }\n        const data = await response.json();\n        if (!Array.isArray(data)) {\n          throw new Error(\"予測しないデータ形式\");\n        }\n        setReviews(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchReviews();\n  }, []);\n  useEffect(() => {\n    const addFavorite = async (user_id, storeId) => {\n      try {\n        const response = await fetch(\"http://localhost:5003/favorites\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            user_id: user_id,\n            store_id: storeId\n          })\n        });\n        if (!response.ok) {\n          throw new Error(\"お気に入り登録に失敗しました\");\n        }\n        console.log(\"お気に入りが正常に追加されました\");\n      } catch (error) {\n        console.error(\"追加エラー:\", error);\n      }\n    };\n  }, []);\n\n  // store_type に基づいてカテゴリごとに分類\n  const categories = [{\n    type: \"1\",\n    name: \"ドッグラン\"\n  }, {\n    type: \"2\",\n    name: \"ドッグカフェ\"\n  }, {\n    type: \"3\",\n    name: \"ペットショップ\"\n  }, {\n    type: \"4\",\n    name: \"動物病院\"\n  }];\n  const categorizedFavorites = categories.map(({\n    type,\n    name\n  }) => ({\n    category: name,\n    stores: favorites.filter(favorite => favorite.store_type === type)\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favorite-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"app-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"\\u304A\\u6C17\\u306B\\u5165\\u308A\\u30EA\\u30B9\\u30C8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), categorizedFavorites.map(({\n        category,\n        stores\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"category-title\",\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"favorite-list\",\n          children: stores.length > 0 ? stores.map(favorite => {\n            //口コミの平均評価を計算\n            const storeReviews = reviews.filter(review => review.store_id === favorite.store_id);\n            const averageRating = storeReviews.length > 0 ? storeReviews.reduce((sum, review) => sum + review.rating, 0) / storeReviews.length : 0;\n\n            // store_type に応じた詳細ページへのリンク\n            let detailPage = \"/\";\n            switch (favorite.store_type) {\n              case \"1\":\n                detailPage = `/dogrun/detail/${favorite.store_id}`;\n                break;\n              case \"2\":\n                detailPage = `/dogcafe/detail/${favorite.store_id}`;\n                break;\n              case \"3\":\n                detailPage = `/petshop/detail/${favorite.store_id}`;\n                break;\n              case \"4\":\n                detailPage = `/hospital/detail/${favorite.store_id}`;\n                break;\n              default:\n                detailPage = \"/\";\n            }\n            return /*#__PURE__*/_jsxDEV(Link, {\n              to: detailPage,\n              className: \"favorite-link\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"favorite-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: favorite.store_img || \"https://placehold.jp/150x150.png\",\n                  alt: favorite.store_name,\n                  onError: e => {\n                    console.log(\"画像読み込みエラー:\", e.currentTarget.src);\n                    if (e.currentTarget.src !== \"https://placehold.jp/150x150.png\") {\n                      e.currentTarget.src = \"https://placehold.jp/150x150.png\";\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"favorite-title\",\n                  children: favorite.store_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"review-average\",\n                  children: [[1, 2, 3, 4, 5].map(value => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `star ${value <= Math.round(averageRating) ? \"selected\" : \"\"}`,\n                    children: \"\\u2605\"\n                  }, `star-${favorite.store_id}-${value}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 29\n                  }, this)), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: averageRating.toFixed(1)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 23\n              }, this)\n            }, favorite.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 21\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-favorites\",\n            children: \"\\u304A\\u6C17\\u306B\\u5165\\u308A\\u304C\\u307E\\u3060\\u767B\\u9332\\u3055\\u308C\\u3066\\u3044\\u307E\\u305B\\u3093\\u3002\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(FavoritePage, \"ge+CuSMoY5sgeLDUeFMH9UL5Dps=\");\n_c = FavoritePage;\nexport default FavoritePage;\nvar _c;\n$RefreshReg$(_c, \"FavoritePage\");","map":{"version":3,"names":["React","useEffect","useState","Link","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","FavoritePage","_s","favorites","setFavorites","reviews","setReviews","user_id","setUser_id","getUserIdFromCookie","cookies","document","cookie","split","name","value","parsedValue","parseInt","decodeURIComponent","isNaN","userIdFromCookie","fetchFavorites","response","fetch","method","credentials","headers","ok","Error","data","json","Array","isArray","error","fetchReviews","console","addFavorite","storeId","body","JSON","stringify","store_id","log","categories","type","categorizedFavorites","map","category","stores","filter","favorite","store_type","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","storeReviews","review","averageRating","reduce","sum","rating","detailPage","to","src","store_img","alt","store_name","onError","e","currentTarget","Math","round","toFixed","id","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/FavoritePage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../pages/FavoritePage.css\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\ninterface Favorite {\n  id: number;\n  user_id: number;\n  store_id: number;\n  store_name: string;\n  store_address: string;\n  store_URL: string;\n  store_img: string;\n  store_type: number;\n}\n\ninterface Review {\n  id: number;\n  store_id: number;\n  rating: number;\n  comment: string;\n}\n\nconst FavoritePage: React.FC = () => {\n  const [favorites, setFavorites] = useState<Favorite[]>([]);\n  const [reviews, setReviews] = useState<Review[]>([]);\n  const [user_id, setUser_id] = useState<number | null>(0)\n\n\n  const getUserIdFromCookie = (): number | null => {\n    const cookies = document.cookie.split(\"; \"); // クッキーを分割\n    for (let cookie of cookies) {\n      const [name, value] = cookie.split(\"=\"); // クッキー名と値を分割\n      if (name === \"user_id\") {\n        const parsedValue = parseInt(decodeURIComponent(value), 10); // URIデコードしてから数値に変換\n        return isNaN(parsedValue) ? null : parsedValue; // NaNの場合はnullを返す\n      }\n    }\n    return null; // 該当するクッキーが存在しない場合\n  };\n\n  useEffect(() => {\n    const userIdFromCookie = getUserIdFromCookie();\n    setUser_id(userIdFromCookie); // `number | null` の型で渡す\n  }, []);\n\n\n  useEffect(() => {\n    const fetchFavorites = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/favorites/${user_id}`, {\n          method: \"GET\",\n          credentials: \"include\",\n          headers: { \"Content-Type\": \"application/json\" },\n        });\n\n        if (!response.ok) {\n          throw new Error(\"エラーが返されました\");\n        }\n\n        const data = await response.json();\n        if(!Array.isArray(data)) {\n        throw new Error(\"予想しないデータ形式\");\n      }\n        setFavorites(data);\n      } catch (error) {\n      }\n    };\n\n    fetchFavorites();\n  }, [user_id]);\n\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/reviews\", {\n          method: \"GET\",\n          headers: { \"Content-Type\": \"application/json\" },\n        });\n\n        if (!response.ok) {\n          throw new Error(\"口コミデータの取得に失敗しました\");\n        }\n\n        const data = await response.json();\n        if(!Array.isArray(data)) {\n          throw new Error(\"予測しないデータ形式\");\n        }\n        setReviews(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchReviews();\n  }, []);\n\nuseEffect(() => {\n  const addFavorite = async  (user_id: number, storeId: number) => {\n    try {\n      const response = await fetch(\"http://localhost:5003/favorites\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ user_id: user_id, store_id: storeId }),\n      });\n  \n      if (!response.ok) {\n        throw new Error(\"お気に入り登録に失敗しました\");\n      }\n  \n      console.log(\"お気に入りが正常に追加されました\");\n    } catch (error) {\n      console.error(\"追加エラー:\", error);\n    }\n    };\n  }, []);\n  \n  // store_type に基づいてカテゴリごとに分類\n  const categories = [\n    { type: \"1\", name: \"ドッグラン\" },\n    { type: \"2\", name: \"ドッグカフェ\" },\n    { type: \"3\", name: \"ペットショップ\" },\n    { type: \"4\", name: \"動物病院\" },\n  ];\n\n  const categorizedFavorites = categories.map(({ type, name }) => ({\n    category: name,\n    stores: favorites.filter((favorite) => favorite.store_type === type),\n  }));\n\n\n  return (\n    <>\n      <Header />\n      <div className=\"favorite-container\">\n        <header className=\"app-header\">\n          <h1 className=\"title\">お気に入りリスト</h1>\n        </header>\n        {/* カテゴリごとにリストを作成 */}\n        {categorizedFavorites.map(({ category, stores }) => (\n          <div key={category} className=\"category-section\">\n            <h2 className=\"category-title\">{category}</h2>\n            <ul className=\"favorite-list\">\n              {stores.length > 0 ? (\n                \n                stores.map((favorite) => {\n                  \n                  //口コミの平均評価を計算\n                  const storeReviews = reviews.filter(\n                    (review) => review.store_id === favorite.store_id\n                  );\n                  const averageRating =\n                    storeReviews.length > 0 ? storeReviews.reduce((sum, review) => sum + review.rating, 0) /\n                      storeReviews.length\n                      : 0;\n\n\n                  // store_type に応じた詳細ページへのリンク\n                  let detailPage = \"/\";\n                  switch (favorite.store_type) {\n                    case \"1\":\n                      detailPage = `/dogrun/detail/${favorite.store_id}`;\n                      break;\n                    case \"2\":\n                      detailPage = `/dogcafe/detail/${favorite.store_id}`;\n                      break;\n                    case \"3\":\n                      detailPage = `/petshop/detail/${favorite.store_id}`;\n                      break;\n                    case \"4\":\n                      detailPage = `/hospital/detail/${favorite.store_id}`;\n                      break;\n                    default:\n                      detailPage = \"/\";\n                  }\n\n                  return (\n                    <Link key={favorite.id} to={detailPage} className=\"favorite-link\">\n                      <li className=\"favorite-item\">\n                      <img\n  src={favorite.store_img || \"https://placehold.jp/150x150.png\"}\n  alt={favorite.store_name}\n  onError={(e) => {\n    console.log(\"画像読み込みエラー:\", e.currentTarget.src);\n    if (e.currentTarget.src !== \"https://placehold.jp/150x150.png\") {\n      e.currentTarget.src = \"https://placehold.jp/150x150.png\";\n    }\n  }}\n/>\n\n\n                        <h2 className=\"favorite-title\">{favorite.store_name}</h2>\n\n                        {/* 口コミの平均評価を表示 */}\n                        <div className=\"review-average\">\n                          {[1, 2, 3, 4, 5].map((value) => (\n                            <span\n                              key={`star-${favorite.store_id}-${value}`}\n                              className={`star ${value <= Math.round(averageRating) ? \"selected\" : \"\"}`}\n                            >\n                              ★\n                            </span>\n                          ))}\n                          <strong>{averageRating.toFixed(1)}</strong>\n                        </div>\n                      </li>\n                    </Link>\n                  );\n                })\n              ) : (\n              <p className=\"no-favorites\">お気に入りがまだ登録されていません。</p>\n          )}\n            </ul>\n          </div>\n        ))}\n        </div>\n        <Footer />\n      </>\n      );\n    };\n\n      export default FavoritePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}