{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunReview.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./ReviewList.css\";\nimport \"./Modal.css\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ReviewList = () => {\n  _s();\n  const {\n    storeId\n  } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/reviews`);\n        if (!response.ok) {\n          throw new Error(\"口コミ情報の取得に失敗しました\");\n        }\n        const data = await response.json();\n        const filteredReviews = data.filter(review => review.store_id === Number(storeId));\n        setReviews(filteredReviews);\n      } catch (error) {\n        console.error(error);\n        setError(\"口コミの取得に失敗しました\");\n      }\n    };\n    fetchReviews();\n  }, [storeId]);\n  const handleReviewSubmit = async (rating, comment) => {\n    try {\n      const newReviewData = {\n        store_id: Number(storeId),\n        rating,\n        comment: comment.trim()\n      };\n      const response = await fetch(`http://localhost:5003/reviews`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newReviewData)\n      });\n      if (!response.ok) {\n        throw new Error(\"コメント投稿に失敗しました\");\n      }\n      const createdReview = await response.json();\n      setReviews(prev => [...prev, createdReview]);\n      setError(null);\n      setShowModal(false); // モーダルを閉じる\n    } catch (error) {\n      console.error(error);\n      setError(\"コメント投稿に失敗しました\");\n    }\n  };\n  let content;\n  if (error && reviews.length === 0) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }, this);\n  } else if (reviews.length === 0) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"20px\"\n      },\n      children: \"\\u307E\\u3060\\u53E3\\u30B3\\u30DF\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }, this);\n  } else {\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"review-rating\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u8A55\\u4FA1:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 42\n          }, this), \" \", review.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"review-comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u30B3\\u30E1\\u30F3\\u30C8:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 43\n          }, this), \" \", review.comment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, review.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }\n  const handleSubmitReview = async (rating, comment) => {\n    try {\n      const response = await fetch('/api/reviews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          rating,\n          comment\n        }) // リクエストボディを明示的に送る\n      });\n      if (!response.ok) {\n        throw new Error('コメント投稿に失敗しました');\n      }\n\n      // 成功時の処理\n      setShowModal(false);\n      setError(null); // error stateがある場合はこれでクリアできる\n    } catch (error) {\n      setError(error.message); // setErrorMessageではなく、既存のsetErrorを使用\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"review-title\",\n      children: \"\\u53E3\\u30B3\\u30DF\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowModal(true),\n      style: {\n        marginTop: \"20px\"\n      },\n      children: \"\\u6295\\u7A3F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), error && reviews.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 39\n    }, this), content, /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onClose: () => setShowModal(false),\n      onSubmit: handleReviewSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewList, \"yMifDwXxWpOYioxq7CFQxOcRAVQ=\", false, function () {\n  return [useParams];\n});\n_c = ReviewList;\nexport default ReviewList;\nvar _c;\n$RefreshReg$(_c, \"ReviewList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","ReviewList","_s","storeId","reviews","setReviews","error","setError","showModal","setShowModal","fetchReviews","response","fetch","ok","Error","data","json","filteredReviews","filter","review","store_id","Number","console","handleReviewSubmit","rating","comment","newReviewData","trim","method","headers","body","JSON","stringify","createdReview","prev","content","length","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","map","className","id","handleSubmitReview","message","onClick","marginTop","color","show","onClose","onSubmit","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunReview.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./ReviewList.css\";\nimport \"./Modal.css\";\nimport Modal from \"./Modal\";\n\ninterface Review {\n  id: number;\n  store_id: number;\n  rating: number;\n  comment: string;\n}\n\nconst ReviewList: React.FC = () => {\n  const { storeId } = useParams<{ storeId: string }>();\n  const [reviews, setReviews] = useState<Review[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/reviews`);\n        if (!response.ok) {\n          throw new Error(\"口コミ情報の取得に失敗しました\");\n        }\n        const data: Review[] = await response.json();\n        const filteredReviews = data.filter((review) => review.store_id === Number(storeId));\n        setReviews(filteredReviews);\n      } catch (error) {\n        console.error(error);\n        setError(\"口コミの取得に失敗しました\");\n      }\n    };\n    fetchReviews();\n  }, [storeId]);\n\n  const handleReviewSubmit = async (rating: number, comment: string) => {\n    try {\n      const newReviewData = {\n        store_id: Number(storeId),\n        rating,\n        comment: comment.trim()\n      };\n\n      const response = await fetch(`http://localhost:5003/reviews`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newReviewData),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"コメント投稿に失敗しました\");\n      }\n\n      const createdReview = (await response.json()) as Review;\n      setReviews((prev) => [...prev, createdReview]);\n      setError(null);\n      setShowModal(false); // モーダルを閉じる\n    } catch (error) {\n      console.error(error);\n      setError(\"コメント投稿に失敗しました\");\n    }\n  };\n\n  let content;\n  if (error && reviews.length === 0) {\n    content = <div>{error}</div>;\n  } else if (reviews.length === 0) {\n    content = <div style={{ padding: \"20px\" }}>まだ口コミはありません</div>;\n  } else {\n    content = (\n      <>\n        {reviews.map((review) => (\n          <div key={review.id} className=\"review-card\">\n            <p className=\"review-rating\"><strong>評価:</strong> {review.rating}</p>\n            <p className=\"review-comment\"><strong>コメント:</strong> {review.comment}</p>\n          </div>\n        ))}\n      </>\n    );\n  }\n  const handleSubmitReview = async (rating: number , comment: string) => {\n    try {\n      const response = await fetch('/api/reviews', {\n        method: 'POST',\n        headers: {\n         'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ rating, comment }) // リクエストボディを明示的に送る\n      });\n  \n      if (!response.ok) {\n        throw new Error('コメント投稿に失敗しました');\n      }\n  \n      // 成功時の処理\n      setShowModal(false);\n      setError(null); // error stateがある場合はこれでクリアできる\n    } catch (error: any) {\n      setError(error.message); // setErrorMessageではなく、既存のsetErrorを使用\n    }\n  };\n\n\n  return (\n    <div className=\"review-container\">\n      <h2 className=\"review-title\">口コミ一覧</h2>\n      <button onClick={() => setShowModal(true)} style={{ marginTop: \"20px\" }}>投稿</button>\n      {error && reviews.length > 0 && <p style={{ color: \"red\" }}>{error}</p>}\n      {content}\n      <Modal show={showModal} onClose={() => setShowModal(false)} onSubmit={handleReviewSubmit} />\n    </div>\n  );\n};\n\nexport default ReviewList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,kBAAkB;AACzB,OAAO,aAAa;AACpB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAS5B,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAQ,CAAC,GAAGR,SAAS,CAAsB,CAAC;EACpD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;QAC7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;QACpC;QACA,MAAMC,IAAc,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAC5C,MAAMC,eAAe,GAAGF,IAAI,CAACG,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,QAAQ,KAAKC,MAAM,CAAClB,OAAO,CAAC,CAAC;QACpFE,UAAU,CAACY,eAAe,CAAC;MAC7B,CAAC,CAAC,OAAOX,KAAK,EAAE;QACdgB,OAAO,CAAChB,KAAK,CAACA,KAAK,CAAC;QACpBC,QAAQ,CAAC,eAAe,CAAC;MAC3B;IACF,CAAC;IACDG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACP,OAAO,CAAC,CAAC;EAEb,MAAMoB,kBAAkB,GAAG,MAAAA,CAAOC,MAAc,EAAEC,OAAe,KAAK;IACpE,IAAI;MACF,MAAMC,aAAa,GAAG;QACpBN,QAAQ,EAAEC,MAAM,CAAClB,OAAO,CAAC;QACzBqB,MAAM;QACNC,OAAO,EAAEA,OAAO,CAACE,IAAI,CAAC;MACxB,CAAC;MAED,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DgB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,aAAa;MACpC,CAAC,CAAC;MAEF,IAAI,CAACf,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;MAClC;MAEA,MAAMmB,aAAa,GAAI,MAAMtB,QAAQ,CAACK,IAAI,CAAC,CAAY;MACvDX,UAAU,CAAE6B,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,aAAa,CAAC,CAAC;MAC9C1B,QAAQ,CAAC,IAAI,CAAC;MACdE,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdgB,OAAO,CAAChB,KAAK,CAACA,KAAK,CAAC;MACpBC,QAAQ,CAAC,eAAe,CAAC;IAC3B;EACF,CAAC;EAED,IAAI4B,OAAO;EACX,IAAI7B,KAAK,IAAIF,OAAO,CAACgC,MAAM,KAAK,CAAC,EAAE;IACjCD,OAAO,gBAAGrC,OAAA;MAAAuC,QAAA,EAAM/B;IAAK;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC9B,CAAC,MAAM,IAAIrC,OAAO,CAACgC,MAAM,KAAK,CAAC,EAAE;IAC/BD,OAAO,gBAAGrC,OAAA;MAAK4C,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAN,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9D,CAAC,MAAM;IACLN,OAAO,gBACLrC,OAAA,CAAAE,SAAA;MAAAqC,QAAA,EACGjC,OAAO,CAACwC,GAAG,CAAEzB,MAAM,iBAClBrB,OAAA;QAAqB+C,SAAS,EAAC,aAAa;QAAAR,QAAA,gBAC1CvC,OAAA;UAAG+C,SAAS,EAAC,eAAe;UAAAR,QAAA,gBAACvC,OAAA;YAAAuC,QAAA,EAAQ;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACtB,MAAM,CAACK,MAAM;QAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrE3C,OAAA;UAAG+C,SAAS,EAAC,gBAAgB;UAAAR,QAAA,gBAACvC,OAAA;YAAAuC,QAAA,EAAQ;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACtB,MAAM,CAACM,OAAO;QAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFjEtB,MAAM,CAAC2B,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd,CACN;IAAC,gBACF,CACH;EACH;EACA,MAAMM,kBAAkB,GAAG,MAAAA,CAAOvB,MAAc,EAAGC,OAAe,KAAK;IACrE,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc,EAAE;QAC3CgB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACR,cAAc,EAAE;QACjB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,MAAM;UAAEC;QAAQ,CAAC,CAAC,CAAC;MAC5C,CAAC,CAAC;MAEF,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;MAClC;;MAEA;MACAL,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOD,KAAU,EAAE;MACnBC,QAAQ,CAACD,KAAK,CAAC0C,OAAO,CAAC,CAAC,CAAC;IAC3B;EACF,CAAC;EAGD,oBACElD,OAAA;IAAK+C,SAAS,EAAC,kBAAkB;IAAAR,QAAA,gBAC/BvC,OAAA;MAAI+C,SAAS,EAAC,cAAc;MAAAR,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvC3C,OAAA;MAAQmD,OAAO,EAAEA,CAAA,KAAMxC,YAAY,CAAC,IAAI,CAAE;MAACiC,KAAK,EAAE;QAAEQ,SAAS,EAAE;MAAO,CAAE;MAAAb,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACnFnC,KAAK,IAAIF,OAAO,CAACgC,MAAM,GAAG,CAAC,iBAAItC,OAAA;MAAG4C,KAAK,EAAE;QAAES,KAAK,EAAE;MAAM,CAAE;MAAAd,QAAA,EAAE/B;IAAK;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtEN,OAAO,eACRrC,OAAA,CAACF,KAAK;MAACwD,IAAI,EAAE5C,SAAU;MAAC6C,OAAO,EAAEA,CAAA,KAAM5C,YAAY,CAAC,KAAK,CAAE;MAAC6C,QAAQ,EAAE/B;IAAmB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzF,CAAC;AAEV,CAAC;AAACvC,EAAA,CArGID,UAAoB;EAAA,QACJN,SAAS;AAAA;AAAA4D,EAAA,GADzBtD,UAAoB;AAuG1B,eAAeA,UAAU;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}