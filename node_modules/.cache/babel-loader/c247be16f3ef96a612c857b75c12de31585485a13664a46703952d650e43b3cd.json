{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunStoreList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DogRunStoreList = () => {\n  _s();\n  const {\n    prefectureId\n  } = useParams();\n  const navigate = useNavigate();\n  const [stores, setStores] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [selectedTagIds, setSelectedTagIds] = useState([]);\n  const [selectedPrefecture, setSelectedPrefecture] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const prefectureNames = {\n    \"1\": \"北海道\",\n    \"60\": \"東京\",\n    \"61\": \"神奈川\",\n    \"70\": \"愛知\",\n    \"73\": \"京都\",\n    \"74\": \"大阪\",\n    \"75\": \"兵庫\"\n  };\n  useEffect(() => {\n    // 選択された都道府県名をセット\n    setSelectedPrefecture(prefectureNames[prefectureId !== null && prefectureId !== void 0 ? prefectureId : \"\"] || \"ドッグラン情報がありません\");\n\n    // タグデータの取得\n    const fetchTags = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(\"http://localhost:5003/tags\");\n        const data = await response.json();\n        setTags(data);\n      } catch (error) {\n        setError(\"タグ情報の取得に失敗しました\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTags();\n  }, [prefectureId]);\n\n  // タグがクリックされたときのハンドラー\n  const handleTagClick = async tagId => {\n    setSelectedTagIds([tagId]);\n    setLoading(true);\n    try {\n      // 選択したタグに基づいて該当する店舗をバックエンドから取得\n      const response = await fetch(`http://localhost:5003/stores/by-tag/${tagId}`);\n      const data = await response.json();\n      if (data.length > 0) {\n        // 該当する店舗がある場合、最初の店舗の詳細ページに遷移\n        navigate(`/store/${data[0].store_id}`);\n      } else {\n        setError(\"該当するドッグランが見つかりませんでした。\");\n      }\n    } catch (error) {\n      setError(\"店舗情報の取得に失敗しました。\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\",\n      backgroundColor: \"#FAF3E0\"\n    },\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\",\n        marginBottom: \"20px\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [selectedPrefecture, \"\\u306E\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: \"14px\",\n        marginBottom: \"20px\"\n      },\n      children: \"\\u884C\\u304D\\u305F\\u3044\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u306E\\u6761\\u4EF6\\u3092\\u63A2\\u3059\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        gap: \"10px\"\n      },\n      children: tags.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTagClick(tag.id),\n        style: {\n          backgroundColor: selectedTagIds.includes(tag.id) ? \"#D1E8E2\" : \"#FFF\",\n          color: \"#333\",\n          padding: \"10px 15px\",\n          border: \"1px solid #333\",\n          borderRadius: \"20px\",\n          cursor: \"pointer\",\n          fontSize: \"15px\",\n          fontFamily: \"Noto sans\"\n        },\n        children: tag.name\n      }, tag.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(DogRunStoreList, \"sr8BAKcJyrKPrEZ/zq6R/LYMdg8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = DogRunStoreList;\nexport default DogRunStoreList;\nvar _c;\n$RefreshReg$(_c, \"DogRunStoreList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","DogRunStoreList","_s","prefectureId","navigate","stores","setStores","tags","setTags","selectedTagIds","setSelectedTagIds","selectedPrefecture","setSelectedPrefecture","loading","setLoading","error","setError","prefectureNames","fetchTags","response","fetch","data","json","handleTagClick","tagId","length","store_id","style","textAlign","padding","backgroundColor","children","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","display","flexWrap","justifyContent","gap","map","tag","onClick","id","includes","border","borderRadius","cursor","fontFamily","name","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunStoreList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\ninterface Store {\n  id: number;\n  name: string;\n  description: string;\n  address: string;\n  phone_number: string;\n  store_url: string;\n  store_img: string;\n  tags: Tag[];\n}\n\ninterface Tag {\n  id: number;\n  name: string;\n}\n\nconst DogRunStoreList: React.FC = () => {\n  const { prefectureId } = useParams<{ prefectureId: string }>();\n  const navigate = useNavigate();\n  const [stores, setStores] = useState<Store[]>([]);\n  const [tags, setTags] = useState<Tag[]>([]);\n  const [selectedTagIds, setSelectedTagIds] = useState<number[]>([]);\n  const [selectedPrefecture, setSelectedPrefecture] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const prefectureNames: { [key: string]: string } = {\n    \"1\": \"北海道\",\n    \"60\": \"東京\",\n    \"61\": \"神奈川\",\n    \"70\": \"愛知\",\n    \"73\": \"京都\",\n    \"74\": \"大阪\",\n    \"75\": \"兵庫\",\n  };\n\n  useEffect(() => {\n    // 選択された都道府県名をセット\n    setSelectedPrefecture(\n      prefectureNames[prefectureId ?? \"\"] || \"ドッグラン情報がありません\"\n    );\n\n    // タグデータの取得\n    const fetchTags = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(\"http://localhost:5003/tags\");\n        const data = await response.json();\n        setTags(data);\n      } catch (error) {\n        setError(\"タグ情報の取得に失敗しました\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTags();\n  }, [prefectureId]);\n\n  // タグがクリックされたときのハンドラー\n  const handleTagClick = async (tagId: number) => {\n    setSelectedTagIds([tagId]);\n    setLoading(true);\n    try {\n      // 選択したタグに基づいて該当する店舗をバックエンドから取得\n      const response = await fetch(`http://localhost:5003/stores/by-tag/${tagId}`);\n      const data = await response.json();\n\n      if (data.length > 0) {\n        // 該当する店舗がある場合、最初の店舗の詳細ページに遷移\n        navigate(`/store/${data[0].store_id}`);\n      } else {\n        setError(\"該当するドッグランが見つかりませんでした。\");\n      }\n    } catch (error) {\n      setError(\"店舗情報の取得に失敗しました。\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", padding: \"20px\", backgroundColor: \"#FAF3E0\" }}>\n      {error && <div style={{ color: \"red\", marginBottom: \"20px\" }}>{error}</div>}\n      {loading && <p>読み込み中...</p>}\n      \n      <h2>{selectedPrefecture}のドッグラン</h2>\n      <p style={{ fontSize: \"14px\", marginBottom: \"20px\" }}>行きたいドッグランの条件を探す</p>\n\n      {/* タグボタン */}\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\", gap: \"10px\" }}>\n        {tags.map((tag) => (\n          <button\n            key={tag.id}\n            onClick={() => handleTagClick(tag.id)}\n            style={{\n              backgroundColor: selectedTagIds.includes(tag.id) ? \"#D1E8E2\" : \"#FFF\",\n              color: \"#333\",\n              padding: \"10px 15px\",\n              border: \"1px solid #333\",\n              borderRadius: \"20px\",\n              cursor: \"pointer\",\n              fontSize: \"15px\",\n              fontFamily:\"Noto sans\",\n            }}\n          >\n            {tag.name}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DogRunStoreList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}