{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nconst DogCafeRegionList = () => {\n  _s();\n  const navigate = useNavigate();\n  const [prefectures, setPrefectures] = useState([]);\n\n  //店舗データの取得\n  useEffect(() => {\n    const fetchPrefectures = async () => {\n      try {\n        const response = await fetch('http://localhost:5003/prefectures/');\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch prefectures\");\n        }\n        const data = await response.json();\n        setPrefectures(data);\n      } catch (error) {\n        console.error(\"データの取得に失敗しました:\", error);\n      }\n    };\n    fetchPrefectures();\n  }, []);\n  const handleClick = id => {\n    navigate('/dogcafe/${id}');\n  };\n};\n_s(DogCafeRegionList, \"Ufsb87+X74Knv4LChbdyBd+jMwc=\", false, function () {\n  return [useNavigate];\n});\n_c = DogCafeRegionList;\nexport default DogCafeRegionList;\nvar _c;\n$RefreshReg$(_c, \"DogCafeRegionList\");","map":{"version":3,"names":["useEffect","useState","useNavigate","DogCafeRegionList","_s","navigate","prefectures","setPrefectures","fetchPrefectures","response","fetch","ok","Error","data","json","error","console","handleClick","id","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogcafe/DogCafeRegionList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\ninterface Prefecture {\n  id: number;\n  name: string;\n  region: string;\n}\n\nconst DogCafeRegionList: React.FC = () => {\n  const navigate = useNavigate();\n  const [prefectures, setPrefectures ] = useState<Prefecture[]>([]);\n  \n  //店舗データの取得\n  useEffect(() => {  \n    const fetchPrefectures = async () => {\n      try {\n        const response = await fetch('http://localhost:5003/prefectures/');\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch prefectures\");\n        }\n        const data: Prefecture[] = await response.json();\n        setPrefectures(data);\n      } catch (error) {\n        console.error(\"データの取得に失敗しました:\", error);\n      }\n    };\n\n    fetchPrefectures();\n  }, []);\n\n  const handleClick = (id: number) => {\n   navigate('/dogcafe/${id}');\n};\n  \n\n\n};\nexport default DogCafeRegionList;\n"],"mappings":";AAAA,SAAgBA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAmB,kBAAkB;AAQzD,MAAMC,iBAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAE,GAAGN,QAAQ,CAAe,EAAE,CAAC;;EAEjE;EACAD,SAAS,CAAC,MAAM;IACd,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;QAClE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAkB,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAChDP,cAAc,CAACM,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACxC;IACF,CAAC;IAEDP,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,WAAW,GAAIC,EAAU,IAAK;IACnCb,QAAQ,CAAC,gBAAgB,CAAC;EAC7B,CAAC;AAID,CAAC;AAACD,EAAA,CA5BID,iBAA2B;EAAA,QACdD,WAAW;AAAA;AAAAiB,EAAA,GADxBhB,iBAA2B;AA6BjC,eAAeA,iBAAiB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}