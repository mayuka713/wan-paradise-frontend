{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunStoreList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DogRunStoreList = () => {\n  _s();\n  const {\n    prefectureId\n  } = useParams();\n  const [stores, setStores] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [selectedPrefecture, setSelectedPrefecture] = useState(\"\");\n  const [selectedTagIds, setSelectedTagIds] = useState([]);\n\n  // 店舗データの取得\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        const response = await fetch(`http://localhost:5003/stores/list/${prefectureId}`);\n        const data = await response.json();\n        console.log(\"API レスポンス:\", data); // データ確認\n\n        // dataが配列かどうかを確認\n        if (Array.isArray(data)) {\n          setStores(data);\n        } else if (Array.isArray(data.stores)) {\n          setStores(data.stores);\n        } else {\n          console.error(\"予期しないデータ形式:\", data);\n          setStores([]); // エラー時は空の配列に\n        }\n      } catch (error) {\n        console.error(\"店舗情報の取得に失敗しました:\", error);\n        setStores([]); // エラー時は空の配列に\n      }\n    };\n    fetchStores();\n  }, [prefectureId]);\n\n  // 都道府県名の設定\n  useEffect(() => {\n    const prefectureNames = {\n      \"1\": \"北海道\",\n      \"13\": \"東京\",\n      \"14\": \"神奈川\",\n      \"23\": \"愛知\",\n      \"26\": \"京都\",\n      \"27\": \"大阪\",\n      \"28\": \"兵庫\"\n    };\n    setSelectedPrefecture(prefectureNames[prefectureId !== null && prefectureId !== void 0 ? prefectureId : \"\"] || \"ドッグラン情報がありません\");\n  }, [prefectureId]);\n\n  // タグデータの取得（変更なし）\n\n  // タグ選択のハンドリング（変更なし）\n\n  // フィルタリングされた店舗一覧\n  const filteredStores = selectedTagIds.length > 0 ? stores.filter(store => store.tags.some(tag => selectedTagIds.includes(tag.id))) : stores;\n  const isPrefectureSupported = selectedPrefecture !== \"ドッグラン情報がありません\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\",\n      backgroundColor: \"#FAF3E0\"\n    },\n    children: isPrefectureSupported ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedPrefecture, \"\\u306E\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"14px\",\n          marginBottom: \"20px\"\n        },\n        children: \"\\u884C\\u304D\\u305F\\u3044\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u306E\\u6761\\u4EF6\\u3092\\u63A2\\u3059\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          gap: \"10px\"\n        },\n        children: tags.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTagClick(tag.id),\n          style: {\n            backgroundColor: selectedTagIds.includes(tag.id) ? \"#D1E8E1\" : \"#FFF\",\n            color: \"#333\",\n            padding: \"10px 15px\",\n            border: \"1px solid #333\",\n            borderRadius: \"20px\",\n            cursor: \"pointer\",\n            fontSize: \"14px\"\n          },\n          children: tag.name\n        }, tag.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), Array.isArray(filteredStores) && filteredStores.length > 0 ? filteredStores.map(store => {\n        console.log(\"store_img:\", store.store_img);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: store.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: store.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u4F4F\\u6240: \", store.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: store.store_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: store.store_img || \"/images/Dogrun/dogrun-tsubasa.png\" // store_img が null の場合代替\n            ,\n            alt: store.name,\n            style: {\n              width: \"200px\",\n              height: \"auto\"\n            },\n            onError: e => {\n              e.currentTarget.src = \"/images/Dogrun/dogruntsubasa.png\"; // エラー時代替画像\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 19\n          }, this)]\n        }, store.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u8A72\\u5F53\\u3059\\u308B\\u5E97\\u8217\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u60C5\\u5831\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u8A72\\u5F53\\u3059\\u308B\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(DogRunStoreList, \"dNCdhQlItFxna4VRRv7ADFu0eSI=\", false, function () {\n  return [useParams];\n});\n_c = DogRunStoreList;\nexport default DogRunStoreList;\nvar _c;\n$RefreshReg$(_c, \"DogRunStoreList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","DogRunStoreList","_s","prefectureId","stores","setStores","tags","setTags","selectedPrefecture","setSelectedPrefecture","selectedTagIds","setSelectedTagIds","fetchStores","response","fetch","data","json","console","log","Array","isArray","error","prefectureNames","filteredStores","length","filter","store","some","tag","includes","id","isPrefectureSupported","style","textAlign","padding","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","marginBottom","display","flexWrap","justifyContent","gap","map","onClick","handleTagClick","color","border","borderRadius","cursor","name","store_img","description","address","href","store_url","target","rel","src","alt","width","height","onError","e","currentTarget","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunStoreList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ninterface Store {\n  id: number;\n  name: string;\n  description: string;\n  address: string;\n  phone_number: string;\n  store_url: string;\n  store_img: string;\n  tags: Tag[];\n}\n\ninterface Tag {\n  id: number;\n  name: string;\n}\n\nconst DogRunStoreList: React.FC = () => {\n  const { prefectureId } = useParams<{ prefectureId: string }>();\n  const [stores, setStores] = useState<Store[]>([]);\n  const [tags, setTags] = useState<Tag[]>([]);\n  const [selectedPrefecture, setSelectedPrefecture] = useState<string>(\"\");\n  const [selectedTagIds, setSelectedTagIds] = useState<number[]>([]);\n\n  // 店舗データの取得\n  useEffect(() => {\n    const fetchStores = async () => {\n      try {\n        const response = await fetch(\n          `http://localhost:5003/stores/list/${prefectureId}`\n        );\n        const data = await response.json();\n        console.log(\"API レスポンス:\", data); // データ確認\n\n        // dataが配列かどうかを確認\n        if (Array.isArray(data)) {\n          setStores(data);\n        } else if (Array.isArray(data.stores)) {\n          setStores(data.stores);\n        } else {\n          console.error(\"予期しないデータ形式:\", data);\n          setStores([]); // エラー時は空の配列に\n        }\n      } catch (error) {\n        console.error(\"店舗情報の取得に失敗しました:\", error);\n        setStores([]); // エラー時は空の配列に\n      }\n    };\n    fetchStores();\n  }, [prefectureId]);\n\n  // 都道府県名の設定\nuseEffect(() => {\n  const prefectureNames: { [key: string]: string } = {\n  \"1\": \"北海道\",\n  \"13\": \"東京\",\n  \"14\": \"神奈川\",\n  \"23\": \"愛知\",\n  \"26\": \"京都\",\n  \"27\": \"大阪\",\n  \"28\": \"兵庫\",\n  };\n\nsetSelectedPrefecture(\nprefectureNames[prefectureId??\"\"] || \"ドッグラン情報がありません\"\n  );\n},[prefectureId]);\n\n  // タグデータの取得（変更なし）\n\n  // タグ選択のハンドリング（変更なし）\n\n  // フィルタリングされた店舗一覧\n  const filteredStores =\n    selectedTagIds.length > 0\n      ? stores.filter((store) =>\n          store.tags.some((tag) => selectedTagIds.includes(tag.id))\n        )\n      : stores;\n\n  const isPrefectureSupported =\n    selectedPrefecture !== \"ドッグラン情報がありません\";\n\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        padding: \"20px\",\n        backgroundColor: \"#FAF3E0\",\n      }}\n    >\n      {isPrefectureSupported ? (\n        <>\n          <h2>{selectedPrefecture}のドッグラン</h2>\n          <p style={{ fontSize: \"14px\", marginBottom: \"20px\" }}>\n            行きたいドッグランの条件を探す\n          </p>\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"center\",\n              gap: \"10px\",\n            }}\n          >\n            {tags.map((tag) => (\n              <button\n                key={tag.id}\n                onClick={() => handleTagClick(tag.id)}\n                style={{\n                  backgroundColor: selectedTagIds.includes(tag.id)\n                    ? \"#D1E8E1\"\n                    : \"#FFF\",\n                  color: \"#333\",\n                  padding: \"10px 15px\",\n                  border: \"1px solid #333\",\n                  borderRadius: \"20px\",\n                  cursor: \"pointer\",\n                  fontSize: \"14px\",\n                }}\n              >\n                {tag.name}\n              </button>\n            ))}\n          </div>\n          {Array.isArray(filteredStores) && filteredStores.length > 0 ? (\n            filteredStores.map((store) => {\n              console.log(\"store_img:\", store.store_img);\n\n              return (\n                <div key={store.id} style={{ marginBottom: \"20px\" }}>\n                  <h3>{store.name}</h3>\n                  <p>{store.description}</p>\n                  <p>住所: {store.address}</p>\n                  <a\n                    href={store.store_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    URL\n                  </a>\n                  <br />\n                  <img\n                    src={\n                      store.store_img || \"/images/Dogrun/dogrun-tsubasa.png\"\n                    } // store_img が null の場合代替\n                    alt={store.name}\n                    style={{ width: \"200px\", height: \"auto\" }}\n                    onError={(e) => {\n                      e.currentTarget.src =\n                        \"/images/Dogrun/dogruntsubasa.png\"; // エラー時代替画像\n                    }}\n                  />\n                </div>\n              );\n            })\n          ) : (\n            <p>該当する店舗がありません。</p>\n          )}\n        </>\n      ) : (\n        <>\n          <h2>ドッグラン情報がありません</h2>\n          <p>該当するドッグランが見つかりません。</p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default DogRunStoreList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAkB7C,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM;IAAEC;EAAa,CAAC,GAAGP,SAAS,CAA2B,CAAC;EAC9D,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAU,EAAE,CAAC;EACjD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAQ,EAAE,CAAC;EAC3C,MAAM,CAACa,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGd,QAAQ,CAAS,EAAE,CAAC;EACxE,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAW,EAAE,CAAC;;EAElE;EACAD,SAAS,CAAC,MAAM;IACd,MAAMkB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qCAAqCX,YAAY,EACnD,CAAC;QACD,MAAMY,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,IAAI,CAAC,CAAC,CAAC;;QAEjC;QACA,IAAII,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,EAAE;UACvBV,SAAS,CAACU,IAAI,CAAC;QACjB,CAAC,MAAM,IAAII,KAAK,CAACC,OAAO,CAACL,IAAI,CAACX,MAAM,CAAC,EAAE;UACrCC,SAAS,CAACU,IAAI,CAACX,MAAM,CAAC;QACxB,CAAC,MAAM;UACLa,OAAO,CAACI,KAAK,CAAC,aAAa,EAAEN,IAAI,CAAC;UAClCV,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;QACjB;MACF,CAAC,CAAC,OAAOgB,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;QACvChB,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACjB;IACF,CAAC;IACDO,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACT,YAAY,CAAC,CAAC;;EAElB;EACFT,SAAS,CAAC,MAAM;IACd,MAAM4B,eAA0C,GAAG;MACnD,GAAG,EAAE,KAAK;MACV,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,IAAI;MACV,IAAI,EAAE;IACN,CAAC;IAEHb,qBAAqB,CACrBa,eAAe,CAACnB,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAE,EAAE,CAAC,IAAI,eACnC,CAAC;EACH,CAAC,EAAC,CAACA,YAAY,CAAC,CAAC;;EAEf;;EAEA;;EAEA;EACA,MAAMoB,cAAc,GAClBb,cAAc,CAACc,MAAM,GAAG,CAAC,GACrBpB,MAAM,CAACqB,MAAM,CAAEC,KAAK,IAClBA,KAAK,CAACpB,IAAI,CAACqB,IAAI,CAAEC,GAAG,IAAKlB,cAAc,CAACmB,QAAQ,CAACD,GAAG,CAACE,EAAE,CAAC,CAC1D,CAAC,GACD1B,MAAM;EAEZ,MAAM2B,qBAAqB,GACzBvB,kBAAkB,KAAK,eAAe;EAExC,oBACEV,OAAA;IACEkC,KAAK,EAAE;MACLC,SAAS,EAAE,QAAQ;MACnBC,OAAO,EAAE,MAAM;MACfC,eAAe,EAAE;IACnB,CAAE;IAAAC,QAAA,EAEDL,qBAAqB,gBACpBjC,OAAA,CAAAE,SAAA;MAAAoC,QAAA,gBACEtC,OAAA;QAAAsC,QAAA,GAAK5B,kBAAkB,EAAC,sCAAM;MAAA;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnC1C,OAAA;QAAGkC,KAAK,EAAE;UAAES,QAAQ,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAN,QAAA,EAAC;MAEtD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJ1C,OAAA;QACEkC,KAAK,EAAE;UACLW,OAAO,EAAE,MAAM;UACfC,QAAQ,EAAE,MAAM;UAChBC,cAAc,EAAE,QAAQ;UACxBC,GAAG,EAAE;QACP,CAAE;QAAAV,QAAA,EAED9B,IAAI,CAACyC,GAAG,CAAEnB,GAAG,iBACZ9B,OAAA;UAEEkD,OAAO,EAAEA,CAAA,KAAMC,cAAc,CAACrB,GAAG,CAACE,EAAE,CAAE;UACtCE,KAAK,EAAE;YACLG,eAAe,EAAEzB,cAAc,CAACmB,QAAQ,CAACD,GAAG,CAACE,EAAE,CAAC,GAC5C,SAAS,GACT,MAAM;YACVoB,KAAK,EAAE,MAAM;YACbhB,OAAO,EAAE,WAAW;YACpBiB,MAAM,EAAE,gBAAgB;YACxBC,YAAY,EAAE,MAAM;YACpBC,MAAM,EAAE,SAAS;YACjBZ,QAAQ,EAAE;UACZ,CAAE;UAAAL,QAAA,EAEDR,GAAG,CAAC0B;QAAI,GAdJ1B,GAAG,CAACE,EAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeL,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EACLrB,KAAK,CAACC,OAAO,CAACG,cAAc,CAAC,IAAIA,cAAc,CAACC,MAAM,GAAG,CAAC,GACzDD,cAAc,CAACwB,GAAG,CAAErB,KAAK,IAAK;QAC5BT,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEQ,KAAK,CAAC6B,SAAS,CAAC;QAE1C,oBACEzD,OAAA;UAAoBkC,KAAK,EAAE;YAAEU,YAAY,EAAE;UAAO,CAAE;UAAAN,QAAA,gBAClDtC,OAAA;YAAAsC,QAAA,EAAKV,KAAK,CAAC4B;UAAI;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrB1C,OAAA;YAAAsC,QAAA,EAAIV,KAAK,CAAC8B;UAAW;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1B1C,OAAA;YAAAsC,QAAA,GAAG,gBAAI,EAACV,KAAK,CAAC+B,OAAO;UAAA;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1B1C,OAAA;YACE4D,IAAI,EAAEhC,KAAK,CAACiC,SAAU;YACtBC,MAAM,EAAC,QAAQ;YACfC,GAAG,EAAC,qBAAqB;YAAAzB,QAAA,EAC1B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACJ1C,OAAA;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACN1C,OAAA;YACEgE,GAAG,EACDpC,KAAK,CAAC6B,SAAS,IAAI,mCACpB,CAAC;YAAA;YACFQ,GAAG,EAAErC,KAAK,CAAC4B,IAAK;YAChBtB,KAAK,EAAE;cAAEgC,KAAK,EAAE,OAAO;cAAEC,MAAM,EAAE;YAAO,CAAE;YAC1CC,OAAO,EAAGC,CAAC,IAAK;cACdA,CAAC,CAACC,aAAa,CAACN,GAAG,GACjB,kCAAkC,CAAC,CAAC;YACxC;UAAE;YAAAzB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA,GAtBMd,KAAK,CAACI,EAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAuBb,CAAC;MAEV,CAAC,CAAC,gBAEF1C,OAAA;QAAAsC,QAAA,EAAG;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACpB;IAAA,eACD,CAAC,gBAEH1C,OAAA,CAAAE,SAAA;MAAAoC,QAAA,gBACEtC,OAAA;QAAAsC,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtB1C,OAAA;QAAAsC,QAAA,EAAG;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,eACzB;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtC,EAAA,CAvJID,eAAyB;EAAA,QACJL,SAAS;AAAA;AAAAyE,EAAA,GAD9BpE,eAAyB;AAyJ/B,eAAeA,eAAe;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}