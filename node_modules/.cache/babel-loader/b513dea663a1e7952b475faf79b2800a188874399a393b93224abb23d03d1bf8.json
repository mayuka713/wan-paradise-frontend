{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./DogRunPage.css\";\nimport DogrunImage from \"../assets/images/Dogrun/dogrun.top.png\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DogRunPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loopedStores, setLoopedStores] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0); // 現在のインデックス\n  const sliderRef = useRef(null); // スライダーの参照\n\n  const handleClick = () => {\n    navigate(\"/DogrunRegionsList\");\n  };\n  useEffect(() => {\n    const fetchStoreData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/stores/type/random/1\");\n        if (!response.ok) {\n          throw new Error(`HTTPエラー: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"取得したデータ:\", data);\n\n        // バックエンドでランダム処理済みなのでそのまま設定\n        setLoopedStores(data);\n      } catch (error) {\n        console.error(\"データ取得中にエラーが発生しました:\", error);\n      }\n    };\n    fetchStoreData();\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentIndex(prevIndex => loopedStores.length ? (prevIndex + 1) % loopedStores.length : 0);\n    }, 3000); // 3秒ごとに次のスライドへ\n\n    return () => clearInterval(interval); // クリーンアップ\n  }, [loopedStores]);\n  useEffect(() => {\n    if (sliderRef.current) {\n      const slideWidth = sliderRef.current.clientWidth / loopedStores.length;\n      sliderRef.current.style.transition = \"transform 0.5s ease-in-out\";\n      sliderRef.current.style.transform = `translateX(-${currentIndex * slideWidth}px)`;\n\n      // 最後のスライドが表示されたら、次に1件目を自然につなげる\n      if (currentIndex === loopedStores.length) {\n        setTimeout(() => {\n          sliderRef.current.style.transition = \"none\"; // リセット\n          sliderRef.current.style.transform = \"translateX(0)\"; // 1件目に戻る\n          setCurrentIndex(0);\n        }, 500); // アニメーション終了後\n      }\n    }\n  }, [currentIndex, loopedStores]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dogrun-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: handleClick,\n        className: \"search-dogrun\",\n        children: \"\\u5168\\u56FD\\u306E\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u3092\\u63A2\\u3059\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: DogrunImage,\n          alt: \"\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u306E\\u30A4\\u30E9\\u30B9\\u30C8\",\n          className: \"dogrun-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dogrun-slider-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dogrun-slider\",\n          ref: sliderRef,\n          children: loopedStores.concat(loopedStores).map((store, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            // 一意のキーを設定\n            className: \"store-card\",\n            onClick: () => {\n              navigate(`/store/detail/${store.id}`);\n            },\n            children: [store.store_img.length > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: store.store_img[0],\n              alt: store.store_name,\n              className: \"store-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"slider-store-name\",\n              children: store.store_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"slider-prefecture-name\",\n              children: store.prefecture_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, `${store.id}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DogRunPage, \"qgmHm5b5G1tV+NX+kXqIDvmNwGk=\", false, function () {\n  return [useNavigate];\n});\n_c = DogRunPage;\nexport default DogRunPage;\nvar _c;\n$RefreshReg$(_c, \"DogRunPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useNavigate","DogrunImage","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","DogRunPage","_s","navigate","loopedStores","setLoopedStores","currentIndex","setCurrentIndex","sliderRef","handleClick","fetchStoreData","response","fetch","ok","Error","status","data","json","console","log","error","interval","setInterval","prevIndex","length","clearInterval","current","slideWidth","clientWidth","style","transition","transform","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","alt","ref","concat","map","store","index","id","store_img","store_name","prefecture_name","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunPage.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./DogRunPage.css\";\nimport DogrunImage from \"../assets/images/Dogrun/dogrun.top.png\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\n\ninterface Store {\n  id: number;\n  store_name: string;\n  description: string;\n  store_img: string[];\n  address: string;\n  phone_number: string;\n  opening_hours: string;\n  store_url: string;\n  prefecture_name: string;\n}\n\nconst DogRunPage: React.FC = () => {\n  const navigate = useNavigate();\n  const [loopedStores, setLoopedStores] = useState<Store[]>([]);\n  const [currentIndex, setCurrentIndex] = useState(0); // 現在のインデックス\n  const sliderRef = useRef<HTMLDivElement>(null); // スライダーの参照\n\n  const handleClick = () => {\n    navigate(\"/DogrunRegionsList\");\n  };\n\n  useEffect(() => {\n    const fetchStoreData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/stores/type/random/1\");\n        if (!response.ok) {\n          throw new Error(`HTTPエラー: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"取得したデータ:\", data);\n\n        // バックエンドでランダム処理済みなのでそのまま設定\n        setLoopedStores(data);\n      } catch (error) {\n        console.error(\"データ取得中にエラーが発生しました:\", error);\n      }\n    };\n\n    fetchStoreData();\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentIndex((prevIndex) =>\n        loopedStores.length ? (prevIndex + 1) % loopedStores.length : 0\n      );\n    }, 3000); // 3秒ごとに次のスライドへ\n\n    return () => clearInterval(interval); // クリーンアップ\n  }, [loopedStores]);\n\n  useEffect(() => {\n    if (sliderRef.current) {\n      const slideWidth = sliderRef.current.clientWidth / loopedStores.length;\n      sliderRef.current.style.transition = \"transform 0.5s ease-in-out\";\n      sliderRef.current.style.transform = `translateX(-${currentIndex * slideWidth}px)`;\n\n      // 最後のスライドが表示されたら、次に1件目を自然につなげる\n      if (currentIndex === loopedStores.length) {\n        setTimeout(() => {\n          sliderRef.current!.style.transition = \"none\"; // リセット\n          sliderRef.current!.style.transform = \"translateX(0)\"; // 1件目に戻る\n          setCurrentIndex(0);\n        }, 500); // アニメーション終了後\n      }\n    }\n  }, [currentIndex, loopedStores]);\n\n  return (\n    <>\n      <Header />\n      <div className=\"dogrun-page-container\">\n        <p onClick={handleClick} className=\"search-dogrun\">\n          全国のドッグランを探す\n        </p>\n        <div>\n          <img src={DogrunImage} alt=\"ドッグランのイラスト\" className=\"dogrun-image\" />\n        </div>\n        <div className=\"dogrun-slider-container\">\n          <div className=\"dogrun-slider\" ref={sliderRef}>\n            {loopedStores.concat(loopedStores).map((store, index) => (\n              <div\n                key={`${store.id}-${index}`} // 一意のキーを設定\n                className=\"store-card\"\n                onClick={() => {\n                  navigate(`/store/detail/${store.id}`);\n                }}\n              >\n                {store.store_img.length > 0 && (\n                  <img\n                    src={store.store_img[0]}\n                    alt={store.store_name}\n                    className=\"store-image\"\n                  />\n                )}\n                <h3 className=\"slider-store-name\">{store.store_name}</h3>\n                <h3 className=\"slider-prefecture-name\">{store.prefecture_name}</h3>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default DogRunPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}