{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Hospital/HospitalPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport \"./HospitalPage.css\";\nimport hospital from \"../assets/images/Hospital/hospital.png\";\n\n// hospital コンポーネント（都道府県別のページ）\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HospitalPage = () => {\n  _s();\n  const {\n    prefecture\n  } = useParams(); // URLから都道府県を取得\n  const location = useLocation();\n  //useNavigateはページ遷移を行うためのフック\n  const navigate = useNavigate();\n  const [selectedOptions, setselectedOptions] = useState([]);\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false);\n  // ドロップダウンの表示/非表示を切り替える\n  const toggleDropdown = () => {\n    setIsDropdownVisible(!isDropdownVisible);\n  };\n  // 条件の選択/解除\n  const handleOptionClick = option => {\n    setselectedOptions(prevSelected => prevSelected.includes(option) ? prevSelected.filter(item => item == option) // 選択済みのオプションを削除\n    : [...prevSelected, option] // 新しいオプションを追加\n    );\n  };\n  // 都道府県のリンククリック時の処理\n  const handlePrefectureClick = prefectureKey => {\n    navigate(`/hospital/${prefectureKey}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hospital-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        style: {\n          textDecoration: \"none\",\n          color: \"black\"\n        },\n        children: \"wan paradise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u52D5\\u7269\\u75C5\\u9662\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-container\",\n      onClick: toggleDropdown,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u5168\\u56FD\\u306E\\u52D5\\u7269\\u75C5\\u9662\\u3092\\u63A2\\u3059\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hospital-img\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: hospital,\n          alt: \"\\u75C5\\u9662\\u306E\\u30A4\\u30E9\\u30B9\\u30C8\",\n          className: \"hospital-illust\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), isDropdownVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(prefectureNames).map(key => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handlePrefectureClick(key),\n          children: prefectureNames[key]\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(HospitalPage, \"xWmN2BLcYEYIo6iqu7IxuISPDMM=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = HospitalPage;\nexport default HospitalPage;\nvar _c;\n$RefreshReg$(_c, \"HospitalPage\");","map":{"version":3,"names":["React","useState","Link","useParams","useNavigate","useLocation","hospital","jsxDEV","_jsxDEV","HospitalPage","_s","prefecture","location","navigate","selectedOptions","setselectedOptions","isDropdownVisible","setIsDropdownVisible","toggleDropdown","handleOptionClick","option","prevSelected","includes","filter","item","handlePrefectureClick","prefectureKey","className","children","to","style","textDecoration","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","Object","keys","prefectureNames","map","key","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Hospital/HospitalPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport \"./HospitalPage.css\";\nimport hospital from \"../assets/images/Hospital/hospital.png\";\n\n// hospital コンポーネント（都道府県別のページ）\nconst HospitalPage: React.FC = () => {\n  const { prefecture } = useParams<{ prefecture: string }>(); // URLから都道府県を取得\n  const location = useLocation();\n  //useNavigateはページ遷移を行うためのフック\n  const navigate = useNavigate();\n  const [selectedOptions, setselectedOptions] = useState<string[]>([]);\n  const [isDropdownVisible, setIsDropdownVisible] = useState(false)\n  // ドロップダウンの表示/非表示を切り替える\n  const toggleDropdown = () => {\n    setIsDropdownVisible(!isDropdownVisible);\n  };\n  // 条件の選択/解除\n  const handleOptionClick = (option: string) => {\n    setselectedOptions((prevSelected) =>\n      prevSelected.includes(option)\n        ? prevSelected.filter((item) => item! == option)// 選択済みのオプションを削除\n        : [...prevSelected, option] // 新しいオプションを追加\n    );\n  };\n  // 都道府県のリンククリック時の処理\n  const handlePrefectureClick = (prefectureKey: string) => {\n    navigate(`/hospital/${prefectureKey}`);\n  };\n  return (\n    <div className=\"hospital-page\">\n      <header className=\"header\">\n        <Link to=\"/\" style={{ textDecoration: \"none\", color: \"black\" }}>\n          wan paradise\n        </Link>\n      </header>\n      <h1>動物病院</h1>\n      <div className=\"tab-container\" onClick={toggleDropdown}>\n        <span>全国の動物病院を探す</span>\n        <div className=\"hospital-img\">\n          <img src={hospital}\n            alt=\"病院のイラスト\"\n            className=\"hospital-illust\" />\n        </div>\n      </div>\n      {/* ドロップダウンメニューの表示 */}\n      {isDropdownVisible && (\n        <div className=\"dropdown-menu\">\n          <ul>\n            {Object.keys(prefectureNames).map((key) => (\n              <li key={key} onClick={() => handlePrefectureClick(key)}>\n                {prefectureNames[key]}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HospitalPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}