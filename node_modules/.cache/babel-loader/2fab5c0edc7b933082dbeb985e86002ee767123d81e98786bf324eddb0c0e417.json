{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./DogRunPage.css\";\nimport DogrunImage from \"../assets/images/Dogrun/dogrun.png\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport AutoImageSlider from \"../../AutoImageSlider\";\nimport GlobalImageSlider from \"../../GlobalImageSlider\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DogRunPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [stores, setStores] = useState([]);\n  const [allImages, setAllImages] = useState([]);\n  const handleClick = () => {\n    navigate(\"/DogrunRegionsList\");\n  };\n  useEffect(() => {\n    // 店舗データを取得\n    const fetchStoreData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/stores/type/1\");\n        const data = await response.json();\n\n        // store_img を JSON パースし、配列でない場合は配列に変換\n        const parsedData = data.map(store => ({\n          ...store,\n          store_img: Array.isArray(store.store_img) ? store.store_img : JSON.parse(store.store_img)\n        }));\n\n        // 全画像をまとめる\n        const allImagesArray = parsedData.flatMap(store => store.store_img);\n        setStores(parsedData);\n        setAllImages(allImagesArray);\n      } catch (error) {\n        console.error(\"データ取得エラー:\", error);\n      }\n    };\n    fetchStoreData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dogrun-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: handleClick,\n        className: \"search-dogrun\",\n        children: \"\\u5168\\u56FD\\u306E\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u3092\\u63A2\\u3059\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: DogrunImage,\n          alt: \"DogrunImage\",\n          className: \"dogrun-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"global-slider-container\",\n        children: /*#__PURE__*/_jsxDEV(GlobalImageSlider, {\n          images: allImages,\n          autoPlayInterval: 3000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"store-list\",\n        children: stores.map(store => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"store-card\",\n          children: [/*#__PURE__*/_jsxDEV(AutoImageSlider, {\n            images: store.store_img,\n            autoPlay: true,\n            autoPlayInterval: 5000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: store.store_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: store.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, store.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DogRunPage, \"1cbxh+Eks9eiALM7OJA9bIZhzNg=\", false, function () {\n  return [useNavigate];\n});\n_c = DogRunPage;\nexport default DogRunPage;\nvar _c;\n$RefreshReg$(_c, \"DogRunPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","DogrunImage","Header","Footer","AutoImageSlider","GlobalImageSlider","jsxDEV","_jsxDEV","Fragment","_Fragment","DogRunPage","_s","navigate","stores","setStores","allImages","setAllImages","handleClick","fetchStoreData","response","fetch","data","json","parsedData","map","store","store_img","Array","isArray","JSON","parse","allImagesArray","flatMap","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","alt","images","autoPlayInterval","autoPlay","store_name","description","id","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./DogRunPage.css\";\nimport DogrunImage from \"../assets/images/Dogrun/dogrun.png\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport AutoImageSlider from \"../../AutoImageSlider\";\nimport GlobalImageSlider from \"../../GlobalImageSlider\";\n\ninterface Store {\n  id: number;\n  store_name: string;\n  description: string;\n  store_img: string[];\n  address: string;\n  phone_number: string;\n  opening_hours: string;\n  store_url: string;\n}\n\nconst DogRunPage: React.FC = () => {\n  const navigate = useNavigate();\n  const [stores, setStores] = useState<Store[]>([]);\n  const [allImages, setAllImages] = useState<string[]>([]);\n\n  const handleClick = () => {\n    navigate(\"/DogrunRegionsList\");\n  };\n\n  useEffect(() => {\n    // 店舗データを取得\n    const fetchStoreData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5003/stores/type/1\");\n        const data = await response.json();\n\n        // store_img を JSON パースし、配列でない場合は配列に変換\n        const parsedData = data.map((store: any) => ({\n          ...store,\n          store_img: Array.isArray(store.store_img)\n            ? store.store_img\n            : JSON.parse(store.store_img),\n        }));\n\n        // 全画像をまとめる\n        const allImagesArray = parsedData.flatMap((store: Store) => store.store_img);\n        setStores(parsedData);\n        setAllImages(allImagesArray);\n\n      } catch (error) {\n        console.error(\"データ取得エラー:\", error);\n      }\n    };\n\n    fetchStoreData();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <div className=\"dogrun-page-container\">\n        <p onClick={handleClick} className=\"search-dogrun\">\n          全国のドッグランを探す\n        </p>\n        <div>\n          <img src={DogrunImage} alt=\"DogrunImage\" className=\"dogrun-image\" />\n        </div>\n\n        {/* グローバルスライダー */}\n        <div className=\"global-slider-container\">\n          <GlobalImageSlider images={allImages} autoPlayInterval={3000} />\n        </div>\n\n        <div className=\"store-list\">\n          {stores.map((store) => (\n            <div key={store.id} className=\"store-card\">\n              {/* 各店舗の画像スライダー */}\n              <AutoImageSlider images={store.store_img} autoPlay={true} autoPlayInterval={5000} />\n              <h3>{store.store_name}</h3>\n              <p>{store.description}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default DogRunPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}