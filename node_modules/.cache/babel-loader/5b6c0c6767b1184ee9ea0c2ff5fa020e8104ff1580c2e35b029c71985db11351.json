{"ast":null,"code":"var _jsxFileName = \"/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunStoreList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DogRunStoreList = () => {\n  _s();\n  const {\n    prefectureId\n  } = useParams();\n  const [stores, setStores] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [selectedTagId, setSelectedTagId] = useState(null);\n  const [selectedPrefecture, setSelectedPrefecture] = useState(\"\");\n  const [selectedTagIds, setSelectedTagIds] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const prefectureNames = {\n    \"1\": \"北海道\",\n    \"60\": \"東京\",\n    \"61\": \"神奈川\",\n    \"70\": \"愛知\",\n    \"73\": \"京都\",\n    \"74\": \"大阪\",\n    \"75\": \"兵庫\"\n  };\n\n  // 店舗データの取得\n  useEffect(() => {\n    const fetchStores = async () => {\n      setLoading(true);\n      setError(null); // エラー状態をリセット\n\n      try {\n        const response = await fetch(`http://localhost:5003/stores/list/${prefectureId}`);\n        const data = await response.json();\n        if (Array.isArray(data) && data.every(isStore)) {\n          setStores(data);\n        } else {\n          throw new Error(\"店舗情報の形式が不正です。\");\n        }\n      } catch (error) {\n        console.error(\"店舗情報の取得に失敗しました:\", error);\n        setError(error instanceof Error ? error.message : \"不明なエラーが発生しました。\");\n        setStores([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    setSelectedPrefecture(prefectureNames[prefectureId !== null && prefectureId !== void 0 ? prefectureId : \"\"] || \"ドッグラン情報がありません\");\n    fetchStores();\n  }, [prefectureId]);\n\n  // タグデータの取得\n  useEffect(() => {\n    const fetchTags = async () => {\n      setLoading(true);\n      setError(null); // エラー状態をリセット\n\n      try {\n        const response = await fetch(\"http://localhost:5003/tags\");\n        if (!response.ok) {\n          throw new Error(\"タグ情報の取得に失敗しました。\");\n        }\n        const data = await response.json();\n        if (Array.isArray(data) && data.every(isTag)) {\n          setTags(data);\n        } else {\n          throw new Error(\"タグ情報の形式が不正です。\");\n        }\n      } catch (error) {\n        console.error(\"タグ情報の取得に失敗しました:\", error);\n        setError(error instanceof Error ? error.message : \"不明なエラーが発生しました。\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTags();\n  }, []);\n\n  // 型ガード関数でデータの型チェック\n  const isStore = item => typeof item === \"object\" && item !== null && typeof item.id === \"number\" && typeof item.name === \"string\" && Array.isArray(item.tags) && item.tags.every(isTag);\n  const isTag = item => typeof item === \"object\" && item !== null && typeof item.id === \"number\" && typeof item.name === \"string\";\n\n  // タグ選択のハンドリング\n  const handleTagClick = tagId => {\n    setSelectedTagIds(prevSelectedTagIds => prevSelectedTagIds.includes(tagId) ? prevSelectedTagIds.filter(id => id !== tagId) : [...prevSelectedTagIds, tagId]);\n    setSelectedTagId(tagId);\n  };\n\n  // フィルタリングされた店舗一覧\n  const filteredStores = selectedTagIds.length === 4 && [3, 4, 5, 9].every(requiredId => selectedTagIds.includes(requiredId)) ? stores.filter(store => store.id === 1) : selectedTagIds.length > 0 ? stores.filter(store => store.tags.some(tag => selectedTagIds.includes(tag.id))) : stores;\n  const isPrefectureSupported = selectedPrefecture !== \"ドッグラン情報がありません\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\",\n      backgroundColor: \"#FAF3E0\"\n    },\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\",\n        marginBottom: \"20px\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }, this), isPrefectureSupported && !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedPrefecture, \"\\u306E\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"14px\",\n          marginBottom: \"20px\"\n        },\n        children: \"\\u884C\\u304D\\u305F\\u3044\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u306E\\u6761\\u4EF6\\u3092\\u63A2\\u3059\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          gap: \"10px\"\n        },\n        children: tags.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTagClick(tag.id),\n          style: {\n            backgroundColor: selectedTagId === tag.id ? \"#D1E8E2\" : \"#FFF\",\n            color: \"#333\",\n            padding: \"10px 15px\",\n            border: \"1px solid #333\",\n            borderRadius: \"20px\",\n            cursor: \"pointer\",\n            fontSize: \"14px\"\n          },\n          children: tag.name\n        }, tag.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), filteredStores.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"30px\"\n        },\n        children: filteredStores.map(store => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: store.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: store.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u4F4F\\u6240: \", store.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: store.store_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: store.store_img,\n            alt: store.name,\n            style: {\n              width: \"200px\",\n              height: \"auto\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 19\n          }, this)]\n        }, store.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u8A72\\u5F53\\u3059\\u308B\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u60C5\\u5831\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u8A72\\u5F53\\u3059\\u308B\\u30C9\\u30C3\\u30B0\\u30E9\\u30F3\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(DogRunStoreList, \"M693z38Va3rA0tdJo27N+n9OFN8=\", false, function () {\n  return [useParams];\n});\n_c = DogRunStoreList;\nexport default DogRunStoreList;\nvar _c;\n$RefreshReg$(_c, \"DogRunStoreList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","DogRunStoreList","_s","prefectureId","stores","setStores","tags","setTags","selectedTagId","setSelectedTagId","selectedPrefecture","setSelectedPrefecture","selectedTagIds","setSelectedTagIds","loading","setLoading","error","setError","prefectureNames","fetchStores","response","fetch","data","json","Array","isArray","every","isStore","Error","console","message","fetchTags","ok","isTag","item","id","name","handleTagClick","tagId","prevSelectedTagIds","includes","filter","filteredStores","length","requiredId","store","some","tag","isPrefectureSupported","style","textAlign","padding","backgroundColor","children","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","display","flexWrap","justifyContent","gap","map","onClick","border","borderRadius","cursor","marginTop","description","address","href","store_url","target","rel","src","store_img","alt","width","height","_c","$RefreshReg$"],"sources":["/Users/hadamayuka/Desktop/wan_paradise/my-app/src/pages/Dogrun/DogRunStoreList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\ninterface Store {\n  id: number;\n  name: string;\n  description: string;\n  address: string;\n  phone_number: string;\n  store_url: string;\n  store_img: string;\n  tags: Tag[];\n}\n\ninterface Tag {\n  id: number;\n  name: string;\n}\n\nconst DogRunStoreList: React.FC = () => {\n  const { prefectureId } = useParams<{ prefectureId: string }>();\n  const [stores, setStores] = useState<Store[]>([]);\n  const [tags, setTags] = useState<Tag[]>([]);\n  const [selectedTagId, setSelectedTagId] = useState<number | null>(null);\n  const [selectedPrefecture, setSelectedPrefecture] = useState<string>(\"\");\n  const [selectedTagIds, setSelectedTagIds] = useState<number[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const prefectureNames: { [key: string]: string } = {\n    \"1\": \"北海道\",\n    \"60\": \"東京\",\n    \"61\": \"神奈川\",\n    \"70\": \"愛知\",\n    \"73\": \"京都\",\n    \"74\": \"大阪\",\n    \"75\": \"兵庫\",\n  };\n\n  // 店舗データの取得\n  useEffect(() => {\n    const fetchStores = async () => {\n      setLoading(true);\n      setError(null); // エラー状態をリセット\n\n      try {\n        const response = await fetch(\n          `http://localhost:5003/stores/list/${prefectureId}`\n        );\n\n        const data: unknown = await response.json();\n        if (Array.isArray(data) && data.every(isStore)) {\n          setStores(data as Store[]);\n        } else {\n          throw new Error(\"店舗情報の形式が不正です。\");\n        }\n      } catch (error: unknown) {\n        console.error(\"店舗情報の取得に失敗しました:\", error);\n        setError(error instanceof Error ? error.message : \"不明なエラーが発生しました。\");\n        setStores([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    setSelectedPrefecture(\n      prefectureNames[prefectureId ?? \"\"] || \"ドッグラン情報がありません\"\n    );\n\n    fetchStores();\n  }, [prefectureId]);\n\n  // タグデータの取得\n  useEffect(() => {\n    const fetchTags = async () => {\n      setLoading(true);\n      setError(null); // エラー状態をリセット\n\n      try {\n        const response = await fetch(\"http://localhost:5003/tags\");\n\n        if (!response.ok) {\n          throw new Error(\"タグ情報の取得に失敗しました。\");\n        }\n\n        const data: unknown = await response.json();\n        if (Array.isArray(data) && data.every(isTag)) {\n          setTags(data as Tag[]);\n        } else {\n          throw new Error(\"タグ情報の形式が不正です。\");\n        }\n      } catch (error: unknown) {\n        console.error(\"タグ情報の取得に失敗しました:\", error);\n        setError(error instanceof Error ? error.message : \"不明なエラーが発生しました。\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTags();\n  }, []);\n\n  // 型ガード関数でデータの型チェック\n  const isStore = (item: any): item is Store =>\n    typeof item === \"object\" &&\n    item !== null &&\n    typeof item.id === \"number\" &&\n    typeof item.name === \"string\" &&\n    Array.isArray(item.tags) &&\n    item.tags.every(isTag);\n\n  const isTag = (item: any): item is Tag =>\n    typeof item === \"object\" &&\n    item !== null &&\n    typeof item.id === \"number\" &&\n    typeof item.name === \"string\";\n\n  // タグ選択のハンドリング\n  const handleTagClick = (tagId: number) => {\n    setSelectedTagIds((prevSelectedTagIds) =>\n      prevSelectedTagIds.includes(tagId)\n        ? prevSelectedTagIds.filter((id) => id !== tagId)\n        : [...prevSelectedTagIds, tagId]\n    );\n    setSelectedTagId(tagId);\n  };\n\n  // フィルタリングされた店舗一覧\n  const filteredStores =\n    selectedTagIds.length === 4 &&\n    [3, 4, 5, 9].every((requiredId) => selectedTagIds.includes(requiredId))\n      ? stores.filter((store) => store.id === 1)\n      : selectedTagIds.length > 0\n      ? stores.filter((store) =>\n          store.tags.some((tag) => selectedTagIds.includes(tag.id))\n        )\n      : stores;\n\n  const isPrefectureSupported =\n    selectedPrefecture !== \"ドッグラン情報がありません\";\n\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        padding: \"20px\",\n        backgroundColor: \"#FAF3E0\",\n      }}\n    >\n      {/* エラーメッセージの表示 */}\n      {error && <div style={{ color: \"red\", marginBottom: \"20px\" }}>{error}</div>}\n\n      {/* ロード中の表示 */}\n      {loading && <p>読み込み中...</p>}\n\n      {/* 条件付きレンダリング */}\n      {isPrefectureSupported && !loading ? (\n        <>\n          <h2>{selectedPrefecture}のドッグラン</h2>\n          <p style={{ fontSize: \"14px\", marginBottom: \"20px\" }}>\n            行きたいドッグランの条件を探す\n          </p>\n\n          {/* タグボタン */}\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"center\",\n              gap: \"10px\",\n            }}\n          >\n            {tags.map((tag) => (\n              <button\n                key={tag.id}\n                onClick={() => handleTagClick(tag.id)}\n                style={{\n                  backgroundColor: selectedTagId === tag.id ? \"#D1E8E2\" : \"#FFF\",\n                  color: \"#333\",\n                  padding: \"10px 15px\",\n                  border: \"1px solid #333\",\n                  borderRadius: \"20px\",\n                  cursor: \"pointer\",\n                  fontSize: \"14px\",\n                }}\n              >\n                {tag.name}\n              </button>\n            ))}\n          </div>\n\n          {/* フィルタリングされた店舗表示 */}\n          {filteredStores.length > 0 ? (\n            <div style={{ marginTop: \"30px\" }}>\n              {filteredStores.map((store) => (\n                <div key={store.id} style={{ marginBottom: \"20px\" }}>\n                  <h3>{store.name}</h3>\n                  <p>{store.description}</p>\n                  <p>住所: {store.address}</p>\n                  <a href={store.store_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    URL\n                  </a>\n                  <br />\n                  <img\n                    src={store.store_img}\n                    alt={store.name}\n                    style={{ width: \"200px\", height: \"auto\" }}\n                  />\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p>該当するドッグランが見つかりません。</p>\n          )}\n        </>\n      ) : (\n        <>\n          <h2>ドッグラン情報がありません</h2>\n          <p>該当するドッグランが見つかりません。</p>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default DogRunStoreList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}